{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Kohii kohii (\u30b3\u30fc\u30d2\u30fc\u3001 [ko\u031e\u02d0\u00e7i\u02d0] ) Video playback for Android made easy. Kohii is a high level Video playback library, built from the experience creating/maintaining toro and ExoPlayer . Kohii targets directly the Video playback on Android, giving developer powerful playback control, including (1) easy way to start a Video playback with confidence (hint: only one line), (2) smooth playback experience on ~~list~~ any Views (RecyclerView, NestedScrollView, etc). (3) smooth transition from local playback to fullscreen playback and vice versa, This library would not deprecate toro anytime soon. Demo Automatic playback Playback continuity (Seamless fullscreen) Setup Add to your module's build.gradle dependencies // Update top level build.gradle allprojects { repositories { // \u2b06 Other repositories // Add this one below: maven { url https://oss.sonatype.org/content/repositories/snapshots } } } // Add these to app level build.gradle (or to module that will use Kohii) implementation im.ene.kohii:kohii:1.0.0.2010004-A11 implementation com.google.android.exoplayer:exoplayer:2.10.4 Start a playback // TODO: Have a videoUrl first. // 1. Initialization // Obtain global instance of Kohii val kohii = Kohii [ this ]. also { // Register the ViewGroup whose scroll will affect the Playback status. // App developer must be aware of this ViewGroup and decide by yourself. it . register ( this , this . recyclerView ) } // 2. Now bind the video to the PlayerView inside ViewGroup above (PlayerView must be the ViewGroup s descendant). kohii . setUp ( videoUrl ). bind ( playerView )","title":"Overview"},{"location":"#kohii","text":"","title":"Kohii"},{"location":"#kohii-koci","text":"Video playback for Android made easy. Kohii is a high level Video playback library, built from the experience creating/maintaining toro and ExoPlayer . Kohii targets directly the Video playback on Android, giving developer powerful playback control, including (1) easy way to start a Video playback with confidence (hint: only one line), (2) smooth playback experience on ~~list~~ any Views (RecyclerView, NestedScrollView, etc). (3) smooth transition from local playback to fullscreen playback and vice versa, This library would not deprecate toro anytime soon.","title":"kohii (\u30b3\u30fc\u30d2\u30fc\u3001[ko\u031e\u02d0\u00e7i\u02d0])"},{"location":"#demo","text":"Automatic playback Playback continuity (Seamless fullscreen)","title":"Demo"},{"location":"#setup","text":"Add to your module's build.gradle dependencies // Update top level build.gradle allprojects { repositories { // \u2b06 Other repositories // Add this one below: maven { url https://oss.sonatype.org/content/repositories/snapshots } } } // Add these to app level build.gradle (or to module that will use Kohii) implementation im.ene.kohii:kohii:1.0.0.2010004-A11 implementation com.google.android.exoplayer:exoplayer:2.10.4","title":"Setup"},{"location":"#start-a-playback","text":"// TODO: Have a videoUrl first. // 1. Initialization // Obtain global instance of Kohii val kohii = Kohii [ this ]. also { // Register the ViewGroup whose scroll will affect the Playback status. // App developer must be aware of this ViewGroup and decide by yourself. it . register ( this , this . recyclerView ) } // 2. Now bind the video to the PlayerView inside ViewGroup above (PlayerView must be the ViewGroup s descendant). kohii . setUp ( videoUrl ). bind ( playerView )","title":"Start a playback"},{"location":"INTRO/","text":"TL, DR Kohii is a library that: Is built for Android, supports Android 4.4 (SDK 19) and up. Provides easy to use Video playback functionality, including automatic playback, playback continuity across config change, lifecycle change and more. By default, support ExoPlayer and any ViewGroup as the host for videos, including: RecyclerView, NestedScrollView, ViewPager, ViewPager2, general ViewGroup, etc Kohii provides following features by default: [x] Full automatic playback control using ExoPlayer as playback framework. [x] Semi manual playback control using ExoPlayer as playback framework. User can play/pause specific player on demand, Kohii will smartly pause the Video if it is not visible anymore, and restore the previous state later if needed. [x] Full manual playback control using ExoPlayer as playback framework. User can play/pause specific player on demand, Kohii does not touch anything, but take care of cleaning resource if needed (eg: release Player instances after user closes the Application). [x] Preserving playback continuity across configuration changes, lifecycle changes (eg: from Activity to Activity) using ExoPlayer as playback framework. This means: rotating the device, switching to multi-windows mode or openning full-screen player doesn't trigger pausing/resuming the playback. While the visual part will be rerendered (due to View recreation), the audio part is kept smoothly, provide continouous playback experience. [x] Reusing PlayerView instances for many players. Thinking that playing thousands of videos in sequence just using one PlayerView instance . [x] Scoped volume configuration. This means: you can set volume value of one Video, and apply the same for others, depending on the scope you want. The scope can be just that Video, or all Videos in the same RecyclerView/ScrollView , or all Videos in the same Activity . [x] Rich features demo app: demo and guidelines for creating various UX/UI patterns, from simple to complicated, including Picture-In-Picture playback or Scroll-To-Mini-Player UX just like YouTube app. For advance developers Kohii API is highly abstracted. You can easily extend it to support non-ExoPlayer API, or more complicated playback API. There is demo on how to use this YouTube player library in Kohii. What? Lately, I'm spending a lot of time on my latest library: Kohii . In this post, I would like to expose more about it. Kohii is a library that: Is built for Android whose version is 4.4 (SDK 19) and up. Is built on top of ExoPlayer, support RecyclerView, NestedScrollView, ViewPager etc out of the box. Provides easy to use Video playback functionalities, including automatic playback, playback continuity across config change, lifecycle change and more. Many libraries addresses the same problem, including my other library toro , but none of them suffices my requirement. In older posts: this one , this one and this one , I have discussed about the need for something that combines ExoPlayer and RecyclerView , the challenge to keep the playback continuity and propose a design that could do the job. Kohii is my implementation of that design. In the remaining of this series, I will cover the idea behind Kohii , its main features and how to extend it. The idea of Playback Continuity The concept Playback Continuity comes when I prepared for the Tokyo DroidKaigi 2019 where I will also talk about the same topic. Its idea was in my mind for a long time ago. Thinking about a Video playback, what are the common scenarios: Single, individual playback, like watching a movie on Netflix or YouTube. Multiple playback, like viewing many videos on a timeline like Facebook, and watch them one by one while scrolling through the list. All of these scenarios must share some common behaviors: Features 0. Rich feature demo application As always, I try to cover as much of the cappabilities of the library as possible in the demo app. By that, you can have the recommended ways to implement many patterns using Kohii , including: Using Kohii in RecyclerView only (the simplest pattern). Using Kohii in NestedScrollView only (yes, Kohii does not just support RecyclerView, it works with any ViewGroup you can imagine of, or, most of them). Using Kohii in ViewPager only, where each page is a Fragment (this is one of the thing that toro could not support well, so Kohii is here for the rescue). Using Kohii in Master/Detail UI composition (this is a new pattern I'm experimenting with, and it needs time to be battle proof, and it needs your feedbacks to be mature 3). Using Kohii in RecyclerView, with 'click-to-fullscreen' feature like YouTube UI. This is the game changer, my selling point for Kohii 3. Implementation of it is also discussed in this post . Using Kohii in RecyclerView, with 'click-to-fullscreen' feature that open the fullscreen playback in new Activity , without pausing/resuming the playback . So starting new Activity for fullscreen player will not interupt your playback UX, sounds good huh? Using Kohii in RecyclerView, with 'click-to-fullscreen' feature that open the fullscreen playback in new Fragment , because single Activity is the new trend. To make it more fun, I also add the fragment transition learnt from here . And more to come, depending on the feedback I got, request I receive and time I have to spend. 1. ~~One~~Few-line setup, full auto Thinking that you just need the following lines to integrate fully automatic Video playback in to your App: // Init Kohii for Fragment or Activity val kohii = Kohii [ this /* fragment or activity instance */ ] kohii . register ( this , arrayOf ( recyclerView )) // register the RecyclerView to be a host of our Videos. // In ViewHolder or Adapter s onBindViewHolder, where kohii instance is passed from above kohii . setUp ( videoUrl ). bind ( playerView ) // playerView is instance of ExoPlayer s PlayerView. This is the fastest way to use Kohii . With this setup, you got: Videos will be played/paused automatically on user's scroll. The top-most PlayerView whose visible area is equal to, or more than 65% of its area will be the one to play, all other PlayerView instances will be paused. Configuration changes like multi-windows mode, orientation change etc will not interupt the playback. (As the matter of fact, SurfaceView or TextureView used in PlayerView will be recreated, so you will see the glitch of the Video image frame, but the Audio will keep playing during the configuration change). Under the hood: Resource for Video playback is initialized as late as possible, so there is little to no impact to app's UX. Resource for Video playback is cached for reusability, so playback switching will be as fast as possible. Cached resource will be released as soon as possible, so there is no concern about memory leak. All playback logic, ExoPlayer implementation are provided by Kohii. You don't need to worry about anything. Digging in the API, you will have more control over the playback behavior, including: Repeat mode, which is the same with that of ExoPlayer. Delay, which help you to start the Playback with an amount of delay. Visible area of the PlayerView that trigger the playback. It is 65% by default, but you are free to change it. Initial playback info, so you can control the starting position, volume of a playback. And more. 2. Reusing PlayerView instance, with the same amount of code Yes, you read it correctly. Now you can reuse PlayerView instance across many Video playback. This is something toro could not archive, due to the limitation of its design. And as it is highly requested , Kohii is my answer to the problem. Changing the setup before to this // Init Kohii for Fragment or Activity val kohii = Kohii [ this /* fragment or activity instance */ ] kohii . register ( this , arrayOf ( recyclerView )) // register the RecyclerView to be a host of our Videos. // In ViewHolder or Adapter s onBindViewHolder, where kohii instance is passed from above kohii . setUp ( videoUrl ). bind ( playerViewContainer ) // playerViewContainer is a ViewGroup to put PlayerView instance on demand. Just changing from using a PlayerView instance directly to using a container , you are done. To help you understand this feature, let's talk about the why real quick: why reusing PlayerView instance is that cool? . If you take a look on the issue I mention above , go from bottom-up because it is a long issue to read through, you can see the discussion about reusing stuff in the ExoPlayer RecyclerView combination . Yes, it is important to reuse as much as possible, to keep a smooth user experience, as well as to save memory. Assuming that you use PlayerView in your ViewHolder to play the video. If your viewport has 3 ~ 4 ViewHolders that contains Video, there will be at most one PlayerView that is playing at a time, and at least 2 ~ 3 PlayerView instances doing nothing, but still keeping an expensive Surface object alive. We know that creating and keeping Surface are expensive operations, so reusing the Surface is a reasonable requirement. How Kohii supports this: The required step is client provides the container to Kohii using the code above. The container can be just a FrameLayout. Kohii keeps a pool of PlayerView that will create the PlayerView instance on demand, and keep the cache of up to 2 instances of it, in the Activity's lifecycle scope. So once the Activity is destroyed, the pool is automatically cleared, again, no fear of memory leak. Kohii knows when the PlayerView should appear, and when it should not . When the PlayerView is demanded, Kohii acquires one instance from the pool. If there is no cached instance, a new instance will be created. On one hand, this instance will be passed to the playback engine, and on the other hand, it will be added to the container by internal mechanism. When the PlayerView should disappear, Kohii will remove it from the container , and release it back to the pool for reuse. Because there will be at most one PlayerView to play at a time, and Kohii's pool keeps up to 2 instances at a time, there will be at most 2 PlayerView instances living at a moment. (In practice, depends on how complicated your video content is, there will be more. For example you have both DRM content and non-DRM content, and you want to use TextureView for non-DRM ones, then Kohii keeps 2 pools for 2 types of playback). The caveat of this mechanism is that by default you do not control the way a PlayerView is created (spoiler: with more lines of code, you can). With more advance setup, you have the following control: How to add and remove PlayerView instance to/from the container . Because your container may contains other Views, Kohii allows you to provide your way to handle this operation. How to create PlayerView instance, because you may have your custom PlayerView implementation. 3. Manual control Some of the requirement I got from toro are the abilities to: Manually control the playback using UI/buttons Mute/Un-mute one playback and apply that to all Those 2 control can be gathered in one group: manual playback control, with scope. Kohii provides the following behaviors to make it possible: Allow client to configure so that, user can fully control the video playback, without any help by Kohii. For instance: when your RecyclerView is shown, and the first ViewHolder is a Video and it is fully visible. This behavior will not start the playback automatically, user can start/pause/do anything with the playback using client-provide UI controller. Once user scrolls the Video so that it is no longer visible on screen, Kohii will not do anything to pause or release the playback. If it was playing before, it keeps playing. If it was paused before, it keeps being paused. But once the Activity that contains this playback is destroyed, Kohii will correctly clear any resource in use. And even better, the manual playback is retained across configuration change, without any interuption. Allow client to configure so that, user can control the playback on the fly. This means that: Kohii will still start the playback automatically, but once user click to some buttons to pause it, Kohii will not change that state. So a video paused by user, even if it is fully visible, will not be played automatically (in full-auto config, Kohii will start this playback). When user scrolls the Video so that it is no longer visible enough, Kohii will do its jobs to pause and release resource if needed. And when user scrolls the Video back to visible enough, Kohii will put the playback to its previous state: if it was playing before being scrolled off-screen, it will be resumed; if it was paused before being scrolled off-screen, it keeps being paused. About the volume control, it works in a bit different way: Kohii allows client to apply a volume value by scope . There are 4 scopes in Kohii, but to not go too deep, I will just talk about 2: playback scope, and global scope. If client applies a volume value to playback scope , then only the receiver playback object will have this new volume value. But if client applies a volume value to global scope , then all currently playing playbacks, and any playback that will be created next will have the new volume value. The control flow is easy to imagine, but not easy to implementation. What I did for Kohii is one of my best thing I have ever done. And I hope it helps you to solve your problems.","title":"INTRO"},{"location":"INTRO/#tl-dr","text":"Kohii is a library that: Is built for Android, supports Android 4.4 (SDK 19) and up. Provides easy to use Video playback functionality, including automatic playback, playback continuity across config change, lifecycle change and more. By default, support ExoPlayer and any ViewGroup as the host for videos, including: RecyclerView, NestedScrollView, ViewPager, ViewPager2, general ViewGroup, etc Kohii provides following features by default: [x] Full automatic playback control using ExoPlayer as playback framework. [x] Semi manual playback control using ExoPlayer as playback framework. User can play/pause specific player on demand, Kohii will smartly pause the Video if it is not visible anymore, and restore the previous state later if needed. [x] Full manual playback control using ExoPlayer as playback framework. User can play/pause specific player on demand, Kohii does not touch anything, but take care of cleaning resource if needed (eg: release Player instances after user closes the Application). [x] Preserving playback continuity across configuration changes, lifecycle changes (eg: from Activity to Activity) using ExoPlayer as playback framework. This means: rotating the device, switching to multi-windows mode or openning full-screen player doesn't trigger pausing/resuming the playback. While the visual part will be rerendered (due to View recreation), the audio part is kept smoothly, provide continouous playback experience. [x] Reusing PlayerView instances for many players. Thinking that playing thousands of videos in sequence just using one PlayerView instance . [x] Scoped volume configuration. This means: you can set volume value of one Video, and apply the same for others, depending on the scope you want. The scope can be just that Video, or all Videos in the same RecyclerView/ScrollView , or all Videos in the same Activity . [x] Rich features demo app: demo and guidelines for creating various UX/UI patterns, from simple to complicated, including Picture-In-Picture playback or Scroll-To-Mini-Player UX just like YouTube app. For advance developers Kohii API is highly abstracted. You can easily extend it to support non-ExoPlayer API, or more complicated playback API. There is demo on how to use this YouTube player library in Kohii.","title":"TL, DR"},{"location":"INTRO/#what","text":"Lately, I'm spending a lot of time on my latest library: Kohii . In this post, I would like to expose more about it. Kohii is a library that: Is built for Android whose version is 4.4 (SDK 19) and up. Is built on top of ExoPlayer, support RecyclerView, NestedScrollView, ViewPager etc out of the box. Provides easy to use Video playback functionalities, including automatic playback, playback continuity across config change, lifecycle change and more. Many libraries addresses the same problem, including my other library toro , but none of them suffices my requirement. In older posts: this one , this one and this one , I have discussed about the need for something that combines ExoPlayer and RecyclerView , the challenge to keep the playback continuity and propose a design that could do the job. Kohii is my implementation of that design. In the remaining of this series, I will cover the idea behind Kohii , its main features and how to extend it.","title":"What?"},{"location":"INTRO/#the-idea-of-playback-continuity","text":"The concept Playback Continuity comes when I prepared for the Tokyo DroidKaigi 2019 where I will also talk about the same topic. Its idea was in my mind for a long time ago. Thinking about a Video playback, what are the common scenarios: Single, individual playback, like watching a movie on Netflix or YouTube. Multiple playback, like viewing many videos on a timeline like Facebook, and watch them one by one while scrolling through the list. All of these scenarios must share some common behaviors:","title":"The idea of Playback Continuity"},{"location":"INTRO/#features","text":"","title":"Features"},{"location":"INTRO/#0-rich-feature-demo-application","text":"As always, I try to cover as much of the cappabilities of the library as possible in the demo app. By that, you can have the recommended ways to implement many patterns using Kohii , including: Using Kohii in RecyclerView only (the simplest pattern). Using Kohii in NestedScrollView only (yes, Kohii does not just support RecyclerView, it works with any ViewGroup you can imagine of, or, most of them). Using Kohii in ViewPager only, where each page is a Fragment (this is one of the thing that toro could not support well, so Kohii is here for the rescue). Using Kohii in Master/Detail UI composition (this is a new pattern I'm experimenting with, and it needs time to be battle proof, and it needs your feedbacks to be mature 3). Using Kohii in RecyclerView, with 'click-to-fullscreen' feature like YouTube UI. This is the game changer, my selling point for Kohii 3. Implementation of it is also discussed in this post . Using Kohii in RecyclerView, with 'click-to-fullscreen' feature that open the fullscreen playback in new Activity , without pausing/resuming the playback . So starting new Activity for fullscreen player will not interupt your playback UX, sounds good huh? Using Kohii in RecyclerView, with 'click-to-fullscreen' feature that open the fullscreen playback in new Fragment , because single Activity is the new trend. To make it more fun, I also add the fragment transition learnt from here . And more to come, depending on the feedback I got, request I receive and time I have to spend.","title":"0. Rich feature demo application"},{"location":"INTRO/#1-onefew-line-setup-full-auto","text":"Thinking that you just need the following lines to integrate fully automatic Video playback in to your App: // Init Kohii for Fragment or Activity val kohii = Kohii [ this /* fragment or activity instance */ ] kohii . register ( this , arrayOf ( recyclerView )) // register the RecyclerView to be a host of our Videos. // In ViewHolder or Adapter s onBindViewHolder, where kohii instance is passed from above kohii . setUp ( videoUrl ). bind ( playerView ) // playerView is instance of ExoPlayer s PlayerView. This is the fastest way to use Kohii . With this setup, you got: Videos will be played/paused automatically on user's scroll. The top-most PlayerView whose visible area is equal to, or more than 65% of its area will be the one to play, all other PlayerView instances will be paused. Configuration changes like multi-windows mode, orientation change etc will not interupt the playback. (As the matter of fact, SurfaceView or TextureView used in PlayerView will be recreated, so you will see the glitch of the Video image frame, but the Audio will keep playing during the configuration change). Under the hood: Resource for Video playback is initialized as late as possible, so there is little to no impact to app's UX. Resource for Video playback is cached for reusability, so playback switching will be as fast as possible. Cached resource will be released as soon as possible, so there is no concern about memory leak. All playback logic, ExoPlayer implementation are provided by Kohii. You don't need to worry about anything. Digging in the API, you will have more control over the playback behavior, including: Repeat mode, which is the same with that of ExoPlayer. Delay, which help you to start the Playback with an amount of delay. Visible area of the PlayerView that trigger the playback. It is 65% by default, but you are free to change it. Initial playback info, so you can control the starting position, volume of a playback. And more.","title":"1. ~~One~~Few-line setup, full auto"},{"location":"INTRO/#2-reusing-playerview-instance-with-the-same-amount-of-code","text":"Yes, you read it correctly. Now you can reuse PlayerView instance across many Video playback. This is something toro could not archive, due to the limitation of its design. And as it is highly requested , Kohii is my answer to the problem. Changing the setup before to this // Init Kohii for Fragment or Activity val kohii = Kohii [ this /* fragment or activity instance */ ] kohii . register ( this , arrayOf ( recyclerView )) // register the RecyclerView to be a host of our Videos. // In ViewHolder or Adapter s onBindViewHolder, where kohii instance is passed from above kohii . setUp ( videoUrl ). bind ( playerViewContainer ) // playerViewContainer is a ViewGroup to put PlayerView instance on demand. Just changing from using a PlayerView instance directly to using a container , you are done. To help you understand this feature, let's talk about the why real quick: why reusing PlayerView instance is that cool? . If you take a look on the issue I mention above , go from bottom-up because it is a long issue to read through, you can see the discussion about reusing stuff in the ExoPlayer RecyclerView combination . Yes, it is important to reuse as much as possible, to keep a smooth user experience, as well as to save memory. Assuming that you use PlayerView in your ViewHolder to play the video. If your viewport has 3 ~ 4 ViewHolders that contains Video, there will be at most one PlayerView that is playing at a time, and at least 2 ~ 3 PlayerView instances doing nothing, but still keeping an expensive Surface object alive. We know that creating and keeping Surface are expensive operations, so reusing the Surface is a reasonable requirement. How Kohii supports this: The required step is client provides the container to Kohii using the code above. The container can be just a FrameLayout. Kohii keeps a pool of PlayerView that will create the PlayerView instance on demand, and keep the cache of up to 2 instances of it, in the Activity's lifecycle scope. So once the Activity is destroyed, the pool is automatically cleared, again, no fear of memory leak. Kohii knows when the PlayerView should appear, and when it should not . When the PlayerView is demanded, Kohii acquires one instance from the pool. If there is no cached instance, a new instance will be created. On one hand, this instance will be passed to the playback engine, and on the other hand, it will be added to the container by internal mechanism. When the PlayerView should disappear, Kohii will remove it from the container , and release it back to the pool for reuse. Because there will be at most one PlayerView to play at a time, and Kohii's pool keeps up to 2 instances at a time, there will be at most 2 PlayerView instances living at a moment. (In practice, depends on how complicated your video content is, there will be more. For example you have both DRM content and non-DRM content, and you want to use TextureView for non-DRM ones, then Kohii keeps 2 pools for 2 types of playback). The caveat of this mechanism is that by default you do not control the way a PlayerView is created (spoiler: with more lines of code, you can). With more advance setup, you have the following control: How to add and remove PlayerView instance to/from the container . Because your container may contains other Views, Kohii allows you to provide your way to handle this operation. How to create PlayerView instance, because you may have your custom PlayerView implementation.","title":"2. Reusing PlayerView instance, with the same amount of code"},{"location":"INTRO/#3-manual-control","text":"Some of the requirement I got from toro are the abilities to: Manually control the playback using UI/buttons Mute/Un-mute one playback and apply that to all Those 2 control can be gathered in one group: manual playback control, with scope. Kohii provides the following behaviors to make it possible: Allow client to configure so that, user can fully control the video playback, without any help by Kohii. For instance: when your RecyclerView is shown, and the first ViewHolder is a Video and it is fully visible. This behavior will not start the playback automatically, user can start/pause/do anything with the playback using client-provide UI controller. Once user scrolls the Video so that it is no longer visible on screen, Kohii will not do anything to pause or release the playback. If it was playing before, it keeps playing. If it was paused before, it keeps being paused. But once the Activity that contains this playback is destroyed, Kohii will correctly clear any resource in use. And even better, the manual playback is retained across configuration change, without any interuption. Allow client to configure so that, user can control the playback on the fly. This means that: Kohii will still start the playback automatically, but once user click to some buttons to pause it, Kohii will not change that state. So a video paused by user, even if it is fully visible, will not be played automatically (in full-auto config, Kohii will start this playback). When user scrolls the Video so that it is no longer visible enough, Kohii will do its jobs to pause and release resource if needed. And when user scrolls the Video back to visible enough, Kohii will put the playback to its previous state: if it was playing before being scrolled off-screen, it will be resumed; if it was paused before being scrolled off-screen, it keeps being paused. About the volume control, it works in a bit different way: Kohii allows client to apply a volume value by scope . There are 4 scopes in Kohii, but to not go too deep, I will just talk about 2: playback scope, and global scope. If client applies a volume value to playback scope , then only the receiver playback object will have this new volume value. But if client applies a volume value to global scope , then all currently playing playbacks, and any playback that will be created next will have the new volume value. The control flow is easy to imagine, but not easy to implementation. What I did for Kohii is one of my best thing I have ever done. And I hope it helps you to solve your problems.","title":"3. Manual control"},{"location":"changelog/","text":"","title":"Changelog"},{"location":"code_of_conduct/","text":"Contributor Covenant Code of Conduct Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at mr.nguyenhoainam@gmail.com. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Contributor Covenant Code of Conduct"},{"location":"code_of_conduct/#contributor-covenant-code-of-conduct","text":"","title":"Contributor Covenant Code of Conduct"},{"location":"code_of_conduct/#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.","title":"Our Pledge"},{"location":"code_of_conduct/#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"code_of_conduct/#our-responsibilities","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","title":"Our Responsibilities"},{"location":"code_of_conduct/#scope","text":"This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope"},{"location":"code_of_conduct/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at mr.nguyenhoainam@gmail.com. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","title":"Enforcement"},{"location":"code_of_conduct/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Attribution"},{"location":"api/kohii-ads/","text":"kohii-ads Packages Name Summary im.ene.kohii.ads Index All Types","title":"kohii-ads"},{"location":"api/kohii-ads/#packages","text":"Name Summary im.ene.kohii.ads","title":"Packages"},{"location":"api/kohii-ads/#index","text":"All Types","title":"Index"},{"location":"api/kohii-ads/alltypes/","text":"All Types Name Summary im.ene.kohii.ads.Latte","title":"Home"},{"location":"api/kohii-ads/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"api/kohii-ads/alltypes/#imenekohiiadslatte","text":"","title":"im.ene.kohii.ads.Latte"},{"location":"api/kohii-ads/im.ene.kohii.ads/","text":"kohii-ads / im.ene.kohii.ads Package im.ene.kohii.ads Types Name Summary Latte class Latte","title":"Home"},{"location":"api/kohii-ads/im.ene.kohii.ads/#package-imenekohiiads","text":"","title":"Package im.ene.kohii.ads"},{"location":"api/kohii-ads/im.ene.kohii.ads/#types","text":"Name Summary Latte class Latte","title":"Types"},{"location":"api/kohii-ads/im.ene.kohii.ads/-latte/","text":"kohii-ads / im.ene.kohii.ads / Latte Latte class Latte Constructors Name Summary init Latte()","title":"Home"},{"location":"api/kohii-ads/im.ene.kohii.ads/-latte/#latte","text":"class Latte","title":"Latte"},{"location":"api/kohii-ads/im.ene.kohii.ads/-latte/#constructors","text":"Name Summary init Latte()","title":"Constructors"},{"location":"api/kohii-ads/im.ene.kohii.ads/-latte/-init-/","text":"kohii-ads / im.ene.kohii.ads / Latte / init init Latte()","title":" init "},{"location":"api/kohii-ads/im.ene.kohii.ads/-latte/-init-/#init","text":"Latte()","title":"&lt;init&gt;"},{"location":"api/kohii-androidx/","text":"kohii-androidx Packages Name Summary im.ene.kohii.x Index All Types","title":"kohii-androidx"},{"location":"api/kohii-androidx/#packages","text":"Name Summary im.ene.kohii.x","title":"Packages"},{"location":"api/kohii-androidx/#index","text":"All Types","title":"Index"},{"location":"api/kohii-androidx/alltypes/","text":"All Types Name Summary im.ene.kohii.x.Manilo","title":"Home"},{"location":"api/kohii-androidx/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"api/kohii-androidx/alltypes/#imenekohiixmanilo","text":"","title":"im.ene.kohii.x.Manilo"},{"location":"api/kohii-androidx/im.ene.kohii.x/","text":"kohii-androidx / im.ene.kohii.x Package im.ene.kohii.x Types Name Summary Manilo class Manilo : Engine VideoView","title":"Home"},{"location":"api/kohii-androidx/im.ene.kohii.x/#package-imenekohiix","text":"","title":"Package im.ene.kohii.x"},{"location":"api/kohii-androidx/im.ene.kohii.x/#types","text":"Name Summary Manilo class Manilo : Engine VideoView","title":"Types"},{"location":"api/kohii-androidx/im.ene.kohii.x/-manilo/","text":"kohii-androidx / im.ene.kohii.x / Manilo Manilo class Manilo : Engine VideoView Constructors Name Summary init Manilo(context: Context , playableCreator: PlayableCreator VideoView )","title":"Home"},{"location":"api/kohii-androidx/im.ene.kohii.x/-manilo/#manilo","text":"class Manilo : Engine VideoView","title":"Manilo"},{"location":"api/kohii-androidx/im.ene.kohii.x/-manilo/#constructors","text":"Name Summary init Manilo(context: Context , playableCreator: PlayableCreator VideoView )","title":"Constructors"},{"location":"api/kohii-androidx/im.ene.kohii.x/-manilo/-init-/","text":"kohii-androidx / im.ene.kohii.x / Manilo / init init Manilo(context: Context , playableCreator: PlayableCreator VideoView )","title":" init "},{"location":"api/kohii-androidx/im.ene.kohii.x/-manilo/-init-/#init","text":"Manilo(context: Context , playableCreator: PlayableCreator VideoView )","title":"&lt;init&gt;"},{"location":"api/kohii-core/","text":"kohii-core Packages Name Summary kohii.v1 kohii.v1.core kohii.v1.media Index All Types","title":"kohii-core"},{"location":"api/kohii-core/#packages","text":"Name Summary kohii.v1 kohii.v1.core kohii.v1.media","title":"Packages"},{"location":"api/kohii-core/#index","text":"All Types","title":"Index"},{"location":"api/kohii-core/alltypes/","text":"All Types Name Summary kohii.v1.core.AbstractBridge | kohii.v1.core.AbstractPlayable | kohii.v1.Beta | kohii.v1.core.Binder | kohii.v1.core.Bridge | kohii.v1.core.BridgeCreator | kohii.v1.core.Bucket | kohii.v1.core.Common | (extensions in package kohii.v1) android.content.Context | kohii.v1.Draft | kohii.v1.core.Engine | kohii.v1.core.ErrorListener | kohii.v1.core.ErrorListeners | kohii.v1.ExoPlayer | kohii.v1.Experiment | kohii.v1.core.Group | kohii.v1.core.Manager | kohii.v1.core.Master | kohii.v1.media.Media | kohii.v1.Media2 | kohii.v1.media.MediaDrm Note: implementation of this interface must comparable using all 4 values, no more, no less. | kohii.v1.media.MediaItem | kohii.v1.core.MemoryMode | kohii.v1.PendingState | kohii.v1.core.Playable A Playable contains necessary information about a Media item, and the config provided by client for it to start the media with expected result. Instance of Playable is provided using PlayableCreator . | kohii.v1.core.PlayableCreator | kohii.v1.core.PlayableManager | kohii.v1.core.Playback | kohii.v1.media.PlaybackInfo | kohii.v1.core.PlayerEventListener | kohii.v1.core.PlayerEventListeners | (extensions in package kohii.v1) androidx.core.util.Pools.Pool | kohii.v1.core.Prioritized | kohii.v1.core.Rebinder | kohii.v1.core.RecycledRendererProvider | kohii.v1.core.RendererProvider | kohii.v1.core.Scope | kohii.v1.Stable | kohii.v1.core.VideoSize | kohii.v1.core.ViewRendererProvider | kohii.v1.core.VolumeChangedListener | kohii.v1.core.VolumeChangedListeners | kohii.v1.media.VolumeInfo | kohii.v1.core.VolumeInfoController","title":"Home"},{"location":"api/kohii-core/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"api/kohii-core/alltypes/#kohiiv1coreabstractbridge","text":"|","title":"kohii.v1.core.AbstractBridge"},{"location":"api/kohii-core/alltypes/#kohiiv1coreabstractplayable","text":"|","title":"kohii.v1.core.AbstractPlayable"},{"location":"api/kohii-core/alltypes/#kohiiv1beta","text":"|","title":"kohii.v1.Beta"},{"location":"api/kohii-core/alltypes/#kohiiv1corebinder","text":"|","title":"kohii.v1.core.Binder"},{"location":"api/kohii-core/alltypes/#kohiiv1corebridge","text":"|","title":"kohii.v1.core.Bridge"},{"location":"api/kohii-core/alltypes/#kohiiv1corebridgecreator","text":"|","title":"kohii.v1.core.BridgeCreator"},{"location":"api/kohii-core/alltypes/#kohiiv1corebucket","text":"|","title":"kohii.v1.core.Bucket"},{"location":"api/kohii-core/alltypes/#kohiiv1corecommon","text":"| (extensions in package kohii.v1)","title":"kohii.v1.core.Common"},{"location":"api/kohii-core/alltypes/#androidcontentcontext","text":"|","title":"android.content.Context"},{"location":"api/kohii-core/alltypes/#kohiiv1draft","text":"|","title":"kohii.v1.Draft"},{"location":"api/kohii-core/alltypes/#kohiiv1coreengine","text":"|","title":"kohii.v1.core.Engine"},{"location":"api/kohii-core/alltypes/#kohiiv1coreerrorlistener","text":"|","title":"kohii.v1.core.ErrorListener"},{"location":"api/kohii-core/alltypes/#kohiiv1coreerrorlisteners","text":"|","title":"kohii.v1.core.ErrorListeners"},{"location":"api/kohii-core/alltypes/#kohiiv1exoplayer","text":"|","title":"kohii.v1.ExoPlayer"},{"location":"api/kohii-core/alltypes/#kohiiv1experiment","text":"|","title":"kohii.v1.Experiment"},{"location":"api/kohii-core/alltypes/#kohiiv1coregroup","text":"|","title":"kohii.v1.core.Group"},{"location":"api/kohii-core/alltypes/#kohiiv1coremanager","text":"|","title":"kohii.v1.core.Manager"},{"location":"api/kohii-core/alltypes/#kohiiv1coremaster","text":"|","title":"kohii.v1.core.Master"},{"location":"api/kohii-core/alltypes/#kohiiv1mediamedia","text":"|","title":"kohii.v1.media.Media"},{"location":"api/kohii-core/alltypes/#kohiiv1media2","text":"|","title":"kohii.v1.Media2"},{"location":"api/kohii-core/alltypes/#kohiiv1mediamediadrm","text":"Note: implementation of this interface must comparable using all 4 values, no more, no less. |","title":"kohii.v1.media.MediaDrm"},{"location":"api/kohii-core/alltypes/#kohiiv1mediamediaitem","text":"|","title":"kohii.v1.media.MediaItem"},{"location":"api/kohii-core/alltypes/#kohiiv1corememorymode","text":"|","title":"kohii.v1.core.MemoryMode"},{"location":"api/kohii-core/alltypes/#kohiiv1pendingstate","text":"|","title":"kohii.v1.PendingState"},{"location":"api/kohii-core/alltypes/#kohiiv1coreplayable","text":"A Playable contains necessary information about a Media item, and the config provided by client for it to start the media with expected result. Instance of Playable is provided using PlayableCreator . |","title":"kohii.v1.core.Playable"},{"location":"api/kohii-core/alltypes/#kohiiv1coreplayablecreator","text":"|","title":"kohii.v1.core.PlayableCreator"},{"location":"api/kohii-core/alltypes/#kohiiv1coreplayablemanager","text":"|","title":"kohii.v1.core.PlayableManager"},{"location":"api/kohii-core/alltypes/#kohiiv1coreplayback","text":"|","title":"kohii.v1.core.Playback"},{"location":"api/kohii-core/alltypes/#kohiiv1mediaplaybackinfo","text":"|","title":"kohii.v1.media.PlaybackInfo"},{"location":"api/kohii-core/alltypes/#kohiiv1coreplayereventlistener","text":"|","title":"kohii.v1.core.PlayerEventListener"},{"location":"api/kohii-core/alltypes/#kohiiv1coreplayereventlisteners","text":"| (extensions in package kohii.v1)","title":"kohii.v1.core.PlayerEventListeners"},{"location":"api/kohii-core/alltypes/#androidxcoreutilpoolspool","text":"|","title":"androidx.core.util.Pools.Pool"},{"location":"api/kohii-core/alltypes/#kohiiv1coreprioritized","text":"|","title":"kohii.v1.core.Prioritized"},{"location":"api/kohii-core/alltypes/#kohiiv1corerebinder","text":"|","title":"kohii.v1.core.Rebinder"},{"location":"api/kohii-core/alltypes/#kohiiv1corerecycledrendererprovider","text":"|","title":"kohii.v1.core.RecycledRendererProvider"},{"location":"api/kohii-core/alltypes/#kohiiv1corerendererprovider","text":"|","title":"kohii.v1.core.RendererProvider"},{"location":"api/kohii-core/alltypes/#kohiiv1corescope","text":"|","title":"kohii.v1.core.Scope"},{"location":"api/kohii-core/alltypes/#kohiiv1stable","text":"|","title":"kohii.v1.Stable"},{"location":"api/kohii-core/alltypes/#kohiiv1corevideosize","text":"|","title":"kohii.v1.core.VideoSize"},{"location":"api/kohii-core/alltypes/#kohiiv1coreviewrendererprovider","text":"|","title":"kohii.v1.core.ViewRendererProvider"},{"location":"api/kohii-core/alltypes/#kohiiv1corevolumechangedlistener","text":"|","title":"kohii.v1.core.VolumeChangedListener"},{"location":"api/kohii-core/alltypes/#kohiiv1corevolumechangedlisteners","text":"|","title":"kohii.v1.core.VolumeChangedListeners"},{"location":"api/kohii-core/alltypes/#kohiiv1mediavolumeinfo","text":"|","title":"kohii.v1.media.VolumeInfo"},{"location":"api/kohii-core/alltypes/#kohiiv1corevolumeinfocontroller","text":"","title":"kohii.v1.core.VolumeInfoController"},{"location":"api/kohii-core/kohii.v1/","text":"kohii-core / kohii.v1 Package kohii.v1 Types Name Summary PendingState class PendingState Annotations Name Summary Beta annotation class Beta Draft annotation class Draft ExoPlayer annotation class ExoPlayer Experiment annotation class Experiment Media2 annotation class Media2 Stable annotation class Stable Extensions for External Classes Name Summary android.content.Context androidx.core.util.Pools.Pool Functions Name Summary findCoordinatorLayoutDirectChildContainer fun findCoordinatorLayoutDirectChildContainer(root: View , target: View ?): View ?","title":"Home"},{"location":"api/kohii-core/kohii.v1/#package-kohiiv1","text":"","title":"Package kohii.v1"},{"location":"api/kohii-core/kohii.v1/#types","text":"Name Summary PendingState class PendingState","title":"Types"},{"location":"api/kohii-core/kohii.v1/#annotations","text":"Name Summary Beta annotation class Beta Draft annotation class Draft ExoPlayer annotation class ExoPlayer Experiment annotation class Experiment Media2 annotation class Media2 Stable annotation class Stable","title":"Annotations"},{"location":"api/kohii-core/kohii.v1/#extensions-for-external-classes","text":"Name Summary android.content.Context androidx.core.util.Pools.Pool","title":"Extensions for External Classes"},{"location":"api/kohii-core/kohii.v1/#functions","text":"Name Summary findCoordinatorLayoutDirectChildContainer fun findCoordinatorLayoutDirectChildContainer(root: View , target: View ?): View ?","title":"Functions"},{"location":"api/kohii-core/kohii.v1/find-coordinator-layout-direct-child-container/","text":"kohii-core / kohii.v1 / findCoordinatorLayoutDirectChildContainer findCoordinatorLayoutDirectChildContainer fun findCoordinatorLayoutDirectChildContainer(root: View , target: View ?): View ?","title":"Find coordinator layout direct child container"},{"location":"api/kohii-core/kohii.v1/find-coordinator-layout-direct-child-container/#findcoordinatorlayoutdirectchildcontainer","text":"fun findCoordinatorLayoutDirectChildContainer(root: View , target: View ?): View ?","title":"findCoordinatorLayoutDirectChildContainer"},{"location":"api/kohii-core/kohii.v1/-beta/","text":"kohii-core / kohii.v1 / Beta Beta annotation class Beta Constructors Name Summary init Beta(message: String = \"\") Properties Name Summary message val message: String","title":"Home"},{"location":"api/kohii-core/kohii.v1/-beta/#beta","text":"annotation class Beta","title":"Beta"},{"location":"api/kohii-core/kohii.v1/-beta/#constructors","text":"Name Summary init Beta(message: String = \"\")","title":"Constructors"},{"location":"api/kohii-core/kohii.v1/-beta/#properties","text":"Name Summary message val message: String","title":"Properties"},{"location":"api/kohii-core/kohii.v1/-beta/-init-/","text":"kohii-core / kohii.v1 / Beta / init init Beta(message: String = \"\")","title":" init "},{"location":"api/kohii-core/kohii.v1/-beta/-init-/#init","text":"Beta(message: String = \"\")","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1/-beta/message/","text":"kohii-core / kohii.v1 / Beta / message message val message: String","title":"Message"},{"location":"api/kohii-core/kohii.v1/-beta/message/#message","text":"val message: String","title":"message"},{"location":"api/kohii-core/kohii.v1/-draft/","text":"kohii-core / kohii.v1 / Draft Draft annotation class Draft Author eneim (2018/07/30). Constructors Name Summary init Draft(message: String = \"\") Properties Name Summary message val message: String","title":"Home"},{"location":"api/kohii-core/kohii.v1/-draft/#draft","text":"annotation class Draft Author eneim (2018/07/30).","title":"Draft"},{"location":"api/kohii-core/kohii.v1/-draft/#constructors","text":"Name Summary init Draft(message: String = \"\")","title":"Constructors"},{"location":"api/kohii-core/kohii.v1/-draft/#properties","text":"Name Summary message val message: String","title":"Properties"},{"location":"api/kohii-core/kohii.v1/-draft/-init-/","text":"kohii-core / kohii.v1 / Draft / init init Draft(message: String = \"\") Author eneim (2018/07/30).","title":" init "},{"location":"api/kohii-core/kohii.v1/-draft/-init-/#init","text":"Draft(message: String = \"\") Author eneim (2018/07/30).","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1/-draft/message/","text":"kohii-core / kohii.v1 / Draft / message message val message: String","title":"Message"},{"location":"api/kohii-core/kohii.v1/-draft/message/#message","text":"val message: String","title":"message"},{"location":"api/kohii-core/kohii.v1/-exo-player/","text":"kohii-core / kohii.v1 / ExoPlayer ExoPlayer annotation class ExoPlayer Constructors Name Summary init ExoPlayer()","title":"Home"},{"location":"api/kohii-core/kohii.v1/-exo-player/#exoplayer","text":"annotation class ExoPlayer","title":"ExoPlayer"},{"location":"api/kohii-core/kohii.v1/-exo-player/#constructors","text":"Name Summary init ExoPlayer()","title":"Constructors"},{"location":"api/kohii-core/kohii.v1/-exo-player/-init-/","text":"kohii-core / kohii.v1 / ExoPlayer / init init ExoPlayer()","title":" init "},{"location":"api/kohii-core/kohii.v1/-exo-player/-init-/#init","text":"ExoPlayer()","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1/-experiment/","text":"kohii-core / kohii.v1 / Experiment Experiment annotation class Experiment Constructors Name Summary init Experiment()","title":"Home"},{"location":"api/kohii-core/kohii.v1/-experiment/#experiment","text":"annotation class Experiment","title":"Experiment"},{"location":"api/kohii-core/kohii.v1/-experiment/#constructors","text":"Name Summary init Experiment()","title":"Constructors"},{"location":"api/kohii-core/kohii.v1/-experiment/-init-/","text":"kohii-core / kohii.v1 / Experiment / init init Experiment()","title":" init "},{"location":"api/kohii-core/kohii.v1/-experiment/-init-/#init","text":"Experiment()","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1/-media2/","text":"kohii-core / kohii.v1 / Media2 Media2 annotation class Media2 Constructors Name Summary init Media2()","title":"Home"},{"location":"api/kohii-core/kohii.v1/-media2/#media2","text":"annotation class Media2","title":"Media2"},{"location":"api/kohii-core/kohii.v1/-media2/#constructors","text":"Name Summary init Media2()","title":"Constructors"},{"location":"api/kohii-core/kohii.v1/-media2/-init-/","text":"kohii-core / kohii.v1 / Media2 / init init Media2()","title":" init "},{"location":"api/kohii-core/kohii.v1/-media2/-init-/#init","text":"Media2()","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1/-pending-state/","text":"kohii-core / kohii.v1 / PendingState PendingState inline class PendingState Author eneim (2018/06/24). Constructors Name Summary init PendingState(value: Boolean ) Properties Name Summary value val value: Boolean","title":"Home"},{"location":"api/kohii-core/kohii.v1/-pending-state/#pendingstate","text":"inline class PendingState Author eneim (2018/06/24).","title":"PendingState"},{"location":"api/kohii-core/kohii.v1/-pending-state/#constructors","text":"Name Summary init PendingState(value: Boolean )","title":"Constructors"},{"location":"api/kohii-core/kohii.v1/-pending-state/#properties","text":"Name Summary value val value: Boolean","title":"Properties"},{"location":"api/kohii-core/kohii.v1/-pending-state/-init-/","text":"kohii-core / kohii.v1 / PendingState / init init PendingState(value: Boolean ) Author eneim (2018/06/24).","title":" init "},{"location":"api/kohii-core/kohii.v1/-pending-state/-init-/#init","text":"PendingState(value: Boolean ) Author eneim (2018/06/24).","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1/-pending-state/value/","text":"kohii-core / kohii.v1 / PendingState / value value val value: Boolean","title":"Value"},{"location":"api/kohii-core/kohii.v1/-pending-state/value/#value","text":"val value: Boolean","title":"value"},{"location":"api/kohii-core/kohii.v1/-stable/","text":"kohii-core / kohii.v1 / Stable Stable annotation class Stable Constructors Name Summary init Stable()","title":"Home"},{"location":"api/kohii-core/kohii.v1/-stable/#stable","text":"annotation class Stable","title":"Stable"},{"location":"api/kohii-core/kohii.v1/-stable/#constructors","text":"Name Summary init Stable()","title":"Constructors"},{"location":"api/kohii-core/kohii.v1/-stable/-init-/","text":"kohii-core / kohii.v1 / Stable / init init Stable()","title":" init "},{"location":"api/kohii-core/kohii.v1/-stable/-init-/#init","text":"Stable()","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1/android.content.-context/","text":"kohii-core / kohii.v1 / android.content.Context Extensions for android.content.Context Name Summary findActivity fun Context .findActivity(): Activity ?","title":"Home"},{"location":"api/kohii-core/kohii.v1/android.content.-context/#extensions-for-androidcontentcontext","text":"Name Summary findActivity fun Context .findActivity(): Activity ?","title":"Extensions for android.content.Context"},{"location":"api/kohii-core/kohii.v1/android.content.-context/find-activity/","text":"kohii-core / kohii.v1 / android.content.Context / findActivity findActivity fun Context .findActivity(): Activity ?","title":"Find activity"},{"location":"api/kohii-core/kohii.v1/android.content.-context/find-activity/#findactivity","text":"fun Context .findActivity(): Activity ?","title":"findActivity"},{"location":"api/kohii-core/kohii.v1/androidx.core.util.-pools.-pool/","text":"kohii-core / kohii.v1 / androidx.core.util.Pools.Pool Extensions for androidx.core.util.Pools.Pool Name Summary onEachAcquired fun T Pool T .onEachAcquired(action: (T) - Unit ): Unit","title":"Home"},{"location":"api/kohii-core/kohii.v1/androidx.core.util.-pools.-pool/#extensions-for-androidxcoreutilpoolspool","text":"Name Summary onEachAcquired fun T Pool T .onEachAcquired(action: (T) - Unit ): Unit","title":"Extensions for androidx.core.util.Pools.Pool"},{"location":"api/kohii-core/kohii.v1/androidx.core.util.-pools.-pool/on-each-acquired/","text":"kohii-core / kohii.v1 / androidx.core.util.Pools.Pool / onEachAcquired onEachAcquired inline fun T Pool T .onEachAcquired(action: (T) - Unit ): Unit Author eneim (2018/10/27).","title":"On each acquired"},{"location":"api/kohii-core/kohii.v1/androidx.core.util.-pools.-pool/on-each-acquired/#oneachacquired","text":"inline fun T Pool T .onEachAcquired(action: (T) - Unit ): Unit Author eneim (2018/10/27).","title":"onEachAcquired"},{"location":"api/kohii-core/kohii.v1.core/","text":"kohii-core / kohii.v1.core Package kohii.v1.core Types Name Summary AbstractBridge abstract class AbstractBridge RENDERER : Any : Bridge RENDERER AbstractPlayable abstract class AbstractPlayable RENDERER : Any : Playable , Callback Binder class Binder Bridge interface Bridge RENDERER : Any BridgeCreator interface BridgeCreator RENDERER : Any Bucket abstract class Bucket : OnAttachStateChangeListener , OnLayoutChangeListener Common object Common Engine abstract class Engine RENDERER : Any ErrorListener interface ErrorListener ErrorListeners class ErrorListeners : CopyOnWriteArraySet ErrorListener , ErrorListener Group class Group : DefaultLifecycleObserver , Callback Manager class Manager : PlayableManager , DefaultLifecycleObserver , LifecycleEventObserver , Comparable Manager Master class Master : PlayableManager MemoryMode enum class MemoryMode Playable A Playable contains necessary information about a Media item, and the config provided by client for it to start the media with expected result. Instance of Playable is provided using PlayableCreator . abstract class Playable PlayableCreator abstract class PlayableCreator RENDERER : Any PlayableManager interface PlayableManager Playback abstract class Playback : PlayerEventListener , ErrorListener PlayerEventListener interface PlayerEventListener : EventListener , VideoListener , AudioListener , TextOutput , MetadataOutput PlayerEventListeners class PlayerEventListeners : CopyOnWriteArraySet PlayerEventListener , PlayerEventListener Prioritized interface Prioritized : Comparable Prioritized Rebinder data class Rebinder : Parcelable RecycledRendererProvider abstract class RecycledRendererProvider : RendererProvider RendererProvider interface RendererProvider : DefaultLifecycleObserver Scope enum class Scope VideoSize data class VideoSize ViewRendererProvider abstract class ViewRendererProvider : RecycledRendererProvider VolumeChangedListener interface VolumeChangedListener VolumeChangedListeners class VolumeChangedListeners : CopyOnWriteArraySet VolumeChangedListener , VolumeChangedListener VolumeInfoController interface VolumeInfoController","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/#package-kohiiv1core","text":"","title":"Package kohii.v1.core"},{"location":"api/kohii-core/kohii.v1.core/#types","text":"Name Summary AbstractBridge abstract class AbstractBridge RENDERER : Any : Bridge RENDERER AbstractPlayable abstract class AbstractPlayable RENDERER : Any : Playable , Callback Binder class Binder Bridge interface Bridge RENDERER : Any BridgeCreator interface BridgeCreator RENDERER : Any Bucket abstract class Bucket : OnAttachStateChangeListener , OnLayoutChangeListener Common object Common Engine abstract class Engine RENDERER : Any ErrorListener interface ErrorListener ErrorListeners class ErrorListeners : CopyOnWriteArraySet ErrorListener , ErrorListener Group class Group : DefaultLifecycleObserver , Callback Manager class Manager : PlayableManager , DefaultLifecycleObserver , LifecycleEventObserver , Comparable Manager Master class Master : PlayableManager MemoryMode enum class MemoryMode Playable A Playable contains necessary information about a Media item, and the config provided by client for it to start the media with expected result. Instance of Playable is provided using PlayableCreator . abstract class Playable PlayableCreator abstract class PlayableCreator RENDERER : Any PlayableManager interface PlayableManager Playback abstract class Playback : PlayerEventListener , ErrorListener PlayerEventListener interface PlayerEventListener : EventListener , VideoListener , AudioListener , TextOutput , MetadataOutput PlayerEventListeners class PlayerEventListeners : CopyOnWriteArraySet PlayerEventListener , PlayerEventListener Prioritized interface Prioritized : Comparable Prioritized Rebinder data class Rebinder : Parcelable RecycledRendererProvider abstract class RecycledRendererProvider : RendererProvider RendererProvider interface RendererProvider : DefaultLifecycleObserver Scope enum class Scope VideoSize data class VideoSize ViewRendererProvider abstract class ViewRendererProvider : RecycledRendererProvider VolumeChangedListener interface VolumeChangedListener VolumeChangedListeners class VolumeChangedListeners : CopyOnWriteArraySet VolumeChangedListener , VolumeChangedListener VolumeInfoController interface VolumeInfoController","title":"Types"},{"location":"api/kohii-core/kohii.v1.core/-playable-manager/","text":"kohii-core / kohii.v1.core / PlayableManager PlayableManager interface PlayableManager Inheritors Name Summary Manager class Manager : PlayableManager , DefaultLifecycleObserver , LifecycleEventObserver , Comparable Manager Master class Master : PlayableManager","title":" playable manager"},{"location":"api/kohii-core/kohii.v1.core/-playable-manager/#playablemanager","text":"interface PlayableManager","title":"PlayableManager"},{"location":"api/kohii-core/kohii.v1.core/-playable-manager/#inheritors","text":"Name Summary Manager class Manager : PlayableManager , DefaultLifecycleObserver , LifecycleEventObserver , Comparable Manager Master class Master : PlayableManager","title":"Inheritors"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/","text":"kohii-core / kohii.v1.core / AbstractBridge AbstractBridge abstract class AbstractBridge RENDERER : Any : Bridge RENDERER Constructors Name Summary init AbstractBridge() Properties Name Summary errorListeners val errorListeners: ErrorListeners eventListeners val eventListeners: PlayerEventListeners volumeListeners val volumeListeners: VolumeChangedListeners Functions Name Summary addErrorListener open fun addErrorListener(errorListener: ErrorListener ): Unit addEventListener Add a new PlayerEventListener to this Playable. As calling prepare also triggers some internal events, this method should be called before prepare so that Client could received them all. open fun addEventListener(listener: PlayerEventListener ): Unit addVolumeChangeListener open fun addVolumeChangeListener(listener: VolumeChangedListener ): Unit removeErrorListener open fun removeErrorListener(errorListener: ErrorListener ?): Unit removeEventListener Remove an PlayerEventListener from this Playable. open fun removeEventListener(listener: PlayerEventListener ?): Unit removeVolumeChangeListener open fun removeVolumeChangeListener(listener: VolumeChangedListener ?): Unit","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/#abstractbridge","text":"abstract class AbstractBridge RENDERER : Any : Bridge RENDERER","title":"AbstractBridge"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/#constructors","text":"Name Summary init AbstractBridge()","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/#properties","text":"Name Summary errorListeners val errorListeners: ErrorListeners eventListeners val eventListeners: PlayerEventListeners volumeListeners val volumeListeners: VolumeChangedListeners","title":"Properties"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/#functions","text":"Name Summary addErrorListener open fun addErrorListener(errorListener: ErrorListener ): Unit addEventListener Add a new PlayerEventListener to this Playable. As calling prepare also triggers some internal events, this method should be called before prepare so that Client could received them all. open fun addEventListener(listener: PlayerEventListener ): Unit addVolumeChangeListener open fun addVolumeChangeListener(listener: VolumeChangedListener ): Unit removeErrorListener open fun removeErrorListener(errorListener: ErrorListener ?): Unit removeEventListener Remove an PlayerEventListener from this Playable. open fun removeEventListener(listener: PlayerEventListener ?): Unit removeVolumeChangeListener open fun removeVolumeChangeListener(listener: VolumeChangedListener ?): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/-init-/","text":"kohii-core / kohii.v1.core / AbstractBridge / init init AbstractBridge()","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/-init-/#init","text":"AbstractBridge()","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/add-error-listener/","text":"kohii-core / kohii.v1.core / AbstractBridge / addErrorListener addErrorListener open fun addErrorListener(errorListener: ErrorListener ): Unit","title":"Add error listener"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/add-error-listener/#adderrorlistener","text":"open fun addErrorListener(errorListener: ErrorListener ): Unit","title":"addErrorListener"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/add-event-listener/","text":"kohii-core / kohii.v1.core / AbstractBridge / addEventListener addEventListener open fun addEventListener(listener: PlayerEventListener ): Unit Add a new PlayerEventListener to this Playable. As calling prepare also triggers some internal events, this method should be called before prepare so that Client could received them all. Parameters listener - the EventListener to add, must be not null .","title":"Add event listener"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/add-event-listener/#addeventlistener","text":"open fun addEventListener(listener: PlayerEventListener ): Unit Add a new PlayerEventListener to this Playable. As calling prepare also triggers some internal events, this method should be called before prepare so that Client could received them all.","title":"addEventListener"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/add-event-listener/#parameters","text":"listener - the EventListener to add, must be not null .","title":"Parameters"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/add-volume-change-listener/","text":"kohii-core / kohii.v1.core / AbstractBridge / addVolumeChangeListener addVolumeChangeListener open fun addVolumeChangeListener(listener: VolumeChangedListener ): Unit","title":"Add volume change listener"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/add-volume-change-listener/#addvolumechangelistener","text":"open fun addVolumeChangeListener(listener: VolumeChangedListener ): Unit","title":"addVolumeChangeListener"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/error-listeners/","text":"kohii-core / kohii.v1.core / AbstractBridge / errorListeners errorListeners protected val errorListeners: ErrorListeners","title":"Error listeners"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/error-listeners/#errorlisteners","text":"protected val errorListeners: ErrorListeners","title":"errorListeners"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/event-listeners/","text":"kohii-core / kohii.v1.core / AbstractBridge / eventListeners eventListeners protected val eventListeners: PlayerEventListeners","title":"Event listeners"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/event-listeners/#eventlisteners","text":"protected val eventListeners: PlayerEventListeners","title":"eventListeners"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/remove-error-listener/","text":"kohii-core / kohii.v1.core / AbstractBridge / removeErrorListener removeErrorListener open fun removeErrorListener(errorListener: ErrorListener ?): Unit","title":"Remove error listener"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/remove-error-listener/#removeerrorlistener","text":"open fun removeErrorListener(errorListener: ErrorListener ?): Unit","title":"removeErrorListener"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/remove-event-listener/","text":"kohii-core / kohii.v1.core / AbstractBridge / removeEventListener removeEventListener open fun removeEventListener(listener: PlayerEventListener ?): Unit Remove an PlayerEventListener from this Playable. Parameters listener - the EventListener to be removed. If null, nothing happens.","title":"Remove event listener"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/remove-event-listener/#removeeventlistener","text":"open fun removeEventListener(listener: PlayerEventListener ?): Unit Remove an PlayerEventListener from this Playable.","title":"removeEventListener"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/remove-event-listener/#parameters","text":"listener - the EventListener to be removed. If null, nothing happens.","title":"Parameters"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/remove-volume-change-listener/","text":"kohii-core / kohii.v1.core / AbstractBridge / removeVolumeChangeListener removeVolumeChangeListener open fun removeVolumeChangeListener(listener: VolumeChangedListener ?): Unit","title":"Remove volume change listener"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/remove-volume-change-listener/#removevolumechangelistener","text":"open fun removeVolumeChangeListener(listener: VolumeChangedListener ?): Unit","title":"removeVolumeChangeListener"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/volume-listeners/","text":"kohii-core / kohii.v1.core / AbstractBridge / volumeListeners volumeListeners protected val volumeListeners: VolumeChangedListeners","title":"Volume listeners"},{"location":"api/kohii-core/kohii.v1.core/-abstract-bridge/volume-listeners/#volumelisteners","text":"protected val volumeListeners: VolumeChangedListeners","title":"volumeListeners"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/","text":"kohii-core / kohii.v1.core / AbstractPlayable AbstractPlayable abstract class AbstractPlayable RENDERER : Any : Playable , Callback Constructors Name Summary init AbstractPlayable(master: Master , media: Media , config: Config, bridge: Bridge RENDERER ) Properties Name Summary bridge val bridge: Bridge RENDERER master val master: Master tag open val tag: Any Functions Name Summary considerReleaseRenderer Once the Playback finds it is good time for the Playable to request/release the Renderer, it will trigger these calls to send that signal. The 'good time' can varies due to the actual use case. In Kohii, there are 2 following cases: open fun considerReleaseRenderer(playback: Playback ): Unit considerRequestRenderer Once the Playback finds it is good time for the Playable to request/release the Renderer, it will trigger these calls to send that signal. The 'good time' can varies due to the actual use case. In Kohii, there are 2 following cases: open fun considerRequestRenderer(playback: Playback ): Unit onActive open fun onActive(playback: Playback ): Unit onAdded open fun onAdded(playback: Playback ): Unit onConfigChange Return true to indicate that this Playable would survive configuration changes and no playback reloading would be required. In special cases like YouTube playback, it is recommended to return false so Kohii will handle the resource recycling correctly. open fun onConfigChange(): Boolean onInActive open fun onInActive(playback: Playback ): Unit onPause open fun onPause(): Unit onPlay open fun onPlay(): Unit onPrepare open fun onPrepare(loadSource: Boolean ): Unit onReady open fun onReady(): Unit onRelease open fun onRelease(): Unit onRemoved open fun onRemoved(playback: Playback ): Unit onReset open fun onReset(): Unit onUnbind open fun onUnbind(playback: Playback ): Unit toString open fun toString(): String","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/#abstractplayable","text":"abstract class AbstractPlayable RENDERER : Any : Playable , Callback","title":"AbstractPlayable"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/#constructors","text":"Name Summary init AbstractPlayable(master: Master , media: Media , config: Config, bridge: Bridge RENDERER )","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/#properties","text":"Name Summary bridge val bridge: Bridge RENDERER master val master: Master tag open val tag: Any","title":"Properties"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/#functions","text":"Name Summary considerReleaseRenderer Once the Playback finds it is good time for the Playable to request/release the Renderer, it will trigger these calls to send that signal. The 'good time' can varies due to the actual use case. In Kohii, there are 2 following cases: open fun considerReleaseRenderer(playback: Playback ): Unit considerRequestRenderer Once the Playback finds it is good time for the Playable to request/release the Renderer, it will trigger these calls to send that signal. The 'good time' can varies due to the actual use case. In Kohii, there are 2 following cases: open fun considerRequestRenderer(playback: Playback ): Unit onActive open fun onActive(playback: Playback ): Unit onAdded open fun onAdded(playback: Playback ): Unit onConfigChange Return true to indicate that this Playable would survive configuration changes and no playback reloading would be required. In special cases like YouTube playback, it is recommended to return false so Kohii will handle the resource recycling correctly. open fun onConfigChange(): Boolean onInActive open fun onInActive(playback: Playback ): Unit onPause open fun onPause(): Unit onPlay open fun onPlay(): Unit onPrepare open fun onPrepare(loadSource: Boolean ): Unit onReady open fun onReady(): Unit onRelease open fun onRelease(): Unit onRemoved open fun onRemoved(playback: Playback ): Unit onReset open fun onReset(): Unit onUnbind open fun onUnbind(playback: Playback ): Unit toString open fun toString(): String","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/-init-/","text":"kohii-core / kohii.v1.core / AbstractPlayable / init init AbstractPlayable(master: Master , media: Media , config: Config, bridge: Bridge RENDERER )","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/-init-/#init","text":"AbstractPlayable(master: Master , media: Media , config: Config, bridge: Bridge RENDERER )","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/bridge/","text":"kohii-core / kohii.v1.core / AbstractPlayable / bridge bridge protected val bridge: Bridge RENDERER","title":"Bridge"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/bridge/#bridge","text":"protected val bridge: Bridge RENDERER","title":"bridge"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/consider-release-renderer/","text":"kohii-core / kohii.v1.core / AbstractPlayable / considerReleaseRenderer considerReleaseRenderer open fun considerReleaseRenderer(playback: Playback ): Unit Once the Playback finds it is good time for the Playable to request/release the Renderer, it will trigger these calls to send that signal. The 'good time' can varies due to the actual use case. In Kohii, there are 2 following cases: The Playback's Container is also the renderer. In this case, the Container/Renderer will always be there. We suggest that the Playable should request for the Renderer as soon as possible, and release it as late as possible. The proper place to do that are when the Playback becomes active (onActive()) and inactive (onInActive()). See Also StaticViewRendererPlayback DynamicViewRendererPlayback DynamicFragmentRendererPlayback","title":"Consider release renderer"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/consider-release-renderer/#considerreleaserenderer","text":"open fun considerReleaseRenderer(playback: Playback ): Unit Once the Playback finds it is good time for the Playable to request/release the Renderer, it will trigger these calls to send that signal. The 'good time' can varies due to the actual use case. In Kohii, there are 2 following cases: The Playback's Container is also the renderer. In this case, the Container/Renderer will always be there. We suggest that the Playable should request for the Renderer as soon as possible, and release it as late as possible. The proper place to do that are when the Playback becomes active (onActive()) and inactive (onInActive()). See Also StaticViewRendererPlayback DynamicViewRendererPlayback DynamicFragmentRendererPlayback","title":"considerReleaseRenderer"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/consider-request-renderer/","text":"kohii-core / kohii.v1.core / AbstractPlayable / considerRequestRenderer considerRequestRenderer open fun considerRequestRenderer(playback: Playback ): Unit Once the Playback finds it is good time for the Playable to request/release the Renderer, it will trigger these calls to send that signal. The 'good time' can varies due to the actual use case. In Kohii, there are 2 following cases: The Playback's Container is also the renderer. In this case, the Container/Renderer will always be there. We suggest that the Playable should request for the Renderer as soon as possible, and release it as late as possible. The proper place to do that are when the Playback becomes active (onActive()) and inactive (onInActive()). See Also StaticViewRendererPlayback DynamicViewRendererPlayback DynamicFragmentRendererPlayback","title":"Consider request renderer"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/consider-request-renderer/#considerrequestrenderer","text":"open fun considerRequestRenderer(playback: Playback ): Unit Once the Playback finds it is good time for the Playable to request/release the Renderer, it will trigger these calls to send that signal. The 'good time' can varies due to the actual use case. In Kohii, there are 2 following cases: The Playback's Container is also the renderer. In this case, the Container/Renderer will always be there. We suggest that the Playable should request for the Renderer as soon as possible, and release it as late as possible. The proper place to do that are when the Playback becomes active (onActive()) and inactive (onInActive()). See Also StaticViewRendererPlayback DynamicViewRendererPlayback DynamicFragmentRendererPlayback","title":"considerRequestRenderer"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/master/","text":"kohii-core / kohii.v1.core / AbstractPlayable / master master protected val master: Master","title":"Master"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/master/#master","text":"protected val master: Master","title":"master"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-active/","text":"kohii-core / kohii.v1.core / AbstractPlayable / onActive onActive open fun onActive(playback: Playback ): Unit","title":"On active"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-active/#onactive","text":"open fun onActive(playback: Playback ): Unit","title":"onActive"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-added/","text":"kohii-core / kohii.v1.core / AbstractPlayable / onAdded onAdded open fun onAdded(playback: Playback ): Unit","title":"On added"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-added/#onadded","text":"open fun onAdded(playback: Playback ): Unit","title":"onAdded"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-config-change/","text":"kohii-core / kohii.v1.core / AbstractPlayable / onConfigChange onConfigChange open fun onConfigChange(): Boolean Return true to indicate that this Playable would survive configuration changes and no playback reloading would be required. In special cases like YouTube playback, it is recommended to return false so Kohii will handle the resource recycling correctly.","title":"On config change"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-config-change/#onconfigchange","text":"open fun onConfigChange(): Boolean Return true to indicate that this Playable would survive configuration changes and no playback reloading would be required. In special cases like YouTube playback, it is recommended to return false so Kohii will handle the resource recycling correctly.","title":"onConfigChange"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-in-active/","text":"kohii-core / kohii.v1.core / AbstractPlayable / onInActive onInActive open fun onInActive(playback: Playback ): Unit","title":"On in active"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-in-active/#oninactive","text":"open fun onInActive(playback: Playback ): Unit","title":"onInActive"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-pause/","text":"kohii-core / kohii.v1.core / AbstractPlayable / onPause onPause open fun onPause(): Unit","title":"On pause"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-pause/#onpause","text":"open fun onPause(): Unit","title":"onPause"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-play/","text":"kohii-core / kohii.v1.core / AbstractPlayable / onPlay onPlay open fun onPlay(): Unit","title":"On play"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-play/#onplay","text":"open fun onPlay(): Unit","title":"onPlay"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-prepare/","text":"kohii-core / kohii.v1.core / AbstractPlayable / onPrepare onPrepare open fun onPrepare(loadSource: Boolean ): Unit","title":"On prepare"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-prepare/#onprepare","text":"open fun onPrepare(loadSource: Boolean ): Unit","title":"onPrepare"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-ready/","text":"kohii-core / kohii.v1.core / AbstractPlayable / onReady onReady open fun onReady(): Unit","title":"On ready"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-ready/#onready","text":"open fun onReady(): Unit","title":"onReady"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-release/","text":"kohii-core / kohii.v1.core / AbstractPlayable / onRelease onRelease open fun onRelease(): Unit","title":"On release"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-release/#onrelease","text":"open fun onRelease(): Unit","title":"onRelease"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-removed/","text":"kohii-core / kohii.v1.core / AbstractPlayable / onRemoved onRemoved open fun onRemoved(playback: Playback ): Unit","title":"On removed"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-removed/#onremoved","text":"open fun onRemoved(playback: Playback ): Unit","title":"onRemoved"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-reset/","text":"kohii-core / kohii.v1.core / AbstractPlayable / onReset onReset open fun onReset(): Unit","title":"On reset"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-reset/#onreset","text":"open fun onReset(): Unit","title":"onReset"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-unbind/","text":"kohii-core / kohii.v1.core / AbstractPlayable / onUnbind onUnbind open fun onUnbind(playback: Playback ): Unit","title":"On unbind"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/on-unbind/#onunbind","text":"open fun onUnbind(playback: Playback ): Unit","title":"onUnbind"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/tag/","text":"kohii-core / kohii.v1.core / AbstractPlayable / tag tag open val tag: Any","title":"Tag"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/tag/#tag","text":"open val tag: Any","title":"tag"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/to-string/","text":"kohii-core / kohii.v1.core / AbstractPlayable / toString toString open fun toString(): String","title":"To string"},{"location":"api/kohii-core/kohii.v1.core/-abstract-playable/to-string/#tostring","text":"open fun toString(): String","title":"toString"},{"location":"api/kohii-core/kohii.v1.core/-binder/","text":"kohii-core / kohii.v1.core / Binder Binder class Binder Types Name Summary Options class Options Constructors Name Summary init Binder(engine: Engine * , media: Media ) Properties Name Summary media val media: Media Functions Name Summary bind fun bind(container: ViewGroup , callback: (( Playback ) - Unit )? = null): Rebinder ?","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-binder/#binder","text":"class Binder","title":"Binder"},{"location":"api/kohii-core/kohii.v1.core/-binder/#types","text":"Name Summary Options class Options","title":"Types"},{"location":"api/kohii-core/kohii.v1.core/-binder/#constructors","text":"Name Summary init Binder(engine: Engine * , media: Media )","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-binder/#properties","text":"Name Summary media val media: Media","title":"Properties"},{"location":"api/kohii-core/kohii.v1.core/-binder/#functions","text":"Name Summary bind fun bind(container: ViewGroup , callback: (( Playback ) - Unit )? = null): Rebinder ?","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-binder/-init-/","text":"kohii-core / kohii.v1.core / Binder / init init Binder(engine: Engine * , media: Media )","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-binder/-init-/#init","text":"Binder(engine: Engine * , media: Media )","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-binder/bind/","text":"kohii-core / kohii.v1.core / Binder / bind bind fun bind(container: ViewGroup , callback: (( Playback ) - Unit )? = null): Rebinder ?","title":"Bind"},{"location":"api/kohii-core/kohii.v1.core/-binder/bind/#bind","text":"fun bind(container: ViewGroup , callback: (( Playback ) - Unit )? = null): Rebinder ?","title":"bind"},{"location":"api/kohii-core/kohii.v1.core/-binder/media/","text":"kohii-core / kohii.v1.core / Binder / media media val media: Media","title":"Media"},{"location":"api/kohii-core/kohii.v1.core/-binder/media/#media","text":"val media: Media","title":"media"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/","text":"kohii-core / kohii.v1.core / Binder / Options Options class Options Constructors Name Summary init Options() Properties Name Summary callbacks val callbacks: MutableSet Callback controller var controller: Controller? delay var delay: Int preload var preload: Boolean repeatMode var repeatMode: Int tag var tag: Any threshold var threshold: Float","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/#options","text":"class Options","title":"Options"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/#constructors","text":"Name Summary init Options()","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/#properties","text":"Name Summary callbacks val callbacks: MutableSet Callback controller var controller: Controller? delay var delay: Int preload var preload: Boolean repeatMode var repeatMode: Int tag var tag: Any threshold var threshold: Float","title":"Properties"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/-init-/","text":"kohii-core / kohii.v1.core / Binder / Options / init init Options()","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/-init-/#init","text":"Options()","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/callbacks/","text":"kohii-core / kohii.v1.core / Binder / Options / callbacks callbacks val callbacks: MutableSet Callback","title":"Callbacks"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/callbacks/#callbacks","text":"val callbacks: MutableSet Callback","title":"callbacks"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/controller/","text":"kohii-core / kohii.v1.core / Binder / Options / controller controller var controller: Controller?","title":"Controller"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/controller/#controller","text":"var controller: Controller?","title":"controller"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/delay/","text":"kohii-core / kohii.v1.core / Binder / Options / delay delay var delay: Int","title":"Delay"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/delay/#delay","text":"var delay: Int","title":"delay"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/preload/","text":"kohii-core / kohii.v1.core / Binder / Options / preload preload var preload: Boolean","title":"Preload"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/preload/#preload","text":"var preload: Boolean","title":"preload"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/repeat-mode/","text":"kohii-core / kohii.v1.core / Binder / Options / repeatMode repeatMode var repeatMode: Int","title":"Repeat mode"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/repeat-mode/#repeatmode","text":"var repeatMode: Int","title":"repeatMode"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/tag/","text":"kohii-core / kohii.v1.core / Binder / Options / tag tag var tag: Any","title":"Tag"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/tag/#tag","text":"var tag: Any","title":"tag"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/threshold/","text":"kohii-core / kohii.v1.core / Binder / Options / threshold threshold var threshold: Float","title":"Threshold"},{"location":"api/kohii-core/kohii.v1.core/-binder/-options/threshold/#threshold","text":"var threshold: Float","title":"threshold"},{"location":"api/kohii-core/kohii.v1.core/-bridge/","text":"kohii-core / kohii.v1.core / Bridge Bridge interface Bridge RENDERER : Any Properties Name Summary parameters abstract var parameters: PlaybackParameters playbackInfo abstract var playbackInfo: PlaybackInfo playbackState abstract val playbackState: Int renderer abstract var renderer: RENDERER? repeatMode abstract var repeatMode: Int videoSize abstract var videoSize: VideoSize volumeInfo abstract val volumeInfo: VolumeInfo Functions Name Summary addErrorListener abstract fun addErrorListener(errorListener: ErrorListener ): Unit addEventListener Add a new PlayerEventListener to this Playable. As calling prepare also triggers some internal events, this method should be called before prepare so that Client could received them all. abstract fun addEventListener(listener: PlayerEventListener ): Unit addVolumeChangeListener abstract fun addVolumeChangeListener(listener: VolumeChangedListener ): Unit isPlaying abstract fun isPlaying(): Boolean pause com.google.android.exoplayer2.Player.setPlayWhenReady to false abstract fun pause(): Unit play com.google.android.exoplayer2.Player.setPlayWhenReady to true abstract fun play(): Unit prepare Prepare the resource for a ExoPlayer . This method should: abstract fun prepare(loadSource: Boolean ): Unit ready abstract fun ready(): Unit release Release all resource. After this, the Player instance is released to the Player pool and the Bridge must call prepare to request for a Player it again. abstract fun release(): Unit removeErrorListener abstract fun removeErrorListener(errorListener: ErrorListener ?): Unit removeEventListener Remove an PlayerEventListener from this Playable. abstract fun removeEventListener(listener: PlayerEventListener ?): Unit removeVolumeChangeListener abstract fun removeVolumeChangeListener(listener: VolumeChangedListener ?): Unit reset Reset all resource, so that the playback can start all over again. This is to cleanup the playback for reuse. The ExoPlayer instance must be still usable without calling prepare . abstract fun reset(resetPlayer: Boolean = true): Unit seekTo abstract fun seekTo(positionMs: Long ): Unit setVolumeInfo Update playback's volume. abstract fun setVolumeInfo(volumeInfo: VolumeInfo ): Boolean Inheritors Name Summary AbstractBridge abstract class AbstractBridge RENDERER : Any : Bridge RENDERER","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-bridge/#bridge","text":"interface Bridge RENDERER : Any","title":"Bridge"},{"location":"api/kohii-core/kohii.v1.core/-bridge/#properties","text":"Name Summary parameters abstract var parameters: PlaybackParameters playbackInfo abstract var playbackInfo: PlaybackInfo playbackState abstract val playbackState: Int renderer abstract var renderer: RENDERER? repeatMode abstract var repeatMode: Int videoSize abstract var videoSize: VideoSize volumeInfo abstract val volumeInfo: VolumeInfo","title":"Properties"},{"location":"api/kohii-core/kohii.v1.core/-bridge/#functions","text":"Name Summary addErrorListener abstract fun addErrorListener(errorListener: ErrorListener ): Unit addEventListener Add a new PlayerEventListener to this Playable. As calling prepare also triggers some internal events, this method should be called before prepare so that Client could received them all. abstract fun addEventListener(listener: PlayerEventListener ): Unit addVolumeChangeListener abstract fun addVolumeChangeListener(listener: VolumeChangedListener ): Unit isPlaying abstract fun isPlaying(): Boolean pause com.google.android.exoplayer2.Player.setPlayWhenReady to false abstract fun pause(): Unit play com.google.android.exoplayer2.Player.setPlayWhenReady to true abstract fun play(): Unit prepare Prepare the resource for a ExoPlayer . This method should: abstract fun prepare(loadSource: Boolean ): Unit ready abstract fun ready(): Unit release Release all resource. After this, the Player instance is released to the Player pool and the Bridge must call prepare to request for a Player it again. abstract fun release(): Unit removeErrorListener abstract fun removeErrorListener(errorListener: ErrorListener ?): Unit removeEventListener Remove an PlayerEventListener from this Playable. abstract fun removeEventListener(listener: PlayerEventListener ?): Unit removeVolumeChangeListener abstract fun removeVolumeChangeListener(listener: VolumeChangedListener ?): Unit reset Reset all resource, so that the playback can start all over again. This is to cleanup the playback for reuse. The ExoPlayer instance must be still usable without calling prepare . abstract fun reset(resetPlayer: Boolean = true): Unit seekTo abstract fun seekTo(positionMs: Long ): Unit setVolumeInfo Update playback's volume. abstract fun setVolumeInfo(volumeInfo: VolumeInfo ): Boolean","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-bridge/#inheritors","text":"Name Summary AbstractBridge abstract class AbstractBridge RENDERER : Any : Bridge RENDERER","title":"Inheritors"},{"location":"api/kohii-core/kohii.v1.core/-bridge/add-error-listener/","text":"kohii-core / kohii.v1.core / Bridge / addErrorListener addErrorListener abstract fun addErrorListener(errorListener: ErrorListener ): Unit","title":"Add error listener"},{"location":"api/kohii-core/kohii.v1.core/-bridge/add-error-listener/#adderrorlistener","text":"abstract fun addErrorListener(errorListener: ErrorListener ): Unit","title":"addErrorListener"},{"location":"api/kohii-core/kohii.v1.core/-bridge/add-event-listener/","text":"kohii-core / kohii.v1.core / Bridge / addEventListener addEventListener abstract fun addEventListener(listener: PlayerEventListener ): Unit Add a new PlayerEventListener to this Playable. As calling prepare also triggers some internal events, this method should be called before prepare so that Client could received them all. Parameters listener - the EventListener to add, must be not null .","title":"Add event listener"},{"location":"api/kohii-core/kohii.v1.core/-bridge/add-event-listener/#addeventlistener","text":"abstract fun addEventListener(listener: PlayerEventListener ): Unit Add a new PlayerEventListener to this Playable. As calling prepare also triggers some internal events, this method should be called before prepare so that Client could received them all.","title":"addEventListener"},{"location":"api/kohii-core/kohii.v1.core/-bridge/add-event-listener/#parameters","text":"listener - the EventListener to add, must be not null .","title":"Parameters"},{"location":"api/kohii-core/kohii.v1.core/-bridge/add-volume-change-listener/","text":"kohii-core / kohii.v1.core / Bridge / addVolumeChangeListener addVolumeChangeListener abstract fun addVolumeChangeListener(listener: VolumeChangedListener ): Unit","title":"Add volume change listener"},{"location":"api/kohii-core/kohii.v1.core/-bridge/add-volume-change-listener/#addvolumechangelistener","text":"abstract fun addVolumeChangeListener(listener: VolumeChangedListener ): Unit","title":"addVolumeChangeListener"},{"location":"api/kohii-core/kohii.v1.core/-bridge/is-playing/","text":"kohii-core / kohii.v1.core / Bridge / isPlaying isPlaying abstract fun isPlaying(): Boolean","title":"Is playing"},{"location":"api/kohii-core/kohii.v1.core/-bridge/is-playing/#isplaying","text":"abstract fun isPlaying(): Boolean","title":"isPlaying"},{"location":"api/kohii-core/kohii.v1.core/-bridge/parameters/","text":"kohii-core / kohii.v1.core / Bridge / parameters parameters abstract var parameters: PlaybackParameters","title":"Parameters"},{"location":"api/kohii-core/kohii.v1.core/-bridge/parameters/#parameters","text":"abstract var parameters: PlaybackParameters","title":"parameters"},{"location":"api/kohii-core/kohii.v1.core/-bridge/pause/","text":"kohii-core / kohii.v1.core / Bridge / pause pause abstract fun pause(): Unit com.google.android.exoplayer2.Player.setPlayWhenReady to false","title":"Pause"},{"location":"api/kohii-core/kohii.v1.core/-bridge/pause/#pause","text":"abstract fun pause(): Unit com.google.android.exoplayer2.Player.setPlayWhenReady to false","title":"pause"},{"location":"api/kohii-core/kohii.v1.core/-bridge/play/","text":"kohii-core / kohii.v1.core / Bridge / play play abstract fun play(): Unit com.google.android.exoplayer2.Player.setPlayWhenReady to true","title":"Play"},{"location":"api/kohii-core/kohii.v1.core/-bridge/play/#play","text":"abstract fun play(): Unit com.google.android.exoplayer2.Player.setPlayWhenReady to true","title":"play"},{"location":"api/kohii-core/kohii.v1.core/-bridge/playback-info/","text":"kohii-core / kohii.v1.core / Bridge / playbackInfo playbackInfo abstract var playbackInfo: PlaybackInfo","title":"Playback info"},{"location":"api/kohii-core/kohii.v1.core/-bridge/playback-info/#playbackinfo","text":"abstract var playbackInfo: PlaybackInfo","title":"playbackInfo"},{"location":"api/kohii-core/kohii.v1.core/-bridge/playback-state/","text":"kohii-core / kohii.v1.core / Bridge / playbackState playbackState abstract val playbackState: Int","title":"Playback state"},{"location":"api/kohii-core/kohii.v1.core/-bridge/playback-state/#playbackstate","text":"abstract val playbackState: Int","title":"playbackState"},{"location":"api/kohii-core/kohii.v1.core/-bridge/prepare/","text":"kohii-core / kohii.v1.core / Bridge / prepare prepare abstract fun prepare(loadSource: Boolean ): Unit Prepare the resource for a ExoPlayer . This method should: Request for new ExoPlayer instance if there is not a usable one. Configure PlayerEventListener for it. If there is non-trivial PlaybackInfo, update it to the SimpleExoPlayer. If client request to prepare MediaSource, then prepare it. This method must be called before .setPlayerView . Parameters loadSource - if true , also prepare the MediaSource when preparing the Player, if false just do nothing for the MediaSource.","title":"Prepare"},{"location":"api/kohii-core/kohii.v1.core/-bridge/prepare/#prepare","text":"abstract fun prepare(loadSource: Boolean ): Unit Prepare the resource for a ExoPlayer . This method should: Request for new ExoPlayer instance if there is not a usable one. Configure PlayerEventListener for it. If there is non-trivial PlaybackInfo, update it to the SimpleExoPlayer. If client request to prepare MediaSource, then prepare it. This method must be called before .setPlayerView .","title":"prepare"},{"location":"api/kohii-core/kohii.v1.core/-bridge/prepare/#parameters","text":"loadSource - if true , also prepare the MediaSource when preparing the Player, if false just do nothing for the MediaSource.","title":"Parameters"},{"location":"api/kohii-core/kohii.v1.core/-bridge/ready/","text":"kohii-core / kohii.v1.core / Bridge / ready ready abstract fun ready(): Unit","title":"Ready"},{"location":"api/kohii-core/kohii.v1.core/-bridge/ready/#ready","text":"abstract fun ready(): Unit","title":"ready"},{"location":"api/kohii-core/kohii.v1.core/-bridge/release/","text":"kohii-core / kohii.v1.core / Bridge / release release abstract fun release(): Unit Release all resource. After this, the Player instance is released to the Player pool and the Bridge must call prepare to request for a Player it again.","title":"Release"},{"location":"api/kohii-core/kohii.v1.core/-bridge/release/#release","text":"abstract fun release(): Unit Release all resource. After this, the Player instance is released to the Player pool and the Bridge must call prepare to request for a Player it again.","title":"release"},{"location":"api/kohii-core/kohii.v1.core/-bridge/remove-error-listener/","text":"kohii-core / kohii.v1.core / Bridge / removeErrorListener removeErrorListener abstract fun removeErrorListener(errorListener: ErrorListener ?): Unit","title":"Remove error listener"},{"location":"api/kohii-core/kohii.v1.core/-bridge/remove-error-listener/#removeerrorlistener","text":"abstract fun removeErrorListener(errorListener: ErrorListener ?): Unit","title":"removeErrorListener"},{"location":"api/kohii-core/kohii.v1.core/-bridge/remove-event-listener/","text":"kohii-core / kohii.v1.core / Bridge / removeEventListener removeEventListener abstract fun removeEventListener(listener: PlayerEventListener ?): Unit Remove an PlayerEventListener from this Playable. Parameters listener - the EventListener to be removed. If null, nothing happens.","title":"Remove event listener"},{"location":"api/kohii-core/kohii.v1.core/-bridge/remove-event-listener/#removeeventlistener","text":"abstract fun removeEventListener(listener: PlayerEventListener ?): Unit Remove an PlayerEventListener from this Playable.","title":"removeEventListener"},{"location":"api/kohii-core/kohii.v1.core/-bridge/remove-event-listener/#parameters","text":"listener - the EventListener to be removed. If null, nothing happens.","title":"Parameters"},{"location":"api/kohii-core/kohii.v1.core/-bridge/remove-volume-change-listener/","text":"kohii-core / kohii.v1.core / Bridge / removeVolumeChangeListener removeVolumeChangeListener abstract fun removeVolumeChangeListener(listener: VolumeChangedListener ?): Unit","title":"Remove volume change listener"},{"location":"api/kohii-core/kohii.v1.core/-bridge/remove-volume-change-listener/#removevolumechangelistener","text":"abstract fun removeVolumeChangeListener(listener: VolumeChangedListener ?): Unit","title":"removeVolumeChangeListener"},{"location":"api/kohii-core/kohii.v1.core/-bridge/renderer/","text":"kohii-core / kohii.v1.core / Bridge / renderer renderer abstract var renderer: RENDERER?","title":"Renderer"},{"location":"api/kohii-core/kohii.v1.core/-bridge/renderer/#renderer","text":"abstract var renderer: RENDERER?","title":"renderer"},{"location":"api/kohii-core/kohii.v1.core/-bridge/repeat-mode/","text":"kohii-core / kohii.v1.core / Bridge / repeatMode repeatMode @RepeatMode abstract var repeatMode: Int","title":"Repeat mode"},{"location":"api/kohii-core/kohii.v1.core/-bridge/repeat-mode/#repeatmode","text":"@RepeatMode abstract var repeatMode: Int","title":"repeatMode"},{"location":"api/kohii-core/kohii.v1.core/-bridge/reset/","text":"kohii-core / kohii.v1.core / Bridge / reset reset abstract fun reset(resetPlayer: Boolean = true): Unit Reset all resource, so that the playback can start all over again. This is to cleanup the playback for reuse. The ExoPlayer instance must be still usable without calling prepare .","title":"Reset"},{"location":"api/kohii-core/kohii.v1.core/-bridge/reset/#reset","text":"abstract fun reset(resetPlayer: Boolean = true): Unit Reset all resource, so that the playback can start all over again. This is to cleanup the playback for reuse. The ExoPlayer instance must be still usable without calling prepare .","title":"reset"},{"location":"api/kohii-core/kohii.v1.core/-bridge/seek-to/","text":"kohii-core / kohii.v1.core / Bridge / seekTo seekTo abstract fun seekTo(positionMs: Long ): Unit","title":"Seek to"},{"location":"api/kohii-core/kohii.v1.core/-bridge/seek-to/#seekto","text":"abstract fun seekTo(positionMs: Long ): Unit","title":"seekTo"},{"location":"api/kohii-core/kohii.v1.core/-bridge/set-volume-info/","text":"kohii-core / kohii.v1.core / Bridge / setVolumeInfo setVolumeInfo abstract fun setVolumeInfo(volumeInfo: VolumeInfo ): Boolean Update playback's volume. Parameters volumeInfo - the VolumeInfo to update to. Return true if current Volume info is updated, false otherwise.","title":"Set volume info"},{"location":"api/kohii-core/kohii.v1.core/-bridge/set-volume-info/#setvolumeinfo","text":"abstract fun setVolumeInfo(volumeInfo: VolumeInfo ): Boolean Update playback's volume.","title":"setVolumeInfo"},{"location":"api/kohii-core/kohii.v1.core/-bridge/set-volume-info/#parameters","text":"volumeInfo - the VolumeInfo to update to. Return true if current Volume info is updated, false otherwise.","title":"Parameters"},{"location":"api/kohii-core/kohii.v1.core/-bridge/video-size/","text":"kohii-core / kohii.v1.core / Bridge / videoSize videoSize abstract var videoSize: VideoSize","title":"Video size"},{"location":"api/kohii-core/kohii.v1.core/-bridge/video-size/#videosize","text":"abstract var videoSize: VideoSize","title":"videoSize"},{"location":"api/kohii-core/kohii.v1.core/-bridge/volume-info/","text":"kohii-core / kohii.v1.core / Bridge / volumeInfo volumeInfo abstract val volumeInfo: VolumeInfo","title":"Volume info"},{"location":"api/kohii-core/kohii.v1.core/-bridge/volume-info/#volumeinfo","text":"abstract val volumeInfo: VolumeInfo","title":"volumeInfo"},{"location":"api/kohii-core/kohii.v1.core/-bridge-creator/","text":"kohii-core / kohii.v1.core / BridgeCreator BridgeCreator interface BridgeCreator RENDERER : Any Functions Name Summary cleanUp abstract fun cleanUp(): Unit createBridge abstract fun createBridge(context: Context , media: Media ): Bridge RENDERER","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-bridge-creator/#bridgecreator","text":"interface BridgeCreator RENDERER : Any","title":"BridgeCreator"},{"location":"api/kohii-core/kohii.v1.core/-bridge-creator/#functions","text":"Name Summary cleanUp abstract fun cleanUp(): Unit createBridge abstract fun createBridge(context: Context , media: Media ): Bridge RENDERER","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-bridge-creator/clean-up/","text":"kohii-core / kohii.v1.core / BridgeCreator / cleanUp cleanUp abstract fun cleanUp(): Unit","title":"Clean up"},{"location":"api/kohii-core/kohii.v1.core/-bridge-creator/clean-up/#cleanup","text":"abstract fun cleanUp(): Unit","title":"cleanUp"},{"location":"api/kohii-core/kohii.v1.core/-bridge-creator/create-bridge/","text":"kohii-core / kohii.v1.core / BridgeCreator / createBridge createBridge abstract fun createBridge(context: Context , media: Media ): Bridge RENDERER","title":"Create bridge"},{"location":"api/kohii-core/kohii.v1.core/-bridge-creator/create-bridge/#createbridge","text":"abstract fun createBridge(context: Context , media: Media ): Bridge RENDERER","title":"createBridge"},{"location":"api/kohii-core/kohii.v1.core/-bucket/","text":"kohii-core / kohii.v1.core / Bucket Bucket abstract class Bucket : OnAttachStateChangeListener , OnLayoutChangeListener Constructors Name Summary init Bucket(manager: Manager , root: View ) Properties Name Summary manager val manager: Manager root open val root: View Functions Name Summary accepts abstract fun accepts(container: ViewGroup ): Boolean addContainer open fun addContainer(container: ViewGroup ): Unit allowToPlay abstract fun allowToPlay(playback: Playback ): Boolean equals open fun equals(other: Any ?): Boolean hashCode open fun hashCode(): Int onAdded open fun onAdded(): Unit onAttached open fun onAttached(): Unit onDetached open fun onDetached(): Unit onLayoutChange open fun onLayoutChange(v: View ?, left: Int , top: Int , right: Int , bottom: Int , oldLeft: Int , oldTop: Int , oldRight: Int , oldBottom: Int ): Unit onRemoved open fun onRemoved(): Unit onViewAttachedToWindow open fun onViewAttachedToWindow(v: View ?): Unit onViewDetachedFromWindow open fun onViewDetachedFromWindow(v: View ?): Unit removeContainer open fun removeContainer(container: ViewGroup ): Unit selectByOrientation fun selectByOrientation(candidates: Collection Playback , orientation: Int ): Collection Playback selectToPlay abstract fun selectToPlay(candidates: Collection Playback ): Collection Playback Companion Object Properties Name Summary BOTH_AXIS const val BOTH_AXIS: Int comparators val comparators: Map Int , Comparator Playback HORIZONTAL const val HORIZONTAL: Int NONE_AXIS const val NONE_AXIS: Int VERTICAL const val VERTICAL: Int","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-bucket/#bucket","text":"abstract class Bucket : OnAttachStateChangeListener , OnLayoutChangeListener","title":"Bucket"},{"location":"api/kohii-core/kohii.v1.core/-bucket/#constructors","text":"Name Summary init Bucket(manager: Manager , root: View )","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-bucket/#properties","text":"Name Summary manager val manager: Manager root open val root: View","title":"Properties"},{"location":"api/kohii-core/kohii.v1.core/-bucket/#functions","text":"Name Summary accepts abstract fun accepts(container: ViewGroup ): Boolean addContainer open fun addContainer(container: ViewGroup ): Unit allowToPlay abstract fun allowToPlay(playback: Playback ): Boolean equals open fun equals(other: Any ?): Boolean hashCode open fun hashCode(): Int onAdded open fun onAdded(): Unit onAttached open fun onAttached(): Unit onDetached open fun onDetached(): Unit onLayoutChange open fun onLayoutChange(v: View ?, left: Int , top: Int , right: Int , bottom: Int , oldLeft: Int , oldTop: Int , oldRight: Int , oldBottom: Int ): Unit onRemoved open fun onRemoved(): Unit onViewAttachedToWindow open fun onViewAttachedToWindow(v: View ?): Unit onViewDetachedFromWindow open fun onViewDetachedFromWindow(v: View ?): Unit removeContainer open fun removeContainer(container: ViewGroup ): Unit selectByOrientation fun selectByOrientation(candidates: Collection Playback , orientation: Int ): Collection Playback selectToPlay abstract fun selectToPlay(candidates: Collection Playback ): Collection Playback","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-bucket/#companion-object-properties","text":"Name Summary BOTH_AXIS const val BOTH_AXIS: Int comparators val comparators: Map Int , Comparator Playback HORIZONTAL const val HORIZONTAL: Int NONE_AXIS const val NONE_AXIS: Int VERTICAL const val VERTICAL: Int","title":"Companion Object Properties"},{"location":"api/kohii-core/kohii.v1.core/-bucket/-b-o-t-h_-a-x-i-s/","text":"kohii-core / kohii.v1.core / Bucket / BOTH_AXIS BOTH_AXIS const val BOTH_AXIS: Int","title":" b o t h  a x i s"},{"location":"api/kohii-core/kohii.v1.core/-bucket/-b-o-t-h_-a-x-i-s/#both_axis","text":"const val BOTH_AXIS: Int","title":"BOTH_AXIS"},{"location":"api/kohii-core/kohii.v1.core/-bucket/-h-o-r-i-z-o-n-t-a-l/","text":"kohii-core / kohii.v1.core / Bucket / HORIZONTAL HORIZONTAL const val HORIZONTAL: Int","title":" h o r i z o n t a l"},{"location":"api/kohii-core/kohii.v1.core/-bucket/-h-o-r-i-z-o-n-t-a-l/#horizontal","text":"const val HORIZONTAL: Int","title":"HORIZONTAL"},{"location":"api/kohii-core/kohii.v1.core/-bucket/-init-/","text":"kohii-core / kohii.v1.core / Bucket / init init Bucket(manager: Manager , root: View )","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-bucket/-init-/#init","text":"Bucket(manager: Manager , root: View )","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-bucket/-n-o-n-e_-a-x-i-s/","text":"kohii-core / kohii.v1.core / Bucket / NONE_AXIS NONE_AXIS const val NONE_AXIS: Int","title":" n o n e  a x i s"},{"location":"api/kohii-core/kohii.v1.core/-bucket/-n-o-n-e_-a-x-i-s/#none_axis","text":"const val NONE_AXIS: Int","title":"NONE_AXIS"},{"location":"api/kohii-core/kohii.v1.core/-bucket/-v-e-r-t-i-c-a-l/","text":"kohii-core / kohii.v1.core / Bucket / VERTICAL VERTICAL const val VERTICAL: Int","title":" v e r t i c a l"},{"location":"api/kohii-core/kohii.v1.core/-bucket/-v-e-r-t-i-c-a-l/#vertical","text":"const val VERTICAL: Int","title":"VERTICAL"},{"location":"api/kohii-core/kohii.v1.core/-bucket/accepts/","text":"kohii-core / kohii.v1.core / Bucket / accepts accepts abstract fun accepts(container: ViewGroup ): Boolean","title":"Accepts"},{"location":"api/kohii-core/kohii.v1.core/-bucket/accepts/#accepts","text":"abstract fun accepts(container: ViewGroup ): Boolean","title":"accepts"},{"location":"api/kohii-core/kohii.v1.core/-bucket/add-container/","text":"kohii-core / kohii.v1.core / Bucket / addContainer addContainer @CallSuper open fun addContainer(container: ViewGroup ): Unit","title":"Add container"},{"location":"api/kohii-core/kohii.v1.core/-bucket/add-container/#addcontainer","text":"@CallSuper open fun addContainer(container: ViewGroup ): Unit","title":"addContainer"},{"location":"api/kohii-core/kohii.v1.core/-bucket/allow-to-play/","text":"kohii-core / kohii.v1.core / Bucket / allowToPlay allowToPlay abstract fun allowToPlay(playback: Playback ): Boolean","title":"Allow to play"},{"location":"api/kohii-core/kohii.v1.core/-bucket/allow-to-play/#allowtoplay","text":"abstract fun allowToPlay(playback: Playback ): Boolean","title":"allowToPlay"},{"location":"api/kohii-core/kohii.v1.core/-bucket/comparators/","text":"kohii-core / kohii.v1.core / Bucket / comparators comparators val comparators: Map Int , Comparator Playback","title":"Comparators"},{"location":"api/kohii-core/kohii.v1.core/-bucket/comparators/#comparators","text":"val comparators: Map Int , Comparator Playback","title":"comparators"},{"location":"api/kohii-core/kohii.v1.core/-bucket/equals/","text":"kohii-core / kohii.v1.core / Bucket / equals equals open fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"api/kohii-core/kohii.v1.core/-bucket/equals/#equals","text":"open fun equals(other: Any ?): Boolean","title":"equals"},{"location":"api/kohii-core/kohii.v1.core/-bucket/hash-code/","text":"kohii-core / kohii.v1.core / Bucket / hashCode hashCode open fun hashCode(): Int","title":"Hash code"},{"location":"api/kohii-core/kohii.v1.core/-bucket/hash-code/#hashcode","text":"open fun hashCode(): Int","title":"hashCode"},{"location":"api/kohii-core/kohii.v1.core/-bucket/manager/","text":"kohii-core / kohii.v1.core / Bucket / manager manager val manager: Manager","title":"Manager"},{"location":"api/kohii-core/kohii.v1.core/-bucket/manager/#manager","text":"val manager: Manager","title":"manager"},{"location":"api/kohii-core/kohii.v1.core/-bucket/on-added/","text":"kohii-core / kohii.v1.core / Bucket / onAdded onAdded @CallSuper open fun onAdded(): Unit","title":"On added"},{"location":"api/kohii-core/kohii.v1.core/-bucket/on-added/#onadded","text":"@CallSuper open fun onAdded(): Unit","title":"onAdded"},{"location":"api/kohii-core/kohii.v1.core/-bucket/on-attached/","text":"kohii-core / kohii.v1.core / Bucket / onAttached onAttached @CallSuper open fun onAttached(): Unit","title":"On attached"},{"location":"api/kohii-core/kohii.v1.core/-bucket/on-attached/#onattached","text":"@CallSuper open fun onAttached(): Unit","title":"onAttached"},{"location":"api/kohii-core/kohii.v1.core/-bucket/on-detached/","text":"kohii-core / kohii.v1.core / Bucket / onDetached onDetached @CallSuper open fun onDetached(): Unit","title":"On detached"},{"location":"api/kohii-core/kohii.v1.core/-bucket/on-detached/#ondetached","text":"@CallSuper open fun onDetached(): Unit","title":"onDetached"},{"location":"api/kohii-core/kohii.v1.core/-bucket/on-layout-change/","text":"kohii-core / kohii.v1.core / Bucket / onLayoutChange onLayoutChange @CallSuper open fun onLayoutChange(v: View ?, left: Int , top: Int , right: Int , bottom: Int , oldLeft: Int , oldTop: Int , oldRight: Int , oldBottom: Int ): Unit","title":"On layout change"},{"location":"api/kohii-core/kohii.v1.core/-bucket/on-layout-change/#onlayoutchange","text":"@CallSuper open fun onLayoutChange(v: View ?, left: Int , top: Int , right: Int , bottom: Int , oldLeft: Int , oldTop: Int , oldRight: Int , oldBottom: Int ): Unit","title":"onLayoutChange"},{"location":"api/kohii-core/kohii.v1.core/-bucket/on-removed/","text":"kohii-core / kohii.v1.core / Bucket / onRemoved onRemoved @CallSuper open fun onRemoved(): Unit","title":"On removed"},{"location":"api/kohii-core/kohii.v1.core/-bucket/on-removed/#onremoved","text":"@CallSuper open fun onRemoved(): Unit","title":"onRemoved"},{"location":"api/kohii-core/kohii.v1.core/-bucket/on-view-attached-to-window/","text":"kohii-core / kohii.v1.core / Bucket / onViewAttachedToWindow onViewAttachedToWindow @CallSuper open fun onViewAttachedToWindow(v: View ?): Unit","title":"On view attached to window"},{"location":"api/kohii-core/kohii.v1.core/-bucket/on-view-attached-to-window/#onviewattachedtowindow","text":"@CallSuper open fun onViewAttachedToWindow(v: View ?): Unit","title":"onViewAttachedToWindow"},{"location":"api/kohii-core/kohii.v1.core/-bucket/on-view-detached-from-window/","text":"kohii-core / kohii.v1.core / Bucket / onViewDetachedFromWindow onViewDetachedFromWindow @CallSuper open fun onViewDetachedFromWindow(v: View ?): Unit","title":"On view detached from window"},{"location":"api/kohii-core/kohii.v1.core/-bucket/on-view-detached-from-window/#onviewdetachedfromwindow","text":"@CallSuper open fun onViewDetachedFromWindow(v: View ?): Unit","title":"onViewDetachedFromWindow"},{"location":"api/kohii-core/kohii.v1.core/-bucket/remove-container/","text":"kohii-core / kohii.v1.core / Bucket / removeContainer removeContainer @CallSuper open fun removeContainer(container: ViewGroup ): Unit","title":"Remove container"},{"location":"api/kohii-core/kohii.v1.core/-bucket/remove-container/#removecontainer","text":"@CallSuper open fun removeContainer(container: ViewGroup ): Unit","title":"removeContainer"},{"location":"api/kohii-core/kohii.v1.core/-bucket/root/","text":"kohii-core / kohii.v1.core / Bucket / root root open val root: View","title":"Root"},{"location":"api/kohii-core/kohii.v1.core/-bucket/root/#root","text":"open val root: View","title":"root"},{"location":"api/kohii-core/kohii.v1.core/-bucket/select-by-orientation/","text":"kohii-core / kohii.v1.core / Bucket / selectByOrientation selectByOrientation protected fun selectByOrientation(candidates: Collection Playback , orientation: Int ): Collection Playback","title":"Select by orientation"},{"location":"api/kohii-core/kohii.v1.core/-bucket/select-by-orientation/#selectbyorientation","text":"protected fun selectByOrientation(candidates: Collection Playback , orientation: Int ): Collection Playback","title":"selectByOrientation"},{"location":"api/kohii-core/kohii.v1.core/-bucket/select-to-play/","text":"kohii-core / kohii.v1.core / Bucket / selectToPlay selectToPlay abstract fun selectToPlay(candidates: Collection Playback ): Collection Playback","title":"Select to play"},{"location":"api/kohii-core/kohii.v1.core/-bucket/select-to-play/#selecttoplay","text":"abstract fun selectToPlay(candidates: Collection Playback ): Collection Playback","title":"selectToPlay"},{"location":"api/kohii-core/kohii.v1.core/-common/","text":"kohii-core / kohii.v1.core / Common Common object Common Properties Name Summary REPEAT_MODE_ALL const val REPEAT_MODE_ALL: Int REPEAT_MODE_OFF const val REPEAT_MODE_OFF: Int REPEAT_MODE_ONE const val REPEAT_MODE_ONE: Int STATE_BUFFERING const val STATE_BUFFERING: Int STATE_ENDED const val STATE_ENDED: Int STATE_IDLE const val STATE_IDLE: Int STATE_READY const val STATE_READY: Int Functions Name Summary getUserAgent fun getUserAgent(context: Context , appName: String ): String","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-common/#common","text":"object Common","title":"Common"},{"location":"api/kohii-core/kohii.v1.core/-common/#properties","text":"Name Summary REPEAT_MODE_ALL const val REPEAT_MODE_ALL: Int REPEAT_MODE_OFF const val REPEAT_MODE_OFF: Int REPEAT_MODE_ONE const val REPEAT_MODE_ONE: Int STATE_BUFFERING const val STATE_BUFFERING: Int STATE_ENDED const val STATE_ENDED: Int STATE_IDLE const val STATE_IDLE: Int STATE_READY const val STATE_READY: Int","title":"Properties"},{"location":"api/kohii-core/kohii.v1.core/-common/#functions","text":"Name Summary getUserAgent fun getUserAgent(context: Context , appName: String ): String","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-common/-r-e-p-e-a-t_-m-o-d-e_-a-l-l/","text":"kohii-core / kohii.v1.core / Common / REPEAT_MODE_ALL REPEAT_MODE_ALL const val REPEAT_MODE_ALL: Int","title":" r e p e a t  m o d e  a l l"},{"location":"api/kohii-core/kohii.v1.core/-common/-r-e-p-e-a-t_-m-o-d-e_-a-l-l/#repeat_mode_all","text":"const val REPEAT_MODE_ALL: Int","title":"REPEAT_MODE_ALL"},{"location":"api/kohii-core/kohii.v1.core/-common/-r-e-p-e-a-t_-m-o-d-e_-o-f-f/","text":"kohii-core / kohii.v1.core / Common / REPEAT_MODE_OFF REPEAT_MODE_OFF const val REPEAT_MODE_OFF: Int","title":" r e p e a t  m o d e  o f f"},{"location":"api/kohii-core/kohii.v1.core/-common/-r-e-p-e-a-t_-m-o-d-e_-o-f-f/#repeat_mode_off","text":"const val REPEAT_MODE_OFF: Int","title":"REPEAT_MODE_OFF"},{"location":"api/kohii-core/kohii.v1.core/-common/-r-e-p-e-a-t_-m-o-d-e_-o-n-e/","text":"kohii-core / kohii.v1.core / Common / REPEAT_MODE_ONE REPEAT_MODE_ONE const val REPEAT_MODE_ONE: Int","title":" r e p e a t  m o d e  o n e"},{"location":"api/kohii-core/kohii.v1.core/-common/-r-e-p-e-a-t_-m-o-d-e_-o-n-e/#repeat_mode_one","text":"const val REPEAT_MODE_ONE: Int","title":"REPEAT_MODE_ONE"},{"location":"api/kohii-core/kohii.v1.core/-common/-s-t-a-t-e_-b-u-f-f-e-r-i-n-g/","text":"kohii-core / kohii.v1.core / Common / STATE_BUFFERING STATE_BUFFERING const val STATE_BUFFERING: Int","title":" s t a t e  b u f f e r i n g"},{"location":"api/kohii-core/kohii.v1.core/-common/-s-t-a-t-e_-b-u-f-f-e-r-i-n-g/#state_buffering","text":"const val STATE_BUFFERING: Int","title":"STATE_BUFFERING"},{"location":"api/kohii-core/kohii.v1.core/-common/-s-t-a-t-e_-e-n-d-e-d/","text":"kohii-core / kohii.v1.core / Common / STATE_ENDED STATE_ENDED const val STATE_ENDED: Int","title":" s t a t e  e n d e d"},{"location":"api/kohii-core/kohii.v1.core/-common/-s-t-a-t-e_-e-n-d-e-d/#state_ended","text":"const val STATE_ENDED: Int","title":"STATE_ENDED"},{"location":"api/kohii-core/kohii.v1.core/-common/-s-t-a-t-e_-i-d-l-e/","text":"kohii-core / kohii.v1.core / Common / STATE_IDLE STATE_IDLE const val STATE_IDLE: Int","title":" s t a t e  i d l e"},{"location":"api/kohii-core/kohii.v1.core/-common/-s-t-a-t-e_-i-d-l-e/#state_idle","text":"const val STATE_IDLE: Int","title":"STATE_IDLE"},{"location":"api/kohii-core/kohii.v1.core/-common/-s-t-a-t-e_-r-e-a-d-y/","text":"kohii-core / kohii.v1.core / Common / STATE_READY STATE_READY const val STATE_READY: Int","title":" s t a t e  r e a d y"},{"location":"api/kohii-core/kohii.v1.core/-common/-s-t-a-t-e_-r-e-a-d-y/#state_ready","text":"const val STATE_READY: Int","title":"STATE_READY"},{"location":"api/kohii-core/kohii.v1.core/-common/get-user-agent/","text":"kohii-core / kohii.v1.core / Common / getUserAgent getUserAgent fun getUserAgent(context: Context , appName: String ): String","title":"Get user agent"},{"location":"api/kohii-core/kohii.v1.core/-common/get-user-agent/#getuseragent","text":"fun getUserAgent(context: Context , appName: String ): String","title":"getUserAgent"},{"location":"api/kohii-core/kohii.v1.core/-engine/","text":"kohii-core / kohii.v1.core / Engine Engine abstract class Engine RENDERER : Any Constructors Name Summary init Engine(context: Context , playableCreator: PlayableCreator RENDERER ) Engine(master: Master , playableCreator: PlayableCreator RENDERER ) Properties Name Summary master val master: Master Functions Name Summary applyVolumeInfo fun applyVolumeInfo(volumeInfo: VolumeInfo , target: Any , scope: Scope ): Unit cancel fun cancel(tag: Any ): Unit fun cancel(container: ViewGroup ): Unit cleanUp open fun cleanUp(): Unit fetchRebinder fun fetchRebinder(tag: Any ?): Rebinder ? inject open fun inject(group: Group ): Unit register fun register(fragment: Fragment , memoryMode: MemoryMode = LOW): Manager fun register(activity: FragmentActivity , memoryMode: MemoryMode = LOW): Manager setUp fun setUp(media: Media , options: Options.() - Unit = {}): Binder fun setUp(uri: Uri , options: Options.() - Unit = {}): Binder fun setUp(url: String , options: Options.() - Unit = {}): Binder stick fun stick(playback: Playback ): Unit fun stick(lifecycleOwner: LifecycleOwner ): Unit unstick fun unstick(playback: Playback ): Unit fun unstick(lifecycleOwner: LifecycleOwner ): Unit","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-engine/#engine","text":"abstract class Engine RENDERER : Any","title":"Engine"},{"location":"api/kohii-core/kohii.v1.core/-engine/#constructors","text":"Name Summary init Engine(context: Context , playableCreator: PlayableCreator RENDERER ) Engine(master: Master , playableCreator: PlayableCreator RENDERER )","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-engine/#properties","text":"Name Summary master val master: Master","title":"Properties"},{"location":"api/kohii-core/kohii.v1.core/-engine/#functions","text":"Name Summary applyVolumeInfo fun applyVolumeInfo(volumeInfo: VolumeInfo , target: Any , scope: Scope ): Unit cancel fun cancel(tag: Any ): Unit fun cancel(container: ViewGroup ): Unit cleanUp open fun cleanUp(): Unit fetchRebinder fun fetchRebinder(tag: Any ?): Rebinder ? inject open fun inject(group: Group ): Unit register fun register(fragment: Fragment , memoryMode: MemoryMode = LOW): Manager fun register(activity: FragmentActivity , memoryMode: MemoryMode = LOW): Manager setUp fun setUp(media: Media , options: Options.() - Unit = {}): Binder fun setUp(uri: Uri , options: Options.() - Unit = {}): Binder fun setUp(url: String , options: Options.() - Unit = {}): Binder stick fun stick(playback: Playback ): Unit fun stick(lifecycleOwner: LifecycleOwner ): Unit unstick fun unstick(playback: Playback ): Unit fun unstick(lifecycleOwner: LifecycleOwner ): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-engine/-init-/","text":"kohii-core / kohii.v1.core / Engine / init init Engine(context: Context , playableCreator: PlayableCreator RENDERER ) Engine(master: Master , playableCreator: PlayableCreator RENDERER )","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-engine/-init-/#init","text":"Engine(context: Context , playableCreator: PlayableCreator RENDERER ) Engine(master: Master , playableCreator: PlayableCreator RENDERER )","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-engine/apply-volume-info/","text":"kohii-core / kohii.v1.core / Engine / applyVolumeInfo applyVolumeInfo fun applyVolumeInfo(volumeInfo: VolumeInfo , target: Any , scope: Scope ): Unit","title":"Apply volume info"},{"location":"api/kohii-core/kohii.v1.core/-engine/apply-volume-info/#applyvolumeinfo","text":"fun applyVolumeInfo(volumeInfo: VolumeInfo , target: Any , scope: Scope ): Unit","title":"applyVolumeInfo"},{"location":"api/kohii-core/kohii.v1.core/-engine/cancel/","text":"kohii-core / kohii.v1.core / Engine / cancel cancel fun cancel(tag: Any ): Unit fun cancel(container: ViewGroup ): Unit","title":"Cancel"},{"location":"api/kohii-core/kohii.v1.core/-engine/cancel/#cancel","text":"fun cancel(tag: Any ): Unit fun cancel(container: ViewGroup ): Unit","title":"cancel"},{"location":"api/kohii-core/kohii.v1.core/-engine/clean-up/","text":"kohii-core / kohii.v1.core / Engine / cleanUp cleanUp @CallSuper open fun cleanUp(): Unit","title":"Clean up"},{"location":"api/kohii-core/kohii.v1.core/-engine/clean-up/#cleanup","text":"@CallSuper open fun cleanUp(): Unit","title":"cleanUp"},{"location":"api/kohii-core/kohii.v1.core/-engine/fetch-rebinder/","text":"kohii-core / kohii.v1.core / Engine / fetchRebinder fetchRebinder fun fetchRebinder(tag: Any ?): Rebinder ?","title":"Fetch rebinder"},{"location":"api/kohii-core/kohii.v1.core/-engine/fetch-rebinder/#fetchrebinder","text":"fun fetchRebinder(tag: Any ?): Rebinder ?","title":"fetchRebinder"},{"location":"api/kohii-core/kohii.v1.core/-engine/inject/","text":"kohii-core / kohii.v1.core / Engine / inject inject open fun inject(group: Group ): Unit","title":"Inject"},{"location":"api/kohii-core/kohii.v1.core/-engine/inject/#inject","text":"open fun inject(group: Group ): Unit","title":"inject"},{"location":"api/kohii-core/kohii.v1.core/-engine/master/","text":"kohii-core / kohii.v1.core / Engine / master master val master: Master","title":"Master"},{"location":"api/kohii-core/kohii.v1.core/-engine/master/#master","text":"val master: Master","title":"master"},{"location":"api/kohii-core/kohii.v1.core/-engine/register/","text":"kohii-core / kohii.v1.core / Engine / register register fun register(fragment: Fragment , memoryMode: MemoryMode = LOW): Manager fun register(activity: FragmentActivity , memoryMode: MemoryMode = LOW): Manager","title":"Register"},{"location":"api/kohii-core/kohii.v1.core/-engine/register/#register","text":"fun register(fragment: Fragment , memoryMode: MemoryMode = LOW): Manager fun register(activity: FragmentActivity , memoryMode: MemoryMode = LOW): Manager","title":"register"},{"location":"api/kohii-core/kohii.v1.core/-engine/set-up/","text":"kohii-core / kohii.v1.core / Engine / setUp setUp inline fun setUp(media: Media , crossinline options: Options.() - Unit = {}): Binder inline fun setUp(uri: Uri , crossinline options: Options.() - Unit = {}): Binder inline fun setUp(url: String , crossinline options: Options.() - Unit = {}): Binder","title":"Set up"},{"location":"api/kohii-core/kohii.v1.core/-engine/set-up/#setup","text":"inline fun setUp(media: Media , crossinline options: Options.() - Unit = {}): Binder inline fun setUp(uri: Uri , crossinline options: Options.() - Unit = {}): Binder inline fun setUp(url: String , crossinline options: Options.() - Unit = {}): Binder","title":"setUp"},{"location":"api/kohii-core/kohii.v1.core/-engine/stick/","text":"kohii-core / kohii.v1.core / Engine / stick stick fun stick(playback: Playback ): Unit fun stick(lifecycleOwner: LifecycleOwner ): Unit","title":"Stick"},{"location":"api/kohii-core/kohii.v1.core/-engine/stick/#stick","text":"fun stick(playback: Playback ): Unit fun stick(lifecycleOwner: LifecycleOwner ): Unit","title":"stick"},{"location":"api/kohii-core/kohii.v1.core/-engine/unstick/","text":"kohii-core / kohii.v1.core / Engine / unstick unstick fun unstick(playback: Playback ): Unit fun unstick(lifecycleOwner: LifecycleOwner ): Unit","title":"Unstick"},{"location":"api/kohii-core/kohii.v1.core/-engine/unstick/#unstick","text":"fun unstick(playback: Playback ): Unit fun unstick(lifecycleOwner: LifecycleOwner ): Unit","title":"unstick"},{"location":"api/kohii-core/kohii.v1.core/-error-listener/","text":"kohii-core / kohii.v1.core / ErrorListener ErrorListener interface ErrorListener Functions Name Summary onError abstract fun onError(error: Exception ): Unit Inheritors Name Summary ErrorListeners class ErrorListeners : CopyOnWriteArraySet ErrorListener , ErrorListener Playback abstract class Playback : PlayerEventListener , ErrorListener","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-error-listener/#errorlistener","text":"interface ErrorListener","title":"ErrorListener"},{"location":"api/kohii-core/kohii.v1.core/-error-listener/#functions","text":"Name Summary onError abstract fun onError(error: Exception ): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-error-listener/#inheritors","text":"Name Summary ErrorListeners class ErrorListeners : CopyOnWriteArraySet ErrorListener , ErrorListener Playback abstract class Playback : PlayerEventListener , ErrorListener","title":"Inheritors"},{"location":"api/kohii-core/kohii.v1.core/-error-listener/on-error/","text":"kohii-core / kohii.v1.core / ErrorListener / onError onError abstract fun onError(error: Exception ): Unit","title":"On error"},{"location":"api/kohii-core/kohii.v1.core/-error-listener/on-error/#onerror","text":"abstract fun onError(error: Exception ): Unit","title":"onError"},{"location":"api/kohii-core/kohii.v1.core/-error-listeners/","text":"kohii-core / kohii.v1.core / ErrorListeners ErrorListeners class ErrorListeners : CopyOnWriteArraySet ErrorListener , ErrorListener Constructors Name Summary init ErrorListeners() Functions Name Summary onError fun onError(error: Exception ): Unit","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-error-listeners/#errorlisteners","text":"class ErrorListeners : CopyOnWriteArraySet ErrorListener , ErrorListener","title":"ErrorListeners"},{"location":"api/kohii-core/kohii.v1.core/-error-listeners/#constructors","text":"Name Summary init ErrorListeners()","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-error-listeners/#functions","text":"Name Summary onError fun onError(error: Exception ): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-error-listeners/-init-/","text":"kohii-core / kohii.v1.core / ErrorListeners / init init ErrorListeners()","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-error-listeners/-init-/#init","text":"ErrorListeners()","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-error-listeners/on-error/","text":"kohii-core / kohii.v1.core / ErrorListeners / onError onError fun onError(error: Exception ): Unit","title":"On error"},{"location":"api/kohii-core/kohii.v1.core/-error-listeners/on-error/#onerror","text":"fun onError(error: Exception ): Unit","title":"onError"},{"location":"api/kohii-core/kohii.v1.core/-group/","text":"kohii-core / kohii.v1.core / Group Group class Group : DefaultLifecycleObserver , Callback Constructors Name Summary init Group(master: Master , activity: ComponentActivity ) Functions Name Summary equals fun equals(other: Any ?): Boolean handleMessage fun handleMessage(msg: Message ): Boolean hashCode fun hashCode(): Int onCreate fun onCreate(owner: LifecycleOwner ): Unit onDestroy fun onDestroy(owner: LifecycleOwner ): Unit onStart fun onStart(owner: LifecycleOwner ): Unit onStop fun onStop(owner: LifecycleOwner ): Unit registerRendererProvider fun registerRendererProvider(type: Class * , provider: RendererProvider ): Unit unregisterRendererProvider fun unregisterRendererProvider(provider: RendererProvider ): Unit Companion Object Properties Name Summary DELAY const val DELAY: Long MSG_REFRESH const val MSG_REFRESH: Int","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-group/#group","text":"class Group : DefaultLifecycleObserver , Callback","title":"Group"},{"location":"api/kohii-core/kohii.v1.core/-group/#constructors","text":"Name Summary init Group(master: Master , activity: ComponentActivity )","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-group/#functions","text":"Name Summary equals fun equals(other: Any ?): Boolean handleMessage fun handleMessage(msg: Message ): Boolean hashCode fun hashCode(): Int onCreate fun onCreate(owner: LifecycleOwner ): Unit onDestroy fun onDestroy(owner: LifecycleOwner ): Unit onStart fun onStart(owner: LifecycleOwner ): Unit onStop fun onStop(owner: LifecycleOwner ): Unit registerRendererProvider fun registerRendererProvider(type: Class * , provider: RendererProvider ): Unit unregisterRendererProvider fun unregisterRendererProvider(provider: RendererProvider ): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-group/#companion-object-properties","text":"Name Summary DELAY const val DELAY: Long MSG_REFRESH const val MSG_REFRESH: Int","title":"Companion Object Properties"},{"location":"api/kohii-core/kohii.v1.core/-group/-d-e-l-a-y/","text":"kohii-core / kohii.v1.core / Group / DELAY DELAY const val DELAY: Long","title":" d e l a y"},{"location":"api/kohii-core/kohii.v1.core/-group/-d-e-l-a-y/#delay","text":"const val DELAY: Long","title":"DELAY"},{"location":"api/kohii-core/kohii.v1.core/-group/-init-/","text":"kohii-core / kohii.v1.core / Group / init init Group(master: Master , activity: ComponentActivity )","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-group/-init-/#init","text":"Group(master: Master , activity: ComponentActivity )","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-group/-m-s-g_-r-e-f-r-e-s-h/","text":"kohii-core / kohii.v1.core / Group / MSG_REFRESH MSG_REFRESH const val MSG_REFRESH: Int","title":" m s g  r e f r e s h"},{"location":"api/kohii-core/kohii.v1.core/-group/-m-s-g_-r-e-f-r-e-s-h/#msg_refresh","text":"const val MSG_REFRESH: Int","title":"MSG_REFRESH"},{"location":"api/kohii-core/kohii.v1.core/-group/equals/","text":"kohii-core / kohii.v1.core / Group / equals equals fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"api/kohii-core/kohii.v1.core/-group/equals/#equals","text":"fun equals(other: Any ?): Boolean","title":"equals"},{"location":"api/kohii-core/kohii.v1.core/-group/handle-message/","text":"kohii-core / kohii.v1.core / Group / handleMessage handleMessage fun handleMessage(msg: Message ): Boolean","title":"Handle message"},{"location":"api/kohii-core/kohii.v1.core/-group/handle-message/#handlemessage","text":"fun handleMessage(msg: Message ): Boolean","title":"handleMessage"},{"location":"api/kohii-core/kohii.v1.core/-group/hash-code/","text":"kohii-core / kohii.v1.core / Group / hashCode hashCode fun hashCode(): Int","title":"Hash code"},{"location":"api/kohii-core/kohii.v1.core/-group/hash-code/#hashcode","text":"fun hashCode(): Int","title":"hashCode"},{"location":"api/kohii-core/kohii.v1.core/-group/on-create/","text":"kohii-core / kohii.v1.core / Group / onCreate onCreate fun onCreate(owner: LifecycleOwner ): Unit","title":"On create"},{"location":"api/kohii-core/kohii.v1.core/-group/on-create/#oncreate","text":"fun onCreate(owner: LifecycleOwner ): Unit","title":"onCreate"},{"location":"api/kohii-core/kohii.v1.core/-group/on-destroy/","text":"kohii-core / kohii.v1.core / Group / onDestroy onDestroy fun onDestroy(owner: LifecycleOwner ): Unit","title":"On destroy"},{"location":"api/kohii-core/kohii.v1.core/-group/on-destroy/#ondestroy","text":"fun onDestroy(owner: LifecycleOwner ): Unit","title":"onDestroy"},{"location":"api/kohii-core/kohii.v1.core/-group/on-start/","text":"kohii-core / kohii.v1.core / Group / onStart onStart fun onStart(owner: LifecycleOwner ): Unit","title":"On start"},{"location":"api/kohii-core/kohii.v1.core/-group/on-start/#onstart","text":"fun onStart(owner: LifecycleOwner ): Unit","title":"onStart"},{"location":"api/kohii-core/kohii.v1.core/-group/on-stop/","text":"kohii-core / kohii.v1.core / Group / onStop onStop fun onStop(owner: LifecycleOwner ): Unit","title":"On stop"},{"location":"api/kohii-core/kohii.v1.core/-group/on-stop/#onstop","text":"fun onStop(owner: LifecycleOwner ): Unit","title":"onStop"},{"location":"api/kohii-core/kohii.v1.core/-group/register-renderer-provider/","text":"kohii-core / kohii.v1.core / Group / registerRendererProvider registerRendererProvider fun registerRendererProvider(type: Class * , provider: RendererProvider ): Unit","title":"Register renderer provider"},{"location":"api/kohii-core/kohii.v1.core/-group/register-renderer-provider/#registerrendererprovider","text":"fun registerRendererProvider(type: Class * , provider: RendererProvider ): Unit","title":"registerRendererProvider"},{"location":"api/kohii-core/kohii.v1.core/-group/unregister-renderer-provider/","text":"kohii-core / kohii.v1.core / Group / unregisterRendererProvider unregisterRendererProvider fun unregisterRendererProvider(provider: RendererProvider ): Unit","title":"Unregister renderer provider"},{"location":"api/kohii-core/kohii.v1.core/-group/unregister-renderer-provider/#unregisterrendererprovider","text":"fun unregisterRendererProvider(provider: RendererProvider ): Unit","title":"unregisterRendererProvider"},{"location":"api/kohii-core/kohii.v1.core/-manager/","text":"kohii-core / kohii.v1.core / Manager Manager class Manager : PlayableManager , DefaultLifecycleObserver , LifecycleEventObserver , Comparable Manager Types Name Summary OnSelectionListener interface OnSelectionListener Constructors Name Summary init Manager(master: Master , group: Group , host: Any , lifecycleOwner: LifecycleOwner , memoryMode: MemoryMode = LOW) Functions Name Summary applyVolumeInfo Apply a specific VolumeInfo to all Playbacks in a Scope . fun applyVolumeInfo(volumeInfo: VolumeInfo , target: Any , scope: Scope ): Unit attach fun attach(vararg views: View ): Manager compareTo fun compareTo(other: Manager ): Int detach fun detach(vararg views: View ): Manager findPlayableForContainer fun findPlayableForContainer(container: ViewGroup ): Playable ? onDestroy fun onDestroy(owner: LifecycleOwner ): Unit onStart fun onStart(owner: LifecycleOwner ): Unit onStateChanged fun onStateChanged(source: LifecycleOwner , event: Event ): Unit onStop fun onStop(owner: LifecycleOwner ): Unit pause fun pause(playable: Playable ): Unit play fun play(playable: Playable ): Unit","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-manager/#manager","text":"class Manager : PlayableManager , DefaultLifecycleObserver , LifecycleEventObserver , Comparable Manager","title":"Manager"},{"location":"api/kohii-core/kohii.v1.core/-manager/#types","text":"Name Summary OnSelectionListener interface OnSelectionListener","title":"Types"},{"location":"api/kohii-core/kohii.v1.core/-manager/#constructors","text":"Name Summary init Manager(master: Master , group: Group , host: Any , lifecycleOwner: LifecycleOwner , memoryMode: MemoryMode = LOW)","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-manager/#functions","text":"Name Summary applyVolumeInfo Apply a specific VolumeInfo to all Playbacks in a Scope . fun applyVolumeInfo(volumeInfo: VolumeInfo , target: Any , scope: Scope ): Unit attach fun attach(vararg views: View ): Manager compareTo fun compareTo(other: Manager ): Int detach fun detach(vararg views: View ): Manager findPlayableForContainer fun findPlayableForContainer(container: ViewGroup ): Playable ? onDestroy fun onDestroy(owner: LifecycleOwner ): Unit onStart fun onStart(owner: LifecycleOwner ): Unit onStateChanged fun onStateChanged(source: LifecycleOwner , event: Event ): Unit onStop fun onStop(owner: LifecycleOwner ): Unit pause fun pause(playable: Playable ): Unit play fun play(playable: Playable ): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-manager/-init-/","text":"kohii-core / kohii.v1.core / Manager / init init Manager(master: Master , group: Group , host: Any , lifecycleOwner: LifecycleOwner , memoryMode: MemoryMode = LOW)","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-manager/-init-/#init","text":"Manager(master: Master , group: Group , host: Any , lifecycleOwner: LifecycleOwner , memoryMode: MemoryMode = LOW)","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-manager/apply-volume-info/","text":"kohii-core / kohii.v1.core / Manager / applyVolumeInfo applyVolumeInfo fun applyVolumeInfo(volumeInfo: VolumeInfo , target: Any , scope: Scope ): Unit Apply a specific VolumeInfo to all Playbacks in a Scope . The smaller a scope's priority is, the wider applicable range it will be. Applying new VolumeInfo to smaller Scope will change VolumeInfo of Playbacks in that Scope . If the Scope is from Scope.BUCKET , any new Playback added to that Bucket will be configured with the updated VolumeInfo . Parameters target - is the container to apply new VolumeInfo to. This must be set together with the Scope . For example, if client wants to apply the VolumeInfo to Scope.PLAYBACK , the receiver must be the Playback to apply to. If client wants to apply to Scope.BUCKET , the receiver must be either the Playback inside that Bucket , or the root object of a Bucket .","title":"Apply volume info"},{"location":"api/kohii-core/kohii.v1.core/-manager/apply-volume-info/#applyvolumeinfo","text":"fun applyVolumeInfo(volumeInfo: VolumeInfo , target: Any , scope: Scope ): Unit Apply a specific VolumeInfo to all Playbacks in a Scope . The smaller a scope's priority is, the wider applicable range it will be. Applying new VolumeInfo to smaller Scope will change VolumeInfo of Playbacks in that Scope . If the Scope is from Scope.BUCKET , any new Playback added to that Bucket will be configured with the updated VolumeInfo .","title":"applyVolumeInfo"},{"location":"api/kohii-core/kohii.v1.core/-manager/apply-volume-info/#parameters","text":"target - is the container to apply new VolumeInfo to. This must be set together with the Scope . For example, if client wants to apply the VolumeInfo to Scope.PLAYBACK , the receiver must be the Playback to apply to. If client wants to apply to Scope.BUCKET , the receiver must be either the Playback inside that Bucket , or the root object of a Bucket .","title":"Parameters"},{"location":"api/kohii-core/kohii.v1.core/-manager/attach/","text":"kohii-core / kohii.v1.core / Manager / attach attach fun attach(vararg views: View ): Manager","title":"Attach"},{"location":"api/kohii-core/kohii.v1.core/-manager/attach/#attach","text":"fun attach(vararg views: View ): Manager","title":"attach"},{"location":"api/kohii-core/kohii.v1.core/-manager/compare-to/","text":"kohii-core / kohii.v1.core / Manager / compareTo compareTo fun compareTo(other: Manager ): Int","title":"Compare to"},{"location":"api/kohii-core/kohii.v1.core/-manager/compare-to/#compareto","text":"fun compareTo(other: Manager ): Int","title":"compareTo"},{"location":"api/kohii-core/kohii.v1.core/-manager/detach/","text":"kohii-core / kohii.v1.core / Manager / detach detach fun detach(vararg views: View ): Manager","title":"Detach"},{"location":"api/kohii-core/kohii.v1.core/-manager/detach/#detach","text":"fun detach(vararg views: View ): Manager","title":"detach"},{"location":"api/kohii-core/kohii.v1.core/-manager/find-playable-for-container/","text":"kohii-core / kohii.v1.core / Manager / findPlayableForContainer findPlayableForContainer fun findPlayableForContainer(container: ViewGroup ): Playable ?","title":"Find playable for container"},{"location":"api/kohii-core/kohii.v1.core/-manager/find-playable-for-container/#findplayableforcontainer","text":"fun findPlayableForContainer(container: ViewGroup ): Playable ?","title":"findPlayableForContainer"},{"location":"api/kohii-core/kohii.v1.core/-manager/on-destroy/","text":"kohii-core / kohii.v1.core / Manager / onDestroy onDestroy fun onDestroy(owner: LifecycleOwner ): Unit","title":"On destroy"},{"location":"api/kohii-core/kohii.v1.core/-manager/on-destroy/#ondestroy","text":"fun onDestroy(owner: LifecycleOwner ): Unit","title":"onDestroy"},{"location":"api/kohii-core/kohii.v1.core/-manager/on-start/","text":"kohii-core / kohii.v1.core / Manager / onStart onStart fun onStart(owner: LifecycleOwner ): Unit","title":"On start"},{"location":"api/kohii-core/kohii.v1.core/-manager/on-start/#onstart","text":"fun onStart(owner: LifecycleOwner ): Unit","title":"onStart"},{"location":"api/kohii-core/kohii.v1.core/-manager/on-state-changed/","text":"kohii-core / kohii.v1.core / Manager / onStateChanged onStateChanged fun onStateChanged(source: LifecycleOwner , event: Event ): Unit","title":"On state changed"},{"location":"api/kohii-core/kohii.v1.core/-manager/on-state-changed/#onstatechanged","text":"fun onStateChanged(source: LifecycleOwner , event: Event ): Unit","title":"onStateChanged"},{"location":"api/kohii-core/kohii.v1.core/-manager/on-stop/","text":"kohii-core / kohii.v1.core / Manager / onStop onStop fun onStop(owner: LifecycleOwner ): Unit","title":"On stop"},{"location":"api/kohii-core/kohii.v1.core/-manager/on-stop/#onstop","text":"fun onStop(owner: LifecycleOwner ): Unit","title":"onStop"},{"location":"api/kohii-core/kohii.v1.core/-manager/pause/","text":"kohii-core / kohii.v1.core / Manager / pause pause fun pause(playable: Playable ): Unit","title":"Pause"},{"location":"api/kohii-core/kohii.v1.core/-manager/pause/#pause","text":"fun pause(playable: Playable ): Unit","title":"pause"},{"location":"api/kohii-core/kohii.v1.core/-manager/play/","text":"kohii-core / kohii.v1.core / Manager / play play fun play(playable: Playable ): Unit","title":"Play"},{"location":"api/kohii-core/kohii.v1.core/-manager/play/#play","text":"fun play(playable: Playable ): Unit","title":"play"},{"location":"api/kohii-core/kohii.v1.core/-manager/-on-selection-listener/","text":"kohii-core / kohii.v1.core / Manager / OnSelectionListener OnSelectionListener interface OnSelectionListener Functions Name Summary onSelection abstract fun onSelection(selection: Collection Playback ): Unit","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-manager/-on-selection-listener/#onselectionlistener","text":"interface OnSelectionListener","title":"OnSelectionListener"},{"location":"api/kohii-core/kohii.v1.core/-manager/-on-selection-listener/#functions","text":"Name Summary onSelection abstract fun onSelection(selection: Collection Playback ): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-manager/-on-selection-listener/on-selection/","text":"kohii-core / kohii.v1.core / Manager / OnSelectionListener / onSelection onSelection abstract fun onSelection(selection: Collection Playback ): Unit","title":"On selection"},{"location":"api/kohii-core/kohii.v1.core/-manager/-on-selection-listener/on-selection/#onselection","text":"abstract fun onSelection(selection: Collection Playback ): Unit","title":"onSelection"},{"location":"api/kohii-core/kohii.v1.core/-master/","text":"kohii-core / kohii.v1.core / Master Master class Master : PlayableManager Properties Name Summary app val app: Application Functions Name Summary lock fun lock(): Unit unlock fun unlock(): Unit Companion Object Functions Name Summary get operator fun get(context: Context ): Master","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-master/#master","text":"class Master : PlayableManager","title":"Master"},{"location":"api/kohii-core/kohii.v1.core/-master/#properties","text":"Name Summary app val app: Application","title":"Properties"},{"location":"api/kohii-core/kohii.v1.core/-master/#functions","text":"Name Summary lock fun lock(): Unit unlock fun unlock(): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-master/#companion-object-functions","text":"Name Summary get operator fun get(context: Context ): Master","title":"Companion Object Functions"},{"location":"api/kohii-core/kohii.v1.core/-master/app/","text":"kohii-core / kohii.v1.core / Master / app app val app: Application","title":"App"},{"location":"api/kohii-core/kohii.v1.core/-master/app/#app","text":"val app: Application","title":"app"},{"location":"api/kohii-core/kohii.v1.core/-master/get/","text":"kohii-core / kohii.v1.core / Master / get get @JvmStatic operator fun get(context: Context ): Master","title":"Get"},{"location":"api/kohii-core/kohii.v1.core/-master/get/#get","text":"@JvmStatic operator fun get(context: Context ): Master","title":"get"},{"location":"api/kohii-core/kohii.v1.core/-master/lock/","text":"kohii-core / kohii.v1.core / Master / lock lock fun lock(): Unit","title":"Lock"},{"location":"api/kohii-core/kohii.v1.core/-master/lock/#lock","text":"fun lock(): Unit","title":"lock"},{"location":"api/kohii-core/kohii.v1.core/-master/unlock/","text":"kohii-core / kohii.v1.core / Master / unlock unlock fun unlock(): Unit","title":"Unlock"},{"location":"api/kohii-core/kohii.v1.core/-master/unlock/#unlock","text":"fun unlock(): Unit","title":"unlock"},{"location":"api/kohii-core/kohii.v1.core/-memory-mode/","text":"kohii-core / kohii.v1.core / MemoryMode MemoryMode enum class MemoryMode Enum Values Name Summary AUTO In AUTO mode, Kohii will judge the preferred memory situation using Master.preferredMemoryMode method. LOW In LOW mode, Kohii will always release resource of unselected Playables/Playbacks (whose distance to selected ones are from 1). NORMAL In NORMAL mode, Kohii will only reset the Playables/Playbacks whose distance to selected ones are 1 (so 'next to' selected ones). Others will be released. BALANCED In BALANCED mode, the release behavior is the same with 'NORMAL' mode, but unselected Playables/Playbacks will not be reset. HIGH HIGH mode must be specified by client. INFINITE \"For the bravest only\"","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-memory-mode/#memorymode","text":"enum class MemoryMode","title":"MemoryMode"},{"location":"api/kohii-core/kohii.v1.core/-memory-mode/#enum-values","text":"Name Summary AUTO In AUTO mode, Kohii will judge the preferred memory situation using Master.preferredMemoryMode method. LOW In LOW mode, Kohii will always release resource of unselected Playables/Playbacks (whose distance to selected ones are from 1). NORMAL In NORMAL mode, Kohii will only reset the Playables/Playbacks whose distance to selected ones are 1 (so 'next to' selected ones). Others will be released. BALANCED In BALANCED mode, the release behavior is the same with 'NORMAL' mode, but unselected Playables/Playbacks will not be reset. HIGH HIGH mode must be specified by client. INFINITE \"For the bravest only\"","title":"Enum Values"},{"location":"api/kohii-core/kohii.v1.core/-memory-mode/-a-u-t-o/","text":"kohii-core / kohii.v1.core / MemoryMode / AUTO AUTO AUTO In AUTO mode, Kohii will judge the preferred memory situation using Master.preferredMemoryMode method.","title":" a u t o"},{"location":"api/kohii-core/kohii.v1.core/-memory-mode/-a-u-t-o/#auto","text":"AUTO In AUTO mode, Kohii will judge the preferred memory situation using Master.preferredMemoryMode method.","title":"AUTO"},{"location":"api/kohii-core/kohii.v1.core/-memory-mode/-b-a-l-a-n-c-e-d/","text":"kohii-core / kohii.v1.core / MemoryMode / BALANCED BALANCED BALANCED In BALANCED mode, the release behavior is the same with 'NORMAL' mode, but unselected Playables/Playbacks will not be reset.","title":" b a l a n c e d"},{"location":"api/kohii-core/kohii.v1.core/-memory-mode/-b-a-l-a-n-c-e-d/#balanced","text":"BALANCED In BALANCED mode, the release behavior is the same with 'NORMAL' mode, but unselected Playables/Playbacks will not be reset.","title":"BALANCED"},{"location":"api/kohii-core/kohii.v1.core/-memory-mode/-h-i-g-h/","text":"kohii-core / kohii.v1.core / MemoryMode / HIGH HIGH HIGH HIGH mode must be specified by client. In HIGH mode, any unselected Playables/Playbacks whose distance to selected ones is less than 8 will be reset. Others will be released. This mode is memory-intensive and can be used in many-videos-yet-low-memory-usage scenario like simple/short Videos.","title":" h i g h"},{"location":"api/kohii-core/kohii.v1.core/-memory-mode/-h-i-g-h/#high","text":"HIGH HIGH mode must be specified by client. In HIGH mode, any unselected Playables/Playbacks whose distance to selected ones is less than 8 will be reset. Others will be released. This mode is memory-intensive and can be used in many-videos-yet-low-memory-usage scenario like simple/short Videos.","title":"HIGH"},{"location":"api/kohii-core/kohii.v1.core/-memory-mode/-i-n-f-i-n-i-t-e/","text":"kohii-core / kohii.v1.core / MemoryMode / INFINITE INFINITE INFINITE \"For the bravest only\" INFINITE mode must be specified by client. In INFINITE mode, no unselected Playables/Playbacks will ever be released due to distance change (though Kohii will release the resource once they are inactive).","title":" i n f i n i t e"},{"location":"api/kohii-core/kohii.v1.core/-memory-mode/-i-n-f-i-n-i-t-e/#infinite","text":"INFINITE \"For the bravest only\" INFINITE mode must be specified by client. In INFINITE mode, no unselected Playables/Playbacks will ever be released due to distance change (though Kohii will release the resource once they are inactive).","title":"INFINITE"},{"location":"api/kohii-core/kohii.v1.core/-memory-mode/-l-o-w/","text":"kohii-core / kohii.v1.core / MemoryMode / LOW LOW LOW In LOW mode, Kohii will always release resource of unselected Playables/Playbacks (whose distance to selected ones are from 1).","title":" l o w"},{"location":"api/kohii-core/kohii.v1.core/-memory-mode/-l-o-w/#low","text":"LOW In LOW mode, Kohii will always release resource of unselected Playables/Playbacks (whose distance to selected ones are from 1).","title":"LOW"},{"location":"api/kohii-core/kohii.v1.core/-memory-mode/-n-o-r-m-a-l/","text":"kohii-core / kohii.v1.core / MemoryMode / NORMAL NORMAL NORMAL In NORMAL mode, Kohii will only reset the Playables/Playbacks whose distance to selected ones are 1 (so 'next to' selected ones). Others will be released.","title":" n o r m a l"},{"location":"api/kohii-core/kohii.v1.core/-memory-mode/-n-o-r-m-a-l/#normal","text":"NORMAL In NORMAL mode, Kohii will only reset the Playables/Playbacks whose distance to selected ones are 1 (so 'next to' selected ones). Others will be released.","title":"NORMAL"},{"location":"api/kohii-core/kohii.v1.core/-playable/","text":"kohii-core / kohii.v1.core / Playable Playable abstract class Playable A Playable contains necessary information about a Media item, and the config provided by client for it to start the media with expected result. Instance of Playable is provided using PlayableCreator . An implementation of Playable must take into account about the following points: A Playable is managed at application scope. So it must not retain any reference to narrower scope like androidx.fragment.app.Fragment or android.app.Activity . A Playable must acknowledge about configuration changes. It must return a correct value from onConfigChange so that the system can provide proper resource management. For example if any of its resource needs to be reset at configuration change, its onConfigChange method must return false . AbstractPlayable is a base implementation that leverage actual playback logic to a Bridge . See Also AbstractPlayable AbstractBridge PlayableCreator Engine Types Name Summary Config data class Config Constructors Name Summary init A Playable contains necessary information about a Media item, and the config provided by client for it to start the media with expected result. Instance of Playable is provided using PlayableCreator . Playable(media: Media , config: Config) Properties Name Summary media val media: Media renderer abstract var renderer: Any ? tag abstract val tag: Any Functions Name Summary considerReleaseRenderer Once the Playback finds it is good time for the Playable to request/release the Renderer, it will trigger these calls to send that signal. The 'good time' can varies due to the actual use case. In Kohii, there are 2 following cases: abstract fun considerReleaseRenderer(playback: Playback ): Unit considerRequestRenderer Once the Playback finds it is good time for the Playable to request/release the Renderer, it will trigger these calls to send that signal. The 'good time' can varies due to the actual use case. In Kohii, there are 2 following cases: abstract fun considerRequestRenderer(playback: Playback ): Unit onConfigChange Return true to indicate that this Playable would survive configuration changes and no playback reloading would be required. In special cases like YouTube playback, it is recommended to return false so Kohii will handle the resource recycling correctly. abstract fun onConfigChange(): Boolean onPause abstract fun onPause(): Unit onPlay abstract fun onPlay(): Unit onPrepare abstract fun onPrepare(loadSource: Boolean ): Unit onReady abstract fun onReady(): Unit onRelease abstract fun onRelease(): Unit onReset abstract fun onReset(): Unit onUnbind abstract fun onUnbind(playback: Playback ): Unit Inheritors Name Summary AbstractPlayable abstract class AbstractPlayable RENDERER : Any : Playable , Callback","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-playable/#playable","text":"abstract class Playable A Playable contains necessary information about a Media item, and the config provided by client for it to start the media with expected result. Instance of Playable is provided using PlayableCreator . An implementation of Playable must take into account about the following points: A Playable is managed at application scope. So it must not retain any reference to narrower scope like androidx.fragment.app.Fragment or android.app.Activity . A Playable must acknowledge about configuration changes. It must return a correct value from onConfigChange so that the system can provide proper resource management. For example if any of its resource needs to be reset at configuration change, its onConfigChange method must return false . AbstractPlayable is a base implementation that leverage actual playback logic to a Bridge . See Also AbstractPlayable AbstractBridge PlayableCreator Engine","title":"Playable"},{"location":"api/kohii-core/kohii.v1.core/-playable/#types","text":"Name Summary Config data class Config","title":"Types"},{"location":"api/kohii-core/kohii.v1.core/-playable/#constructors","text":"Name Summary init A Playable contains necessary information about a Media item, and the config provided by client for it to start the media with expected result. Instance of Playable is provided using PlayableCreator . Playable(media: Media , config: Config)","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-playable/#properties","text":"Name Summary media val media: Media renderer abstract var renderer: Any ? tag abstract val tag: Any","title":"Properties"},{"location":"api/kohii-core/kohii.v1.core/-playable/#functions","text":"Name Summary considerReleaseRenderer Once the Playback finds it is good time for the Playable to request/release the Renderer, it will trigger these calls to send that signal. The 'good time' can varies due to the actual use case. In Kohii, there are 2 following cases: abstract fun considerReleaseRenderer(playback: Playback ): Unit considerRequestRenderer Once the Playback finds it is good time for the Playable to request/release the Renderer, it will trigger these calls to send that signal. The 'good time' can varies due to the actual use case. In Kohii, there are 2 following cases: abstract fun considerRequestRenderer(playback: Playback ): Unit onConfigChange Return true to indicate that this Playable would survive configuration changes and no playback reloading would be required. In special cases like YouTube playback, it is recommended to return false so Kohii will handle the resource recycling correctly. abstract fun onConfigChange(): Boolean onPause abstract fun onPause(): Unit onPlay abstract fun onPlay(): Unit onPrepare abstract fun onPrepare(loadSource: Boolean ): Unit onReady abstract fun onReady(): Unit onRelease abstract fun onRelease(): Unit onReset abstract fun onReset(): Unit onUnbind abstract fun onUnbind(playback: Playback ): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-playable/#inheritors","text":"Name Summary AbstractPlayable abstract class AbstractPlayable RENDERER : Any : Playable , Callback","title":"Inheritors"},{"location":"api/kohii-core/kohii.v1.core/-playable/-init-/","text":"kohii-core / kohii.v1.core / Playable / init init Playable(media: Media , config: Config) A Playable contains necessary information about a Media item, and the config provided by client for it to start the media with expected result. Instance of Playable is provided using PlayableCreator . An implementation of Playable must take into account about the following points: A Playable is managed at application scope. So it must not retain any reference to narrower scope like androidx.fragment.app.Fragment or android.app.Activity . A Playable must acknowledge about configuration changes. It must return a correct value from onConfigChange so that the system can provide proper resource management. For example if any of its resource needs to be reset at configuration change, its onConfigChange method must return false . AbstractPlayable is a base implementation that leverage actual playback logic to a Bridge . See Also AbstractPlayable AbstractBridge PlayableCreator Engine","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-playable/-init-/#init","text":"Playable(media: Media , config: Config) A Playable contains necessary information about a Media item, and the config provided by client for it to start the media with expected result. Instance of Playable is provided using PlayableCreator . An implementation of Playable must take into account about the following points: A Playable is managed at application scope. So it must not retain any reference to narrower scope like androidx.fragment.app.Fragment or android.app.Activity . A Playable must acknowledge about configuration changes. It must return a correct value from onConfigChange so that the system can provide proper resource management. For example if any of its resource needs to be reset at configuration change, its onConfigChange method must return false . AbstractPlayable is a base implementation that leverage actual playback logic to a Bridge . See Also AbstractPlayable AbstractBridge PlayableCreator Engine","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-playable/consider-release-renderer/","text":"kohii-core / kohii.v1.core / Playable / considerReleaseRenderer considerReleaseRenderer abstract fun considerReleaseRenderer(playback: Playback ): Unit Once the Playback finds it is good time for the Playable to request/release the Renderer, it will trigger these calls to send that signal. The 'good time' can varies due to the actual use case. In Kohii, there are 2 following cases: The Playback's Container is also the renderer. In this case, the Container/Renderer will always be there. We suggest that the Playable should request for the Renderer as soon as possible, and release it as late as possible. The proper place to do that are when the Playback becomes active (onActive()) and inactive (onInActive()). See Also StaticViewRendererPlayback DynamicViewRendererPlayback DynamicFragmentRendererPlayback","title":"Consider release renderer"},{"location":"api/kohii-core/kohii.v1.core/-playable/consider-release-renderer/#considerreleaserenderer","text":"abstract fun considerReleaseRenderer(playback: Playback ): Unit Once the Playback finds it is good time for the Playable to request/release the Renderer, it will trigger these calls to send that signal. The 'good time' can varies due to the actual use case. In Kohii, there are 2 following cases: The Playback's Container is also the renderer. In this case, the Container/Renderer will always be there. We suggest that the Playable should request for the Renderer as soon as possible, and release it as late as possible. The proper place to do that are when the Playback becomes active (onActive()) and inactive (onInActive()). See Also StaticViewRendererPlayback DynamicViewRendererPlayback DynamicFragmentRendererPlayback","title":"considerReleaseRenderer"},{"location":"api/kohii-core/kohii.v1.core/-playable/consider-request-renderer/","text":"kohii-core / kohii.v1.core / Playable / considerRequestRenderer considerRequestRenderer abstract fun considerRequestRenderer(playback: Playback ): Unit Once the Playback finds it is good time for the Playable to request/release the Renderer, it will trigger these calls to send that signal. The 'good time' can varies due to the actual use case. In Kohii, there are 2 following cases: The Playback's Container is also the renderer. In this case, the Container/Renderer will always be there. We suggest that the Playable should request for the Renderer as soon as possible, and release it as late as possible. The proper place to do that are when the Playback becomes active (onActive()) and inactive (onInActive()). See Also StaticViewRendererPlayback DynamicViewRendererPlayback DynamicFragmentRendererPlayback","title":"Consider request renderer"},{"location":"api/kohii-core/kohii.v1.core/-playable/consider-request-renderer/#considerrequestrenderer","text":"abstract fun considerRequestRenderer(playback: Playback ): Unit Once the Playback finds it is good time for the Playable to request/release the Renderer, it will trigger these calls to send that signal. The 'good time' can varies due to the actual use case. In Kohii, there are 2 following cases: The Playback's Container is also the renderer. In this case, the Container/Renderer will always be there. We suggest that the Playable should request for the Renderer as soon as possible, and release it as late as possible. The proper place to do that are when the Playback becomes active (onActive()) and inactive (onInActive()). See Also StaticViewRendererPlayback DynamicViewRendererPlayback DynamicFragmentRendererPlayback","title":"considerRequestRenderer"},{"location":"api/kohii-core/kohii.v1.core/-playable/media/","text":"kohii-core / kohii.v1.core / Playable / media media val media: Media","title":"Media"},{"location":"api/kohii-core/kohii.v1.core/-playable/media/#media","text":"val media: Media","title":"media"},{"location":"api/kohii-core/kohii.v1.core/-playable/on-config-change/","text":"kohii-core / kohii.v1.core / Playable / onConfigChange onConfigChange abstract fun onConfigChange(): Boolean Return true to indicate that this Playable would survive configuration changes and no playback reloading would be required. In special cases like YouTube playback, it is recommended to return false so Kohii will handle the resource recycling correctly.","title":"On config change"},{"location":"api/kohii-core/kohii.v1.core/-playable/on-config-change/#onconfigchange","text":"abstract fun onConfigChange(): Boolean Return true to indicate that this Playable would survive configuration changes and no playback reloading would be required. In special cases like YouTube playback, it is recommended to return false so Kohii will handle the resource recycling correctly.","title":"onConfigChange"},{"location":"api/kohii-core/kohii.v1.core/-playable/on-pause/","text":"kohii-core / kohii.v1.core / Playable / onPause onPause abstract fun onPause(): Unit","title":"On pause"},{"location":"api/kohii-core/kohii.v1.core/-playable/on-pause/#onpause","text":"abstract fun onPause(): Unit","title":"onPause"},{"location":"api/kohii-core/kohii.v1.core/-playable/on-play/","text":"kohii-core / kohii.v1.core / Playable / onPlay onPlay abstract fun onPlay(): Unit","title":"On play"},{"location":"api/kohii-core/kohii.v1.core/-playable/on-play/#onplay","text":"abstract fun onPlay(): Unit","title":"onPlay"},{"location":"api/kohii-core/kohii.v1.core/-playable/on-prepare/","text":"kohii-core / kohii.v1.core / Playable / onPrepare onPrepare abstract fun onPrepare(loadSource: Boolean ): Unit","title":"On prepare"},{"location":"api/kohii-core/kohii.v1.core/-playable/on-prepare/#onprepare","text":"abstract fun onPrepare(loadSource: Boolean ): Unit","title":"onPrepare"},{"location":"api/kohii-core/kohii.v1.core/-playable/on-ready/","text":"kohii-core / kohii.v1.core / Playable / onReady onReady abstract fun onReady(): Unit","title":"On ready"},{"location":"api/kohii-core/kohii.v1.core/-playable/on-ready/#onready","text":"abstract fun onReady(): Unit","title":"onReady"},{"location":"api/kohii-core/kohii.v1.core/-playable/on-release/","text":"kohii-core / kohii.v1.core / Playable / onRelease onRelease abstract fun onRelease(): Unit","title":"On release"},{"location":"api/kohii-core/kohii.v1.core/-playable/on-release/#onrelease","text":"abstract fun onRelease(): Unit","title":"onRelease"},{"location":"api/kohii-core/kohii.v1.core/-playable/on-reset/","text":"kohii-core / kohii.v1.core / Playable / onReset onReset abstract fun onReset(): Unit","title":"On reset"},{"location":"api/kohii-core/kohii.v1.core/-playable/on-reset/#onreset","text":"abstract fun onReset(): Unit","title":"onReset"},{"location":"api/kohii-core/kohii.v1.core/-playable/on-unbind/","text":"kohii-core / kohii.v1.core / Playable / onUnbind onUnbind abstract fun onUnbind(playback: Playback ): Unit","title":"On unbind"},{"location":"api/kohii-core/kohii.v1.core/-playable/on-unbind/#onunbind","text":"abstract fun onUnbind(playback: Playback ): Unit","title":"onUnbind"},{"location":"api/kohii-core/kohii.v1.core/-playable/renderer/","text":"kohii-core / kohii.v1.core / Playable / renderer renderer abstract var renderer: Any ?","title":"Renderer"},{"location":"api/kohii-core/kohii.v1.core/-playable/renderer/#renderer","text":"abstract var renderer: Any ?","title":"renderer"},{"location":"api/kohii-core/kohii.v1.core/-playable/tag/","text":"kohii-core / kohii.v1.core / Playable / tag tag abstract val tag: Any","title":"Tag"},{"location":"api/kohii-core/kohii.v1.core/-playable/tag/#tag","text":"abstract val tag: Any","title":"tag"},{"location":"api/kohii-core/kohii.v1.core/-playable/-config/","text":"kohii-core / kohii.v1.core / Playable / Config Config data class Config Constructors Name Summary init Config(tag: Any = Master.NO_TAG, rendererType: Class * , videoSize: ( Int ) - VideoSize = { VideoSize.ORIGINAL })","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-playable/-config/#config","text":"data class Config","title":"Config"},{"location":"api/kohii-core/kohii.v1.core/-playable/-config/#constructors","text":"Name Summary init Config(tag: Any = Master.NO_TAG, rendererType: Class * , videoSize: ( Int ) - VideoSize = { VideoSize.ORIGINAL })","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-playable/-config/-init-/","text":"kohii-core / kohii.v1.core / Playable / Config / init init Config(tag: Any = Master.NO_TAG, rendererType: Class * , videoSize: ( Int ) - VideoSize = { VideoSize.ORIGINAL })","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-playable/-config/-init-/#init","text":"Config(tag: Any = Master.NO_TAG, rendererType: Class * , videoSize: ( Int ) - VideoSize = { VideoSize.ORIGINAL })","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-playable-creator/","text":"kohii-core / kohii.v1.core / PlayableCreator PlayableCreator abstract class PlayableCreator RENDERER : Any Constructors Name Summary init PlayableCreator(rendererType: Class RENDERER ) Functions Name Summary cleanUp abstract fun cleanUp(): Unit createPlayable abstract fun createPlayable(config: Config, media: Media ): Playable","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-playable-creator/#playablecreator","text":"abstract class PlayableCreator RENDERER : Any","title":"PlayableCreator"},{"location":"api/kohii-core/kohii.v1.core/-playable-creator/#constructors","text":"Name Summary init PlayableCreator(rendererType: Class RENDERER )","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-playable-creator/#functions","text":"Name Summary cleanUp abstract fun cleanUp(): Unit createPlayable abstract fun createPlayable(config: Config, media: Media ): Playable","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-playable-creator/-init-/","text":"kohii-core / kohii.v1.core / PlayableCreator / init init PlayableCreator(rendererType: Class RENDERER )","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-playable-creator/-init-/#init","text":"PlayableCreator(rendererType: Class RENDERER )","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-playable-creator/clean-up/","text":"kohii-core / kohii.v1.core / PlayableCreator / cleanUp cleanUp abstract fun cleanUp(): Unit","title":"Clean up"},{"location":"api/kohii-core/kohii.v1.core/-playable-creator/clean-up/#cleanup","text":"abstract fun cleanUp(): Unit","title":"cleanUp"},{"location":"api/kohii-core/kohii.v1.core/-playable-creator/create-playable/","text":"kohii-core / kohii.v1.core / PlayableCreator / createPlayable createPlayable abstract fun createPlayable(config: Config, media: Media ): Playable","title":"Create playable"},{"location":"api/kohii-core/kohii.v1.core/-playable-creator/create-playable/#createplayable","text":"abstract fun createPlayable(config: Config, media: Media ): Playable","title":"createPlayable"},{"location":"api/kohii-core/kohii.v1.core/-playback/","text":"kohii-core / kohii.v1.core / Playback Playback abstract class Playback : PlayerEventListener , ErrorListener Types Name Summary Callback interface Callback Config data class Config Controller interface Controller StateListener interface StateListener Token class Token Constructors Name Summary init Playback(manager: Manager , bucket: Bucket , container: ViewGroup , config: Config = Config()) Properties Name Summary config val config: Config container val container: ViewGroup containerRect val containerRect: Rect playbackInfo val playbackInfo: PlaybackInfo playerState val playerState: Int tag val tag: Any volumeInfo val volumeInfo: VolumeInfo Functions Name Summary addCallback fun addCallback(callback: Callback): Unit addStateListener fun addStateListener(listener: StateListener): Unit onAttachRenderer abstract fun onAttachRenderer(renderer: Any ?): Boolean onDetachRenderer abstract fun onDetachRenderer(renderer: Any ?): Boolean onError open fun onError(error: Exception ): Unit onPlayerStateChanged open fun onPlayerStateChanged(playWhenReady: Boolean , playbackState: Int ): Unit onRenderedFirstFrame open fun onRenderedFirstFrame(): Unit onVideoSizeChanged open fun onVideoSizeChanged(width: Int , height: Int , unappliedRotationDegrees: Int , pixelWidthHeightRatio: Float ): Unit removeCallback fun removeCallback(callback: Callback?): Unit removeStateListener fun removeStateListener(listener: StateListener?): Unit rewind fun rewind(refresh: Boolean = true): Unit toString open fun toString(): String unbind fun unbind(): Unit updateToken open fun updateToken(): Token Companion Object Properties Name Summary DELAY_INFINITE const val DELAY_INFINITE: Long","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-playback/#playback","text":"abstract class Playback : PlayerEventListener , ErrorListener","title":"Playback"},{"location":"api/kohii-core/kohii.v1.core/-playback/#types","text":"Name Summary Callback interface Callback Config data class Config Controller interface Controller StateListener interface StateListener Token class Token","title":"Types"},{"location":"api/kohii-core/kohii.v1.core/-playback/#constructors","text":"Name Summary init Playback(manager: Manager , bucket: Bucket , container: ViewGroup , config: Config = Config())","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-playback/#properties","text":"Name Summary config val config: Config container val container: ViewGroup containerRect val containerRect: Rect playbackInfo val playbackInfo: PlaybackInfo playerState val playerState: Int tag val tag: Any volumeInfo val volumeInfo: VolumeInfo","title":"Properties"},{"location":"api/kohii-core/kohii.v1.core/-playback/#functions","text":"Name Summary addCallback fun addCallback(callback: Callback): Unit addStateListener fun addStateListener(listener: StateListener): Unit onAttachRenderer abstract fun onAttachRenderer(renderer: Any ?): Boolean onDetachRenderer abstract fun onDetachRenderer(renderer: Any ?): Boolean onError open fun onError(error: Exception ): Unit onPlayerStateChanged open fun onPlayerStateChanged(playWhenReady: Boolean , playbackState: Int ): Unit onRenderedFirstFrame open fun onRenderedFirstFrame(): Unit onVideoSizeChanged open fun onVideoSizeChanged(width: Int , height: Int , unappliedRotationDegrees: Int , pixelWidthHeightRatio: Float ): Unit removeCallback fun removeCallback(callback: Callback?): Unit removeStateListener fun removeStateListener(listener: StateListener?): Unit rewind fun rewind(refresh: Boolean = true): Unit toString open fun toString(): String unbind fun unbind(): Unit updateToken open fun updateToken(): Token","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-playback/#companion-object-properties","text":"Name Summary DELAY_INFINITE const val DELAY_INFINITE: Long","title":"Companion Object Properties"},{"location":"api/kohii-core/kohii.v1.core/-playback/-d-e-l-a-y_-i-n-f-i-n-i-t-e/","text":"kohii-core / kohii.v1.core / Playback / DELAY_INFINITE DELAY_INFINITE const val DELAY_INFINITE: Long","title":" d e l a y  i n f i n i t e"},{"location":"api/kohii-core/kohii.v1.core/-playback/-d-e-l-a-y_-i-n-f-i-n-i-t-e/#delay_infinite","text":"const val DELAY_INFINITE: Long","title":"DELAY_INFINITE"},{"location":"api/kohii-core/kohii.v1.core/-playback/-init-/","text":"kohii-core / kohii.v1.core / Playback / init init Playback(manager: Manager , bucket: Bucket , container: ViewGroup , config: Config = Config())","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-playback/-init-/#init","text":"Playback(manager: Manager , bucket: Bucket , container: ViewGroup , config: Config = Config())","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-playback/add-callback/","text":"kohii-core / kohii.v1.core / Playback / addCallback addCallback fun addCallback(callback: Callback): Unit","title":"Add callback"},{"location":"api/kohii-core/kohii.v1.core/-playback/add-callback/#addcallback","text":"fun addCallback(callback: Callback): Unit","title":"addCallback"},{"location":"api/kohii-core/kohii.v1.core/-playback/add-state-listener/","text":"kohii-core / kohii.v1.core / Playback / addStateListener addStateListener fun addStateListener(listener: StateListener): Unit","title":"Add state listener"},{"location":"api/kohii-core/kohii.v1.core/-playback/add-state-listener/#addstatelistener","text":"fun addStateListener(listener: StateListener): Unit","title":"addStateListener"},{"location":"api/kohii-core/kohii.v1.core/-playback/config/","text":"kohii-core / kohii.v1.core / Playback / config config val config: Config","title":"Config"},{"location":"api/kohii-core/kohii.v1.core/-playback/config/#config","text":"val config: Config","title":"config"},{"location":"api/kohii-core/kohii.v1.core/-playback/container-rect/","text":"kohii-core / kohii.v1.core / Playback / containerRect containerRect val containerRect: Rect","title":"Container rect"},{"location":"api/kohii-core/kohii.v1.core/-playback/container-rect/#containerrect","text":"val containerRect: Rect","title":"containerRect"},{"location":"api/kohii-core/kohii.v1.core/-playback/container/","text":"kohii-core / kohii.v1.core / Playback / container container val container: ViewGroup","title":"Container"},{"location":"api/kohii-core/kohii.v1.core/-playback/container/#container","text":"val container: ViewGroup","title":"container"},{"location":"api/kohii-core/kohii.v1.core/-playback/on-attach-renderer/","text":"kohii-core / kohii.v1.core / Playback / onAttachRenderer onAttachRenderer protected abstract fun onAttachRenderer(renderer: Any ?): Boolean","title":"On attach renderer"},{"location":"api/kohii-core/kohii.v1.core/-playback/on-attach-renderer/#onattachrenderer","text":"protected abstract fun onAttachRenderer(renderer: Any ?): Boolean","title":"onAttachRenderer"},{"location":"api/kohii-core/kohii.v1.core/-playback/on-detach-renderer/","text":"kohii-core / kohii.v1.core / Playback / onDetachRenderer onDetachRenderer protected abstract fun onDetachRenderer(renderer: Any ?): Boolean","title":"On detach renderer"},{"location":"api/kohii-core/kohii.v1.core/-playback/on-detach-renderer/#ondetachrenderer","text":"protected abstract fun onDetachRenderer(renderer: Any ?): Boolean","title":"onDetachRenderer"},{"location":"api/kohii-core/kohii.v1.core/-playback/on-error/","text":"kohii-core / kohii.v1.core / Playback / onError onError open fun onError(error: Exception ): Unit","title":"On error"},{"location":"api/kohii-core/kohii.v1.core/-playback/on-error/#onerror","text":"open fun onError(error: Exception ): Unit","title":"onError"},{"location":"api/kohii-core/kohii.v1.core/-playback/on-player-state-changed/","text":"kohii-core / kohii.v1.core / Playback / onPlayerStateChanged onPlayerStateChanged open fun onPlayerStateChanged(playWhenReady: Boolean , playbackState: Int ): Unit","title":"On player state changed"},{"location":"api/kohii-core/kohii.v1.core/-playback/on-player-state-changed/#onplayerstatechanged","text":"open fun onPlayerStateChanged(playWhenReady: Boolean , playbackState: Int ): Unit","title":"onPlayerStateChanged"},{"location":"api/kohii-core/kohii.v1.core/-playback/on-rendered-first-frame/","text":"kohii-core / kohii.v1.core / Playback / onRenderedFirstFrame onRenderedFirstFrame open fun onRenderedFirstFrame(): Unit","title":"On rendered first frame"},{"location":"api/kohii-core/kohii.v1.core/-playback/on-rendered-first-frame/#onrenderedfirstframe","text":"open fun onRenderedFirstFrame(): Unit","title":"onRenderedFirstFrame"},{"location":"api/kohii-core/kohii.v1.core/-playback/on-video-size-changed/","text":"kohii-core / kohii.v1.core / Playback / onVideoSizeChanged onVideoSizeChanged open fun onVideoSizeChanged(width: Int , height: Int , unappliedRotationDegrees: Int , pixelWidthHeightRatio: Float ): Unit","title":"On video size changed"},{"location":"api/kohii-core/kohii.v1.core/-playback/on-video-size-changed/#onvideosizechanged","text":"open fun onVideoSizeChanged(width: Int , height: Int , unappliedRotationDegrees: Int , pixelWidthHeightRatio: Float ): Unit","title":"onVideoSizeChanged"},{"location":"api/kohii-core/kohii.v1.core/-playback/playback-info/","text":"kohii-core / kohii.v1.core / Playback / playbackInfo playbackInfo val playbackInfo: PlaybackInfo","title":"Playback info"},{"location":"api/kohii-core/kohii.v1.core/-playback/playback-info/#playbackinfo","text":"val playbackInfo: PlaybackInfo","title":"playbackInfo"},{"location":"api/kohii-core/kohii.v1.core/-playback/player-state/","text":"kohii-core / kohii.v1.core / Playback / playerState playerState val playerState: Int","title":"Player state"},{"location":"api/kohii-core/kohii.v1.core/-playback/player-state/#playerstate","text":"val playerState: Int","title":"playerState"},{"location":"api/kohii-core/kohii.v1.core/-playback/remove-callback/","text":"kohii-core / kohii.v1.core / Playback / removeCallback removeCallback fun removeCallback(callback: Callback?): Unit","title":"Remove callback"},{"location":"api/kohii-core/kohii.v1.core/-playback/remove-callback/#removecallback","text":"fun removeCallback(callback: Callback?): Unit","title":"removeCallback"},{"location":"api/kohii-core/kohii.v1.core/-playback/remove-state-listener/","text":"kohii-core / kohii.v1.core / Playback / removeStateListener removeStateListener fun removeStateListener(listener: StateListener?): Unit","title":"Remove state listener"},{"location":"api/kohii-core/kohii.v1.core/-playback/remove-state-listener/#removestatelistener","text":"fun removeStateListener(listener: StateListener?): Unit","title":"removeStateListener"},{"location":"api/kohii-core/kohii.v1.core/-playback/rewind/","text":"kohii-core / kohii.v1.core / Playback / rewind rewind fun rewind(refresh: Boolean = true): Unit","title":"Rewind"},{"location":"api/kohii-core/kohii.v1.core/-playback/rewind/#rewind","text":"fun rewind(refresh: Boolean = true): Unit","title":"rewind"},{"location":"api/kohii-core/kohii.v1.core/-playback/tag/","text":"kohii-core / kohii.v1.core / Playback / tag tag val tag: Any","title":"Tag"},{"location":"api/kohii-core/kohii.v1.core/-playback/tag/#tag","text":"val tag: Any","title":"tag"},{"location":"api/kohii-core/kohii.v1.core/-playback/to-string/","text":"kohii-core / kohii.v1.core / Playback / toString toString open fun toString(): String","title":"To string"},{"location":"api/kohii-core/kohii.v1.core/-playback/to-string/#tostring","text":"open fun toString(): String","title":"toString"},{"location":"api/kohii-core/kohii.v1.core/-playback/unbind/","text":"kohii-core / kohii.v1.core / Playback / unbind unbind fun unbind(): Unit","title":"Unbind"},{"location":"api/kohii-core/kohii.v1.core/-playback/unbind/#unbind","text":"fun unbind(): Unit","title":"unbind"},{"location":"api/kohii-core/kohii.v1.core/-playback/update-token/","text":"kohii-core / kohii.v1.core / Playback / updateToken updateToken protected open fun updateToken(): Token","title":"Update token"},{"location":"api/kohii-core/kohii.v1.core/-playback/update-token/#updatetoken","text":"protected open fun updateToken(): Token","title":"updateToken"},{"location":"api/kohii-core/kohii.v1.core/-playback/volume-info/","text":"kohii-core / kohii.v1.core / Playback / volumeInfo volumeInfo val volumeInfo: VolumeInfo","title":"Volume info"},{"location":"api/kohii-core/kohii.v1.core/-playback/volume-info/#volumeinfo","text":"val volumeInfo: VolumeInfo","title":"volumeInfo"},{"location":"api/kohii-core/kohii.v1.core/-playback/-callback/","text":"kohii-core / kohii.v1.core / Playback / Callback Callback interface Callback Functions Name Summary onActive open fun onActive(playback: Playback ): Unit onAdded open fun onAdded(playback: Playback ): Unit onAttached open fun onAttached(playback: Playback ): Unit onDetached open fun onDetached(playback: Playback ): Unit onInActive open fun onInActive(playback: Playback ): Unit onRemoved open fun onRemoved(playback: Playback ): Unit","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-playback/-callback/#callback","text":"interface Callback","title":"Callback"},{"location":"api/kohii-core/kohii.v1.core/-playback/-callback/#functions","text":"Name Summary onActive open fun onActive(playback: Playback ): Unit onAdded open fun onAdded(playback: Playback ): Unit onAttached open fun onAttached(playback: Playback ): Unit onDetached open fun onDetached(playback: Playback ): Unit onInActive open fun onInActive(playback: Playback ): Unit onRemoved open fun onRemoved(playback: Playback ): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-playback/-callback/on-active/","text":"kohii-core / kohii.v1.core / Playback / Callback / onActive onActive open fun onActive(playback: Playback ): Unit","title":"On active"},{"location":"api/kohii-core/kohii.v1.core/-playback/-callback/on-active/#onactive","text":"open fun onActive(playback: Playback ): Unit","title":"onActive"},{"location":"api/kohii-core/kohii.v1.core/-playback/-callback/on-added/","text":"kohii-core / kohii.v1.core / Playback / Callback / onAdded onAdded open fun onAdded(playback: Playback ): Unit","title":"On added"},{"location":"api/kohii-core/kohii.v1.core/-playback/-callback/on-added/#onadded","text":"open fun onAdded(playback: Playback ): Unit","title":"onAdded"},{"location":"api/kohii-core/kohii.v1.core/-playback/-callback/on-attached/","text":"kohii-core / kohii.v1.core / Playback / Callback / onAttached onAttached open fun onAttached(playback: Playback ): Unit","title":"On attached"},{"location":"api/kohii-core/kohii.v1.core/-playback/-callback/on-attached/#onattached","text":"open fun onAttached(playback: Playback ): Unit","title":"onAttached"},{"location":"api/kohii-core/kohii.v1.core/-playback/-callback/on-detached/","text":"kohii-core / kohii.v1.core / Playback / Callback / onDetached onDetached open fun onDetached(playback: Playback ): Unit","title":"On detached"},{"location":"api/kohii-core/kohii.v1.core/-playback/-callback/on-detached/#ondetached","text":"open fun onDetached(playback: Playback ): Unit","title":"onDetached"},{"location":"api/kohii-core/kohii.v1.core/-playback/-callback/on-in-active/","text":"kohii-core / kohii.v1.core / Playback / Callback / onInActive onInActive open fun onInActive(playback: Playback ): Unit","title":"On in active"},{"location":"api/kohii-core/kohii.v1.core/-playback/-callback/on-in-active/#oninactive","text":"open fun onInActive(playback: Playback ): Unit","title":"onInActive"},{"location":"api/kohii-core/kohii.v1.core/-playback/-callback/on-removed/","text":"kohii-core / kohii.v1.core / Playback / Callback / onRemoved onRemoved open fun onRemoved(playback: Playback ): Unit","title":"On removed"},{"location":"api/kohii-core/kohii.v1.core/-playback/-callback/on-removed/#onremoved","text":"open fun onRemoved(playback: Playback ): Unit","title":"onRemoved"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/","text":"kohii-core / kohii.v1.core / Playback / Config Config data class Config Constructors Name Summary init Config(tag: Any = Master.NO_TAG, delay: Int = 0, threshold: Float = 0.65F, preload: Boolean = false, repeatMode: Int = Common.REPEAT_MODE_OFF, controller: Controller? = null, callbacks: Set Callback = emptySet()) Properties Name Summary callbacks val callbacks: Set Callback controller val controller: Controller? delay val delay: Int preload val preload: Boolean repeatMode val repeatMode: Int tag val tag: Any threshold val threshold: Float","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/#config","text":"data class Config","title":"Config"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/#constructors","text":"Name Summary init Config(tag: Any = Master.NO_TAG, delay: Int = 0, threshold: Float = 0.65F, preload: Boolean = false, repeatMode: Int = Common.REPEAT_MODE_OFF, controller: Controller? = null, callbacks: Set Callback = emptySet())","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/#properties","text":"Name Summary callbacks val callbacks: Set Callback controller val controller: Controller? delay val delay: Int preload val preload: Boolean repeatMode val repeatMode: Int tag val tag: Any threshold val threshold: Float","title":"Properties"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/-init-/","text":"kohii-core / kohii.v1.core / Playback / Config / init init Config(tag: Any = Master.NO_TAG, delay: Int = 0, threshold: Float = 0.65F, preload: Boolean = false, repeatMode: Int = Common.REPEAT_MODE_OFF, controller: Controller? = null, callbacks: Set Callback = emptySet())","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/-init-/#init","text":"Config(tag: Any = Master.NO_TAG, delay: Int = 0, threshold: Float = 0.65F, preload: Boolean = false, repeatMode: Int = Common.REPEAT_MODE_OFF, controller: Controller? = null, callbacks: Set Callback = emptySet())","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/callbacks/","text":"kohii-core / kohii.v1.core / Playback / Config / callbacks callbacks val callbacks: Set Callback","title":"Callbacks"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/callbacks/#callbacks","text":"val callbacks: Set Callback","title":"callbacks"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/controller/","text":"kohii-core / kohii.v1.core / Playback / Config / controller controller val controller: Controller?","title":"Controller"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/controller/#controller","text":"val controller: Controller?","title":"controller"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/delay/","text":"kohii-core / kohii.v1.core / Playback / Config / delay delay val delay: Int","title":"Delay"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/delay/#delay","text":"val delay: Int","title":"delay"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/preload/","text":"kohii-core / kohii.v1.core / Playback / Config / preload preload val preload: Boolean","title":"Preload"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/preload/#preload","text":"val preload: Boolean","title":"preload"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/repeat-mode/","text":"kohii-core / kohii.v1.core / Playback / Config / repeatMode repeatMode val repeatMode: Int","title":"Repeat mode"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/repeat-mode/#repeatmode","text":"val repeatMode: Int","title":"repeatMode"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/tag/","text":"kohii-core / kohii.v1.core / Playback / Config / tag tag val tag: Any","title":"Tag"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/tag/#tag","text":"val tag: Any","title":"tag"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/threshold/","text":"kohii-core / kohii.v1.core / Playback / Config / threshold threshold val threshold: Float","title":"Threshold"},{"location":"api/kohii-core/kohii.v1.core/-playback/-config/threshold/#threshold","text":"val threshold: Float","title":"threshold"},{"location":"api/kohii-core/kohii.v1.core/-playback/-controller/","text":"kohii-core / kohii.v1.core / Playback / Controller Controller interface Controller Functions Name Summary kohiiCanPause open fun kohiiCanPause(): Boolean kohiiCanStart open fun kohiiCanStart(): Boolean","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-playback/-controller/#controller","text":"interface Controller","title":"Controller"},{"location":"api/kohii-core/kohii.v1.core/-playback/-controller/#functions","text":"Name Summary kohiiCanPause open fun kohiiCanPause(): Boolean kohiiCanStart open fun kohiiCanStart(): Boolean","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-playback/-controller/kohii-can-pause/","text":"kohii-core / kohii.v1.core / Playback / Controller / kohiiCanPause kohiiCanPause open fun kohiiCanPause(): Boolean","title":"Kohii can pause"},{"location":"api/kohii-core/kohii.v1.core/-playback/-controller/kohii-can-pause/#kohiicanpause","text":"open fun kohiiCanPause(): Boolean","title":"kohiiCanPause"},{"location":"api/kohii-core/kohii.v1.core/-playback/-controller/kohii-can-start/","text":"kohii-core / kohii.v1.core / Playback / Controller / kohiiCanStart kohiiCanStart open fun kohiiCanStart(): Boolean","title":"Kohii can start"},{"location":"api/kohii-core/kohii.v1.core/-playback/-controller/kohii-can-start/#kohiicanstart","text":"open fun kohiiCanStart(): Boolean","title":"kohiiCanStart"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/","text":"kohii-core / kohii.v1.core / Playback / StateListener StateListener interface StateListener Functions Name Summary afterPause Called when the Playback receives onPause . It can be called many times open fun afterPause(playback: Playback ): Unit beforePlay Called when the Playback receives onPlay . It can be called many times open fun beforePlay(playback: Playback ): Unit onBuffering Called when buffering status of the playback is changed. open fun onBuffering(playback: Playback , playWhenReady: Boolean ): Unit onEnded Called when the Video finishes its playback open fun onEnded(playback: Playback ): Unit onError open fun onError(playback: Playback , exception: Exception ): Unit onPaused Called when the Video is paused open fun onPaused(playback: Playback ): Unit onPlaying Called when the Video starts playing open fun onPlaying(playback: Playback ): Unit onRendered Called when a Video is rendered on the Surface for the first time open fun onRendered(playback: Playback ): Unit onVideoSizeChanged open fun onVideoSizeChanged(playback: Playback , width: Int , height: Int , unAppliedRotationDegrees: Int , pixelWidthHeightRatio: Float ): Unit","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/#statelistener","text":"interface StateListener","title":"StateListener"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/#functions","text":"Name Summary afterPause Called when the Playback receives onPause . It can be called many times open fun afterPause(playback: Playback ): Unit beforePlay Called when the Playback receives onPlay . It can be called many times open fun beforePlay(playback: Playback ): Unit onBuffering Called when buffering status of the playback is changed. open fun onBuffering(playback: Playback , playWhenReady: Boolean ): Unit onEnded Called when the Video finishes its playback open fun onEnded(playback: Playback ): Unit onError open fun onError(playback: Playback , exception: Exception ): Unit onPaused Called when the Video is paused open fun onPaused(playback: Playback ): Unit onPlaying Called when the Video starts playing open fun onPlaying(playback: Playback ): Unit onRendered Called when a Video is rendered on the Surface for the first time open fun onRendered(playback: Playback ): Unit onVideoSizeChanged open fun onVideoSizeChanged(playback: Playback , width: Int , height: Int , unAppliedRotationDegrees: Int , pixelWidthHeightRatio: Float ): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/after-pause/","text":"kohii-core / kohii.v1.core / Playback / StateListener / afterPause afterPause open fun afterPause(playback: Playback ): Unit Called when the Playback receives onPause . It can be called many times","title":"After pause"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/after-pause/#afterpause","text":"open fun afterPause(playback: Playback ): Unit Called when the Playback receives onPause . It can be called many times","title":"afterPause"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/before-play/","text":"kohii-core / kohii.v1.core / Playback / StateListener / beforePlay beforePlay open fun beforePlay(playback: Playback ): Unit Called when the Playback receives onPlay . It can be called many times","title":"Before play"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/before-play/#beforeplay","text":"open fun beforePlay(playback: Playback ): Unit Called when the Playback receives onPlay . It can be called many times","title":"beforePlay"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/on-buffering/","text":"kohii-core / kohii.v1.core / Playback / StateListener / onBuffering onBuffering open fun onBuffering(playback: Playback , playWhenReady: Boolean ): Unit Called when buffering status of the playback is changed. Parameters playWhenReady - true if the Video will start playing once buffered enough, false otherwise.","title":"On buffering"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/on-buffering/#onbuffering","text":"open fun onBuffering(playback: Playback , playWhenReady: Boolean ): Unit Called when buffering status of the playback is changed.","title":"onBuffering"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/on-buffering/#parameters","text":"playWhenReady - true if the Video will start playing once buffered enough, false otherwise.","title":"Parameters"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/on-ended/","text":"kohii-core / kohii.v1.core / Playback / StateListener / onEnded onEnded open fun onEnded(playback: Playback ): Unit Called when the Video finishes its playback","title":"On ended"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/on-ended/#onended","text":"open fun onEnded(playback: Playback ): Unit Called when the Video finishes its playback","title":"onEnded"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/on-error/","text":"kohii-core / kohii.v1.core / Playback / StateListener / onError onError open fun onError(playback: Playback , exception: Exception ): Unit","title":"On error"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/on-error/#onerror","text":"open fun onError(playback: Playback , exception: Exception ): Unit","title":"onError"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/on-paused/","text":"kohii-core / kohii.v1.core / Playback / StateListener / onPaused onPaused open fun onPaused(playback: Playback ): Unit Called when the Video is paused","title":"On paused"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/on-paused/#onpaused","text":"open fun onPaused(playback: Playback ): Unit Called when the Video is paused","title":"onPaused"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/on-playing/","text":"kohii-core / kohii.v1.core / Playback / StateListener / onPlaying onPlaying open fun onPlaying(playback: Playback ): Unit Called when the Video starts playing","title":"On playing"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/on-playing/#onplaying","text":"open fun onPlaying(playback: Playback ): Unit Called when the Video starts playing","title":"onPlaying"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/on-rendered/","text":"kohii-core / kohii.v1.core / Playback / StateListener / onRendered onRendered open fun onRendered(playback: Playback ): Unit Called when a Video is rendered on the Surface for the first time","title":"On rendered"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/on-rendered/#onrendered","text":"open fun onRendered(playback: Playback ): Unit Called when a Video is rendered on the Surface for the first time","title":"onRendered"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/on-video-size-changed/","text":"kohii-core / kohii.v1.core / Playback / StateListener / onVideoSizeChanged onVideoSizeChanged open fun onVideoSizeChanged(playback: Playback , width: Int , height: Int , unAppliedRotationDegrees: Int , pixelWidthHeightRatio: Float ): Unit","title":"On video size changed"},{"location":"api/kohii-core/kohii.v1.core/-playback/-state-listener/on-video-size-changed/#onvideosizechanged","text":"open fun onVideoSizeChanged(playback: Playback , width: Int , height: Int , unAppliedRotationDegrees: Int , pixelWidthHeightRatio: Float ): Unit","title":"onVideoSizeChanged"},{"location":"api/kohii-core/kohii.v1.core/-playback/-token/","text":"kohii-core / kohii.v1.core / Playback / Token Token class Token Constructors Name Summary init Token(threshold: Float = 0.65F, areaOffset: Float , containerRect: Rect ) Properties Name Summary areaOffset val areaOffset: Float containerRect val containerRect: Rect Functions Name Summary shouldPlay fun shouldPlay(): Boolean shouldPrepare fun shouldPrepare(): Boolean","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-playback/-token/#token","text":"class Token","title":"Token"},{"location":"api/kohii-core/kohii.v1.core/-playback/-token/#constructors","text":"Name Summary init Token(threshold: Float = 0.65F, areaOffset: Float , containerRect: Rect )","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-playback/-token/#properties","text":"Name Summary areaOffset val areaOffset: Float containerRect val containerRect: Rect","title":"Properties"},{"location":"api/kohii-core/kohii.v1.core/-playback/-token/#functions","text":"Name Summary shouldPlay fun shouldPlay(): Boolean shouldPrepare fun shouldPrepare(): Boolean","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-playback/-token/-init-/","text":"kohii-core / kohii.v1.core / Playback / Token / init init Token(threshold: Float = 0.65F, areaOffset: Float , containerRect: Rect )","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-playback/-token/-init-/#init","text":"Token(threshold: Float = 0.65F, areaOffset: Float , containerRect: Rect )","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-playback/-token/area-offset/","text":"kohii-core / kohii.v1.core / Playback / Token / areaOffset areaOffset val areaOffset: Float","title":"Area offset"},{"location":"api/kohii-core/kohii.v1.core/-playback/-token/area-offset/#areaoffset","text":"val areaOffset: Float","title":"areaOffset"},{"location":"api/kohii-core/kohii.v1.core/-playback/-token/container-rect/","text":"kohii-core / kohii.v1.core / Playback / Token / containerRect containerRect val containerRect: Rect","title":"Container rect"},{"location":"api/kohii-core/kohii.v1.core/-playback/-token/container-rect/#containerrect","text":"val containerRect: Rect","title":"containerRect"},{"location":"api/kohii-core/kohii.v1.core/-playback/-token/should-play/","text":"kohii-core / kohii.v1.core / Playback / Token / shouldPlay shouldPlay fun shouldPlay(): Boolean","title":"Should play"},{"location":"api/kohii-core/kohii.v1.core/-playback/-token/should-play/#shouldplay","text":"fun shouldPlay(): Boolean","title":"shouldPlay"},{"location":"api/kohii-core/kohii.v1.core/-playback/-token/should-prepare/","text":"kohii-core / kohii.v1.core / Playback / Token / shouldPrepare shouldPrepare fun shouldPrepare(): Boolean","title":"Should prepare"},{"location":"api/kohii-core/kohii.v1.core/-playback/-token/should-prepare/#shouldprepare","text":"fun shouldPrepare(): Boolean","title":"shouldPrepare"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listener/","text":"kohii-core / kohii.v1.core / PlayerEventListener PlayerEventListener interface PlayerEventListener : EventListener , VideoListener , AudioListener , TextOutput , MetadataOutput Functions Name Summary onCues open fun onCues(cues: MutableList Cue ?): Unit onMetadata open fun onMetadata(metadata: Metadata ?): Unit Inheritors Name Summary Playback abstract class Playback : PlayerEventListener , ErrorListener PlayerEventListeners class PlayerEventListeners : CopyOnWriteArraySet PlayerEventListener , PlayerEventListener","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listener/#playereventlistener","text":"interface PlayerEventListener : EventListener , VideoListener , AudioListener , TextOutput , MetadataOutput","title":"PlayerEventListener"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listener/#functions","text":"Name Summary onCues open fun onCues(cues: MutableList Cue ?): Unit onMetadata open fun onMetadata(metadata: Metadata ?): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listener/#inheritors","text":"Name Summary Playback abstract class Playback : PlayerEventListener , ErrorListener PlayerEventListeners class PlayerEventListeners : CopyOnWriteArraySet PlayerEventListener , PlayerEventListener","title":"Inheritors"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listener/on-cues/","text":"kohii-core / kohii.v1.core / PlayerEventListener / onCues onCues open fun onCues(cues: MutableList Cue ?): Unit","title":"On cues"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listener/on-cues/#oncues","text":"open fun onCues(cues: MutableList Cue ?): Unit","title":"onCues"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listener/on-metadata/","text":"kohii-core / kohii.v1.core / PlayerEventListener / onMetadata onMetadata open fun onMetadata(metadata: Metadata ?): Unit","title":"On metadata"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listener/on-metadata/#onmetadata","text":"open fun onMetadata(metadata: Metadata ?): Unit","title":"onMetadata"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/","text":"kohii-core / kohii.v1.core / PlayerEventListeners PlayerEventListeners class PlayerEventListeners : CopyOnWriteArraySet PlayerEventListener , PlayerEventListener Constructors Name Summary init PlayerEventListeners() Functions Name Summary onAudioAttributesChanged fun onAudioAttributesChanged(audioAttributes: AudioAttributes ?): Unit onAudioSessionId fun onAudioSessionId(audioSessionId: Int ): Unit onCues fun onCues(cues: MutableList Cue ?): Unit onLoadingChanged fun onLoadingChanged(isLoading: Boolean ): Unit onMetadata fun onMetadata(metadata: Metadata ?): Unit onPlaybackParametersChanged fun onPlaybackParametersChanged(playbackParameters: PlaybackParameters ?): Unit onPlayerError fun onPlayerError(error: ExoPlaybackException ?): Unit onPlayerStateChanged fun onPlayerStateChanged(playWhenReady: Boolean , playbackState: Int ): Unit onPositionDiscontinuity fun onPositionDiscontinuity(reason: Int ): Unit onRenderedFirstFrame fun onRenderedFirstFrame(): Unit onRepeatModeChanged fun onRepeatModeChanged(repeatMode: Int ): Unit onSeekProcessed fun onSeekProcessed(): Unit onShuffleModeEnabledChanged fun onShuffleModeEnabledChanged(shuffleModeEnabled: Boolean ): Unit onTimelineChanged fun onTimelineChanged(timeline: Timeline ?, manifest: Any ?, reason: Int ): Unit onTracksChanged fun onTracksChanged(trackGroups: TrackGroupArray ?, trackSelections: TrackSelectionArray ?): Unit onVideoSizeChanged fun onVideoSizeChanged(width: Int , height: Int , unappliedRotationDegrees: Int , pixelWidthHeightRatio: Float ): Unit onVolumeChanged fun onVolumeChanged(volume: Float ): Unit","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/#playereventlisteners","text":"class PlayerEventListeners : CopyOnWriteArraySet PlayerEventListener , PlayerEventListener","title":"PlayerEventListeners"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/#constructors","text":"Name Summary init PlayerEventListeners()","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/#functions","text":"Name Summary onAudioAttributesChanged fun onAudioAttributesChanged(audioAttributes: AudioAttributes ?): Unit onAudioSessionId fun onAudioSessionId(audioSessionId: Int ): Unit onCues fun onCues(cues: MutableList Cue ?): Unit onLoadingChanged fun onLoadingChanged(isLoading: Boolean ): Unit onMetadata fun onMetadata(metadata: Metadata ?): Unit onPlaybackParametersChanged fun onPlaybackParametersChanged(playbackParameters: PlaybackParameters ?): Unit onPlayerError fun onPlayerError(error: ExoPlaybackException ?): Unit onPlayerStateChanged fun onPlayerStateChanged(playWhenReady: Boolean , playbackState: Int ): Unit onPositionDiscontinuity fun onPositionDiscontinuity(reason: Int ): Unit onRenderedFirstFrame fun onRenderedFirstFrame(): Unit onRepeatModeChanged fun onRepeatModeChanged(repeatMode: Int ): Unit onSeekProcessed fun onSeekProcessed(): Unit onShuffleModeEnabledChanged fun onShuffleModeEnabledChanged(shuffleModeEnabled: Boolean ): Unit onTimelineChanged fun onTimelineChanged(timeline: Timeline ?, manifest: Any ?, reason: Int ): Unit onTracksChanged fun onTracksChanged(trackGroups: TrackGroupArray ?, trackSelections: TrackSelectionArray ?): Unit onVideoSizeChanged fun onVideoSizeChanged(width: Int , height: Int , unappliedRotationDegrees: Int , pixelWidthHeightRatio: Float ): Unit onVolumeChanged fun onVolumeChanged(volume: Float ): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/-init-/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / init init PlayerEventListeners()","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/-init-/#init","text":"PlayerEventListeners()","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-audio-attributes-changed/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / onAudioAttributesChanged onAudioAttributesChanged fun onAudioAttributesChanged(audioAttributes: AudioAttributes ?): Unit","title":"On audio attributes changed"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-audio-attributes-changed/#onaudioattributeschanged","text":"fun onAudioAttributesChanged(audioAttributes: AudioAttributes ?): Unit","title":"onAudioAttributesChanged"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-audio-session-id/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / onAudioSessionId onAudioSessionId fun onAudioSessionId(audioSessionId: Int ): Unit","title":"On audio session id"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-audio-session-id/#onaudiosessionid","text":"fun onAudioSessionId(audioSessionId: Int ): Unit","title":"onAudioSessionId"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-cues/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / onCues onCues fun onCues(cues: MutableList Cue ?): Unit","title":"On cues"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-cues/#oncues","text":"fun onCues(cues: MutableList Cue ?): Unit","title":"onCues"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-loading-changed/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / onLoadingChanged onLoadingChanged fun onLoadingChanged(isLoading: Boolean ): Unit","title":"On loading changed"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-loading-changed/#onloadingchanged","text":"fun onLoadingChanged(isLoading: Boolean ): Unit","title":"onLoadingChanged"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-metadata/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / onMetadata onMetadata fun onMetadata(metadata: Metadata ?): Unit","title":"On metadata"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-metadata/#onmetadata","text":"fun onMetadata(metadata: Metadata ?): Unit","title":"onMetadata"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-playback-parameters-changed/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / onPlaybackParametersChanged onPlaybackParametersChanged fun onPlaybackParametersChanged(playbackParameters: PlaybackParameters ?): Unit","title":"On playback parameters changed"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-playback-parameters-changed/#onplaybackparameterschanged","text":"fun onPlaybackParametersChanged(playbackParameters: PlaybackParameters ?): Unit","title":"onPlaybackParametersChanged"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-player-error/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / onPlayerError onPlayerError fun onPlayerError(error: ExoPlaybackException ?): Unit","title":"On player error"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-player-error/#onplayererror","text":"fun onPlayerError(error: ExoPlaybackException ?): Unit","title":"onPlayerError"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-player-state-changed/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / onPlayerStateChanged onPlayerStateChanged fun onPlayerStateChanged(playWhenReady: Boolean , playbackState: Int ): Unit","title":"On player state changed"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-player-state-changed/#onplayerstatechanged","text":"fun onPlayerStateChanged(playWhenReady: Boolean , playbackState: Int ): Unit","title":"onPlayerStateChanged"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-position-discontinuity/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / onPositionDiscontinuity onPositionDiscontinuity fun onPositionDiscontinuity(reason: Int ): Unit","title":"On position discontinuity"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-position-discontinuity/#onpositiondiscontinuity","text":"fun onPositionDiscontinuity(reason: Int ): Unit","title":"onPositionDiscontinuity"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-rendered-first-frame/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / onRenderedFirstFrame onRenderedFirstFrame fun onRenderedFirstFrame(): Unit","title":"On rendered first frame"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-rendered-first-frame/#onrenderedfirstframe","text":"fun onRenderedFirstFrame(): Unit","title":"onRenderedFirstFrame"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-repeat-mode-changed/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / onRepeatModeChanged onRepeatModeChanged fun onRepeatModeChanged(repeatMode: Int ): Unit","title":"On repeat mode changed"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-repeat-mode-changed/#onrepeatmodechanged","text":"fun onRepeatModeChanged(repeatMode: Int ): Unit","title":"onRepeatModeChanged"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-seek-processed/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / onSeekProcessed onSeekProcessed fun onSeekProcessed(): Unit","title":"On seek processed"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-seek-processed/#onseekprocessed","text":"fun onSeekProcessed(): Unit","title":"onSeekProcessed"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-shuffle-mode-enabled-changed/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / onShuffleModeEnabledChanged onShuffleModeEnabledChanged fun onShuffleModeEnabledChanged(shuffleModeEnabled: Boolean ): Unit","title":"On shuffle mode enabled changed"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-shuffle-mode-enabled-changed/#onshufflemodeenabledchanged","text":"fun onShuffleModeEnabledChanged(shuffleModeEnabled: Boolean ): Unit","title":"onShuffleModeEnabledChanged"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-timeline-changed/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / onTimelineChanged onTimelineChanged fun onTimelineChanged(timeline: Timeline ?, manifest: Any ?, reason: Int ): Unit","title":"On timeline changed"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-timeline-changed/#ontimelinechanged","text":"fun onTimelineChanged(timeline: Timeline ?, manifest: Any ?, reason: Int ): Unit","title":"onTimelineChanged"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-tracks-changed/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / onTracksChanged onTracksChanged fun onTracksChanged(trackGroups: TrackGroupArray ?, trackSelections: TrackSelectionArray ?): Unit","title":"On tracks changed"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-tracks-changed/#ontrackschanged","text":"fun onTracksChanged(trackGroups: TrackGroupArray ?, trackSelections: TrackSelectionArray ?): Unit","title":"onTracksChanged"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-video-size-changed/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / onVideoSizeChanged onVideoSizeChanged fun onVideoSizeChanged(width: Int , height: Int , unappliedRotationDegrees: Int , pixelWidthHeightRatio: Float ): Unit","title":"On video size changed"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-video-size-changed/#onvideosizechanged","text":"fun onVideoSizeChanged(width: Int , height: Int , unappliedRotationDegrees: Int , pixelWidthHeightRatio: Float ): Unit","title":"onVideoSizeChanged"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-volume-changed/","text":"kohii-core / kohii.v1.core / PlayerEventListeners / onVolumeChanged onVolumeChanged fun onVolumeChanged(volume: Float ): Unit","title":"On volume changed"},{"location":"api/kohii-core/kohii.v1.core/-player-event-listeners/on-volume-changed/#onvolumechanged","text":"fun onVolumeChanged(volume: Float ): Unit","title":"onVolumeChanged"},{"location":"api/kohii-core/kohii.v1.core/-prioritized/","text":"kohii-core / kohii.v1.core / Prioritized Prioritized interface Prioritized : Comparable Prioritized Functions Name Summary compareTo open fun compareTo(other: Prioritized ): Int","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-prioritized/#prioritized","text":"interface Prioritized : Comparable Prioritized","title":"Prioritized"},{"location":"api/kohii-core/kohii.v1.core/-prioritized/#functions","text":"Name Summary compareTo open fun compareTo(other: Prioritized ): Int","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-prioritized/compare-to/","text":"kohii-core / kohii.v1.core / Prioritized / compareTo compareTo open fun compareTo(other: Prioritized ): Int","title":"Compare to"},{"location":"api/kohii-core/kohii.v1.core/-prioritized/compare-to/#compareto","text":"open fun compareTo(other: Prioritized ): Int","title":"compareTo"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/","text":"kohii-core / kohii.v1.core / Rebinder Rebinder data class Rebinder : Parcelable Types Name Summary Options class Options Constructors Name Summary init Rebinder(tag: Any ) Properties Name Summary tag val tag: Any Functions Name Summary bind fun bind(engine: Engine * , container: ViewGroup , callback: (( Playback ) - Unit )? = null): Unit fun bind(master: Master , container: ViewGroup , callback: (( Playback ) - Unit )? = null): Unit with fun with(options: Options.() - Unit ): Rebinder","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/#rebinder","text":"data class Rebinder : Parcelable","title":"Rebinder"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/#types","text":"Name Summary Options class Options","title":"Types"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/#constructors","text":"Name Summary init Rebinder(tag: Any )","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/#properties","text":"Name Summary tag val tag: Any","title":"Properties"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/#functions","text":"Name Summary bind fun bind(engine: Engine * , container: ViewGroup , callback: (( Playback ) - Unit )? = null): Unit fun bind(master: Master , container: ViewGroup , callback: (( Playback ) - Unit )? = null): Unit with fun with(options: Options.() - Unit ): Rebinder","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-init-/","text":"kohii-core / kohii.v1.core / Rebinder / init init Rebinder(tag: Any )","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-init-/#init","text":"Rebinder(tag: Any )","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/bind/","text":"kohii-core / kohii.v1.core / Rebinder / bind bind fun bind(engine: Engine * , container: ViewGroup , callback: (( Playback ) - Unit )? = null): Unit fun bind(master: Master , container: ViewGroup , callback: (( Playback ) - Unit )? = null): Unit","title":"Bind"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/bind/#bind","text":"fun bind(engine: Engine * , container: ViewGroup , callback: (( Playback ) - Unit )? = null): Unit fun bind(master: Master , container: ViewGroup , callback: (( Playback ) - Unit )? = null): Unit","title":"bind"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/tag/","text":"kohii-core / kohii.v1.core / Rebinder / tag tag val tag: Any","title":"Tag"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/tag/#tag","text":"val tag: Any","title":"tag"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/with/","text":"kohii-core / kohii.v1.core / Rebinder / with with inline fun with(options: Options.() - Unit ): Rebinder","title":"With"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/with/#with","text":"inline fun with(options: Options.() - Unit ): Rebinder","title":"with"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-options/","text":"kohii-core / kohii.v1.core / Rebinder / Options Options class Options Constructors Name Summary init Options() Properties Name Summary callbacks var callbacks: Array Callback controller var controller: Controller? preload var preload: Boolean repeatMode var repeatMode: Int threshold var threshold: Float","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-options/#options","text":"class Options","title":"Options"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-options/#constructors","text":"Name Summary init Options()","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-options/#properties","text":"Name Summary callbacks var callbacks: Array Callback controller var controller: Controller? preload var preload: Boolean repeatMode var repeatMode: Int threshold var threshold: Float","title":"Properties"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-options/-init-/","text":"kohii-core / kohii.v1.core / Rebinder / Options / init init Options()","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-options/-init-/#init","text":"Options()","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-options/callbacks/","text":"kohii-core / kohii.v1.core / Rebinder / Options / callbacks callbacks var callbacks: Array Callback","title":"Callbacks"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-options/callbacks/#callbacks","text":"var callbacks: Array Callback","title":"callbacks"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-options/controller/","text":"kohii-core / kohii.v1.core / Rebinder / Options / controller controller var controller: Controller?","title":"Controller"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-options/controller/#controller","text":"var controller: Controller?","title":"controller"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-options/preload/","text":"kohii-core / kohii.v1.core / Rebinder / Options / preload preload var preload: Boolean","title":"Preload"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-options/preload/#preload","text":"var preload: Boolean","title":"preload"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-options/repeat-mode/","text":"kohii-core / kohii.v1.core / Rebinder / Options / repeatMode repeatMode var repeatMode: Int","title":"Repeat mode"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-options/repeat-mode/#repeatmode","text":"var repeatMode: Int","title":"repeatMode"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-options/threshold/","text":"kohii-core / kohii.v1.core / Rebinder / Options / threshold threshold var threshold: Float","title":"Threshold"},{"location":"api/kohii-core/kohii.v1.core/-rebinder/-options/threshold/#threshold","text":"var threshold: Float","title":"threshold"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/","text":"kohii-core / kohii.v1.core / RecycledRendererProvider RecycledRendererProvider abstract class RecycledRendererProvider : RendererProvider Constructors Name Summary init RecycledRendererProvider() RecycledRendererProvider(poolSize: Int ) Functions Name Summary acquireRenderer open fun acquireRenderer(playback: Playback , media: Media ): Any clear open fun clear(): Unit createRenderer abstract fun createRenderer(playback: Playback , rendererType: Int ): Any getRendererType open fun getRendererType(container: ViewGroup , media: Media ): Int onClear open fun onClear(renderer: Any ): Unit releaseRenderer open fun releaseRenderer(playback: Playback , media: Media , renderer: Any ?): Unit Inheritors Name Summary ViewRendererProvider abstract class ViewRendererProvider : RecycledRendererProvider","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/#recycledrendererprovider","text":"abstract class RecycledRendererProvider : RendererProvider","title":"RecycledRendererProvider"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/#constructors","text":"Name Summary init RecycledRendererProvider() RecycledRendererProvider(poolSize: Int )","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/#functions","text":"Name Summary acquireRenderer open fun acquireRenderer(playback: Playback , media: Media ): Any clear open fun clear(): Unit createRenderer abstract fun createRenderer(playback: Playback , rendererType: Int ): Any getRendererType open fun getRendererType(container: ViewGroup , media: Media ): Int onClear open fun onClear(renderer: Any ): Unit releaseRenderer open fun releaseRenderer(playback: Playback , media: Media , renderer: Any ?): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/#inheritors","text":"Name Summary ViewRendererProvider abstract class ViewRendererProvider : RecycledRendererProvider","title":"Inheritors"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/-init-/","text":"kohii-core / kohii.v1.core / RecycledRendererProvider / init init RecycledRendererProvider() RecycledRendererProvider(poolSize: Int )","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/-init-/#init","text":"RecycledRendererProvider() RecycledRendererProvider(poolSize: Int )","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/acquire-renderer/","text":"kohii-core / kohii.v1.core / RecycledRendererProvider / acquireRenderer acquireRenderer @CallSuper open fun acquireRenderer(playback: Playback , media: Media ): Any","title":"Acquire renderer"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/acquire-renderer/#acquirerenderer","text":"@CallSuper open fun acquireRenderer(playback: Playback , media: Media ): Any","title":"acquireRenderer"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/clear/","text":"kohii-core / kohii.v1.core / RecycledRendererProvider / clear clear @CallSuper open fun clear(): Unit","title":"Clear"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/clear/#clear","text":"@CallSuper open fun clear(): Unit","title":"clear"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/create-renderer/","text":"kohii-core / kohii.v1.core / RecycledRendererProvider / createRenderer createRenderer abstract fun createRenderer(playback: Playback , rendererType: Int ): Any","title":"Create renderer"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/create-renderer/#createrenderer","text":"abstract fun createRenderer(playback: Playback , rendererType: Int ): Any","title":"createRenderer"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/get-renderer-type/","text":"kohii-core / kohii.v1.core / RecycledRendererProvider / getRendererType getRendererType open fun getRendererType(container: ViewGroup , media: Media ): Int","title":"Get renderer type"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/get-renderer-type/#getrenderertype","text":"open fun getRendererType(container: ViewGroup , media: Media ): Int","title":"getRendererType"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/on-clear/","text":"kohii-core / kohii.v1.core / RecycledRendererProvider / onClear onClear protected open fun onClear(renderer: Any ): Unit","title":"On clear"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/on-clear/#onclear","text":"protected open fun onClear(renderer: Any ): Unit","title":"onClear"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/release-renderer/","text":"kohii-core / kohii.v1.core / RecycledRendererProvider / releaseRenderer releaseRenderer @CallSuper open fun releaseRenderer(playback: Playback , media: Media , renderer: Any ?): Unit","title":"Release renderer"},{"location":"api/kohii-core/kohii.v1.core/-recycled-renderer-provider/release-renderer/#releaserenderer","text":"@CallSuper open fun releaseRenderer(playback: Playback , media: Media , renderer: Any ?): Unit","title":"releaseRenderer"},{"location":"api/kohii-core/kohii.v1.core/-renderer-provider/","text":"kohii-core / kohii.v1.core / RendererProvider RendererProvider interface RendererProvider : DefaultLifecycleObserver Functions Name Summary acquireRenderer open fun acquireRenderer(playback: Playback , media: Media ): Any ? clear open fun clear(): Unit onDestroy open fun onDestroy(owner: LifecycleOwner ): Unit releaseRenderer open fun releaseRenderer(playback: Playback , media: Media , renderer: Any ?): Unit Inheritors Name Summary RecycledRendererProvider abstract class RecycledRendererProvider : RendererProvider","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-renderer-provider/#rendererprovider","text":"interface RendererProvider : DefaultLifecycleObserver","title":"RendererProvider"},{"location":"api/kohii-core/kohii.v1.core/-renderer-provider/#functions","text":"Name Summary acquireRenderer open fun acquireRenderer(playback: Playback , media: Media ): Any ? clear open fun clear(): Unit onDestroy open fun onDestroy(owner: LifecycleOwner ): Unit releaseRenderer open fun releaseRenderer(playback: Playback , media: Media , renderer: Any ?): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-renderer-provider/#inheritors","text":"Name Summary RecycledRendererProvider abstract class RecycledRendererProvider : RendererProvider","title":"Inheritors"},{"location":"api/kohii-core/kohii.v1.core/-renderer-provider/acquire-renderer/","text":"kohii-core / kohii.v1.core / RendererProvider / acquireRenderer acquireRenderer open fun acquireRenderer(playback: Playback , media: Media ): Any ?","title":"Acquire renderer"},{"location":"api/kohii-core/kohii.v1.core/-renderer-provider/acquire-renderer/#acquirerenderer","text":"open fun acquireRenderer(playback: Playback , media: Media ): Any ?","title":"acquireRenderer"},{"location":"api/kohii-core/kohii.v1.core/-renderer-provider/clear/","text":"kohii-core / kohii.v1.core / RendererProvider / clear clear open fun clear(): Unit","title":"Clear"},{"location":"api/kohii-core/kohii.v1.core/-renderer-provider/clear/#clear","text":"open fun clear(): Unit","title":"clear"},{"location":"api/kohii-core/kohii.v1.core/-renderer-provider/on-destroy/","text":"kohii-core / kohii.v1.core / RendererProvider / onDestroy onDestroy open fun onDestroy(owner: LifecycleOwner ): Unit","title":"On destroy"},{"location":"api/kohii-core/kohii.v1.core/-renderer-provider/on-destroy/#ondestroy","text":"open fun onDestroy(owner: LifecycleOwner ): Unit","title":"onDestroy"},{"location":"api/kohii-core/kohii.v1.core/-renderer-provider/release-renderer/","text":"kohii-core / kohii.v1.core / RendererProvider / releaseRenderer releaseRenderer open fun releaseRenderer(playback: Playback , media: Media , renderer: Any ?): Unit","title":"Release renderer"},{"location":"api/kohii-core/kohii.v1.core/-renderer-provider/release-renderer/#releaserenderer","text":"open fun releaseRenderer(playback: Playback , media: Media , renderer: Any ?): Unit","title":"releaseRenderer"},{"location":"api/kohii-core/kohii.v1.core/-scope/","text":"kohii-core / kohii.v1.core / Scope Scope enum class Scope Enum Values Name Summary GLOBAL GROUP MANAGER BUCKET PLAYBACK","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-scope/#scope","text":"enum class Scope","title":"Scope"},{"location":"api/kohii-core/kohii.v1.core/-scope/#enum-values","text":"Name Summary GLOBAL GROUP MANAGER BUCKET PLAYBACK","title":"Enum Values"},{"location":"api/kohii-core/kohii.v1.core/-scope/-b-u-c-k-e-t/","text":"kohii-core / kohii.v1.core / Scope / BUCKET BUCKET BUCKET","title":" b u c k e t"},{"location":"api/kohii-core/kohii.v1.core/-scope/-b-u-c-k-e-t/#bucket","text":"BUCKET","title":"BUCKET"},{"location":"api/kohii-core/kohii.v1.core/-scope/-g-l-o-b-a-l/","text":"kohii-core / kohii.v1.core / Scope / GLOBAL GLOBAL GLOBAL","title":" g l o b a l"},{"location":"api/kohii-core/kohii.v1.core/-scope/-g-l-o-b-a-l/#global","text":"GLOBAL","title":"GLOBAL"},{"location":"api/kohii-core/kohii.v1.core/-scope/-g-r-o-u-p/","text":"kohii-core / kohii.v1.core / Scope / GROUP GROUP GROUP","title":" g r o u p"},{"location":"api/kohii-core/kohii.v1.core/-scope/-g-r-o-u-p/#group","text":"GROUP","title":"GROUP"},{"location":"api/kohii-core/kohii.v1.core/-scope/-m-a-n-a-g-e-r/","text":"kohii-core / kohii.v1.core / Scope / MANAGER MANAGER MANAGER","title":" m a n a g e r"},{"location":"api/kohii-core/kohii.v1.core/-scope/-m-a-n-a-g-e-r/#manager","text":"MANAGER","title":"MANAGER"},{"location":"api/kohii-core/kohii.v1.core/-scope/-p-l-a-y-b-a-c-k/","text":"kohii-core / kohii.v1.core / Scope / PLAYBACK PLAYBACK PLAYBACK","title":" p l a y b a c k"},{"location":"api/kohii-core/kohii.v1.core/-scope/-p-l-a-y-b-a-c-k/#playback","text":"PLAYBACK","title":"PLAYBACK"},{"location":"api/kohii-core/kohii.v1.core/-video-size/","text":"kohii-core / kohii.v1.core / VideoSize VideoSize data class VideoSize Constructors Name Summary init VideoSize(maxWidth: Int , maxHeight: Int ) Properties Name Summary maxHeight val maxHeight: Int maxWidth val maxWidth: Int Companion Object Properties Name Summary FHD val FHD: VideoSize HD val HD: VideoSize NONE val NONE: VideoSize ORIGINAL val ORIGINAL: VideoSize SD val SD: VideoSize UHD val UHD: VideoSize","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-video-size/#videosize","text":"data class VideoSize","title":"VideoSize"},{"location":"api/kohii-core/kohii.v1.core/-video-size/#constructors","text":"Name Summary init VideoSize(maxWidth: Int , maxHeight: Int )","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-video-size/#properties","text":"Name Summary maxHeight val maxHeight: Int maxWidth val maxWidth: Int","title":"Properties"},{"location":"api/kohii-core/kohii.v1.core/-video-size/#companion-object-properties","text":"Name Summary FHD val FHD: VideoSize HD val HD: VideoSize NONE val NONE: VideoSize ORIGINAL val ORIGINAL: VideoSize SD val SD: VideoSize UHD val UHD: VideoSize","title":"Companion Object Properties"},{"location":"api/kohii-core/kohii.v1.core/-video-size/-f-h-d/","text":"kohii-core / kohii.v1.core / VideoSize / FHD FHD val FHD: VideoSize","title":" f h d"},{"location":"api/kohii-core/kohii.v1.core/-video-size/-f-h-d/#fhd","text":"val FHD: VideoSize","title":"FHD"},{"location":"api/kohii-core/kohii.v1.core/-video-size/-h-d/","text":"kohii-core / kohii.v1.core / VideoSize / HD HD val HD: VideoSize","title":" h d"},{"location":"api/kohii-core/kohii.v1.core/-video-size/-h-d/#hd","text":"val HD: VideoSize","title":"HD"},{"location":"api/kohii-core/kohii.v1.core/-video-size/-init-/","text":"kohii-core / kohii.v1.core / VideoSize / init init VideoSize(maxWidth: Int , maxHeight: Int )","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-video-size/-init-/#init","text":"VideoSize(maxWidth: Int , maxHeight: Int )","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-video-size/-n-o-n-e/","text":"kohii-core / kohii.v1.core / VideoSize / NONE NONE val NONE: VideoSize","title":" n o n e"},{"location":"api/kohii-core/kohii.v1.core/-video-size/-n-o-n-e/#none","text":"val NONE: VideoSize","title":"NONE"},{"location":"api/kohii-core/kohii.v1.core/-video-size/-o-r-i-g-i-n-a-l/","text":"kohii-core / kohii.v1.core / VideoSize / ORIGINAL ORIGINAL val ORIGINAL: VideoSize","title":" o r i g i n a l"},{"location":"api/kohii-core/kohii.v1.core/-video-size/-o-r-i-g-i-n-a-l/#original","text":"val ORIGINAL: VideoSize","title":"ORIGINAL"},{"location":"api/kohii-core/kohii.v1.core/-video-size/-s-d/","text":"kohii-core / kohii.v1.core / VideoSize / SD SD val SD: VideoSize","title":" s d"},{"location":"api/kohii-core/kohii.v1.core/-video-size/-s-d/#sd","text":"val SD: VideoSize","title":"SD"},{"location":"api/kohii-core/kohii.v1.core/-video-size/-u-h-d/","text":"kohii-core / kohii.v1.core / VideoSize / UHD UHD val UHD: VideoSize","title":" u h d"},{"location":"api/kohii-core/kohii.v1.core/-video-size/-u-h-d/#uhd","text":"val UHD: VideoSize","title":"UHD"},{"location":"api/kohii-core/kohii.v1.core/-video-size/max-height/","text":"kohii-core / kohii.v1.core / VideoSize / maxHeight maxHeight val maxHeight: Int","title":"Max height"},{"location":"api/kohii-core/kohii.v1.core/-video-size/max-height/#maxheight","text":"val maxHeight: Int","title":"maxHeight"},{"location":"api/kohii-core/kohii.v1.core/-video-size/max-width/","text":"kohii-core / kohii.v1.core / VideoSize / maxWidth maxWidth val maxWidth: Int","title":"Max width"},{"location":"api/kohii-core/kohii.v1.core/-video-size/max-width/#maxwidth","text":"val maxWidth: Int","title":"maxWidth"},{"location":"api/kohii-core/kohii.v1.core/-view-renderer-provider/","text":"kohii-core / kohii.v1.core / ViewRendererProvider ViewRendererProvider abstract class ViewRendererProvider : RecycledRendererProvider Constructors Name Summary init ViewRendererProvider() ViewRendererProvider(poolSize: Int ) Functions Name Summary releaseRenderer open fun releaseRenderer(playback: Playback , media: Media , renderer: Any ?): Unit","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-view-renderer-provider/#viewrendererprovider","text":"abstract class ViewRendererProvider : RecycledRendererProvider","title":"ViewRendererProvider"},{"location":"api/kohii-core/kohii.v1.core/-view-renderer-provider/#constructors","text":"Name Summary init ViewRendererProvider() ViewRendererProvider(poolSize: Int )","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-view-renderer-provider/#functions","text":"Name Summary releaseRenderer open fun releaseRenderer(playback: Playback , media: Media , renderer: Any ?): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-view-renderer-provider/-init-/","text":"kohii-core / kohii.v1.core / ViewRendererProvider / init init ViewRendererProvider() ViewRendererProvider(poolSize: Int )","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-view-renderer-provider/-init-/#init","text":"ViewRendererProvider() ViewRendererProvider(poolSize: Int )","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-view-renderer-provider/release-renderer/","text":"kohii-core / kohii.v1.core / ViewRendererProvider / releaseRenderer releaseRenderer open fun releaseRenderer(playback: Playback , media: Media , renderer: Any ?): Unit","title":"Release renderer"},{"location":"api/kohii-core/kohii.v1.core/-view-renderer-provider/release-renderer/#releaserenderer","text":"open fun releaseRenderer(playback: Playback , media: Media , renderer: Any ?): Unit","title":"releaseRenderer"},{"location":"api/kohii-core/kohii.v1.core/-volume-changed-listener/","text":"kohii-core / kohii.v1.core / VolumeChangedListener VolumeChangedListener interface VolumeChangedListener Functions Name Summary onVolumeChanged abstract fun onVolumeChanged(volumeInfo: VolumeInfo ): Unit Inheritors Name Summary VolumeChangedListeners class VolumeChangedListeners : CopyOnWriteArraySet VolumeChangedListener , VolumeChangedListener","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-volume-changed-listener/#volumechangedlistener","text":"interface VolumeChangedListener","title":"VolumeChangedListener"},{"location":"api/kohii-core/kohii.v1.core/-volume-changed-listener/#functions","text":"Name Summary onVolumeChanged abstract fun onVolumeChanged(volumeInfo: VolumeInfo ): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-volume-changed-listener/#inheritors","text":"Name Summary VolumeChangedListeners class VolumeChangedListeners : CopyOnWriteArraySet VolumeChangedListener , VolumeChangedListener","title":"Inheritors"},{"location":"api/kohii-core/kohii.v1.core/-volume-changed-listener/on-volume-changed/","text":"kohii-core / kohii.v1.core / VolumeChangedListener / onVolumeChanged onVolumeChanged abstract fun onVolumeChanged(volumeInfo: VolumeInfo ): Unit","title":"On volume changed"},{"location":"api/kohii-core/kohii.v1.core/-volume-changed-listener/on-volume-changed/#onvolumechanged","text":"abstract fun onVolumeChanged(volumeInfo: VolumeInfo ): Unit","title":"onVolumeChanged"},{"location":"api/kohii-core/kohii.v1.core/-volume-changed-listeners/","text":"kohii-core / kohii.v1.core / VolumeChangedListeners VolumeChangedListeners class VolumeChangedListeners : CopyOnWriteArraySet VolumeChangedListener , VolumeChangedListener Constructors Name Summary init VolumeChangedListeners() Functions Name Summary onVolumeChanged fun onVolumeChanged(volumeInfo: VolumeInfo ): Unit","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-volume-changed-listeners/#volumechangedlisteners","text":"class VolumeChangedListeners : CopyOnWriteArraySet VolumeChangedListener , VolumeChangedListener","title":"VolumeChangedListeners"},{"location":"api/kohii-core/kohii.v1.core/-volume-changed-listeners/#constructors","text":"Name Summary init VolumeChangedListeners()","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.core/-volume-changed-listeners/#functions","text":"Name Summary onVolumeChanged fun onVolumeChanged(volumeInfo: VolumeInfo ): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-volume-changed-listeners/-init-/","text":"kohii-core / kohii.v1.core / VolumeChangedListeners / init init VolumeChangedListeners()","title":" init "},{"location":"api/kohii-core/kohii.v1.core/-volume-changed-listeners/-init-/#init","text":"VolumeChangedListeners()","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.core/-volume-changed-listeners/on-volume-changed/","text":"kohii-core / kohii.v1.core / VolumeChangedListeners / onVolumeChanged onVolumeChanged fun onVolumeChanged(volumeInfo: VolumeInfo ): Unit","title":"On volume changed"},{"location":"api/kohii-core/kohii.v1.core/-volume-changed-listeners/on-volume-changed/#onvolumechanged","text":"fun onVolumeChanged(volumeInfo: VolumeInfo ): Unit","title":"onVolumeChanged"},{"location":"api/kohii-core/kohii.v1.core/-volume-info-controller/","text":"kohii-core / kohii.v1.core / VolumeInfoController VolumeInfoController interface VolumeInfoController Properties Name Summary volumeInfo abstract val volumeInfo: VolumeInfo Functions Name Summary addVolumeChangedListener abstract fun addVolumeChangedListener(listener: VolumeChangedListener ): Unit removeVolumeChangedListener abstract fun removeVolumeChangedListener(listener: VolumeChangedListener ?): Unit setVolumeInfo abstract fun setVolumeInfo(volumeInfo: VolumeInfo ): Boolean","title":"Home"},{"location":"api/kohii-core/kohii.v1.core/-volume-info-controller/#volumeinfocontroller","text":"interface VolumeInfoController","title":"VolumeInfoController"},{"location":"api/kohii-core/kohii.v1.core/-volume-info-controller/#properties","text":"Name Summary volumeInfo abstract val volumeInfo: VolumeInfo","title":"Properties"},{"location":"api/kohii-core/kohii.v1.core/-volume-info-controller/#functions","text":"Name Summary addVolumeChangedListener abstract fun addVolumeChangedListener(listener: VolumeChangedListener ): Unit removeVolumeChangedListener abstract fun removeVolumeChangedListener(listener: VolumeChangedListener ?): Unit setVolumeInfo abstract fun setVolumeInfo(volumeInfo: VolumeInfo ): Boolean","title":"Functions"},{"location":"api/kohii-core/kohii.v1.core/-volume-info-controller/add-volume-changed-listener/","text":"kohii-core / kohii.v1.core / VolumeInfoController / addVolumeChangedListener addVolumeChangedListener abstract fun addVolumeChangedListener(listener: VolumeChangedListener ): Unit","title":"Add volume changed listener"},{"location":"api/kohii-core/kohii.v1.core/-volume-info-controller/add-volume-changed-listener/#addvolumechangedlistener","text":"abstract fun addVolumeChangedListener(listener: VolumeChangedListener ): Unit","title":"addVolumeChangedListener"},{"location":"api/kohii-core/kohii.v1.core/-volume-info-controller/remove-volume-changed-listener/","text":"kohii-core / kohii.v1.core / VolumeInfoController / removeVolumeChangedListener removeVolumeChangedListener abstract fun removeVolumeChangedListener(listener: VolumeChangedListener ?): Unit","title":"Remove volume changed listener"},{"location":"api/kohii-core/kohii.v1.core/-volume-info-controller/remove-volume-changed-listener/#removevolumechangedlistener","text":"abstract fun removeVolumeChangedListener(listener: VolumeChangedListener ?): Unit","title":"removeVolumeChangedListener"},{"location":"api/kohii-core/kohii.v1.core/-volume-info-controller/set-volume-info/","text":"kohii-core / kohii.v1.core / VolumeInfoController / setVolumeInfo setVolumeInfo abstract fun setVolumeInfo(volumeInfo: VolumeInfo ): Boolean","title":"Set volume info"},{"location":"api/kohii-core/kohii.v1.core/-volume-info-controller/set-volume-info/#setvolumeinfo","text":"abstract fun setVolumeInfo(volumeInfo: VolumeInfo ): Boolean","title":"setVolumeInfo"},{"location":"api/kohii-core/kohii.v1.core/-volume-info-controller/volume-info/","text":"kohii-core / kohii.v1.core / VolumeInfoController / volumeInfo volumeInfo abstract val volumeInfo: VolumeInfo","title":"Volume info"},{"location":"api/kohii-core/kohii.v1.core/-volume-info-controller/volume-info/#volumeinfo","text":"abstract val volumeInfo: VolumeInfo","title":"volumeInfo"},{"location":"api/kohii-core/kohii.v1.media/","text":"kohii-core / kohii.v1.media Package kohii.v1.media Types Name Summary Media interface Media MediaDrm Note: implementation of this interface must comparable using all 4 values, no more, no less. interface MediaDrm : Comparable MediaDrm , Parcelable MediaItem open class MediaItem : Media , Parcelable PlaybackInfo data class PlaybackInfo : Parcelable VolumeInfo data class VolumeInfo : Parcelable","title":"Home"},{"location":"api/kohii-core/kohii.v1.media/#package-kohiiv1media","text":"","title":"Package kohii.v1.media"},{"location":"api/kohii-core/kohii.v1.media/#types","text":"Name Summary Media interface Media MediaDrm Note: implementation of this interface must comparable using all 4 values, no more, no less. interface MediaDrm : Comparable MediaDrm , Parcelable MediaItem open class MediaItem : Media , Parcelable PlaybackInfo data class PlaybackInfo : Parcelable VolumeInfo data class VolumeInfo : Parcelable","title":"Types"},{"location":"api/kohii-core/kohii.v1.media/-media/","text":"kohii-core / kohii.v1.media / Media Media interface Media Properties Name Summary mediaDrm abstract val mediaDrm: MediaDrm ? type abstract val type: String ? uri abstract val uri: Uri Inheritors Name Summary MediaItem open class MediaItem : Media , Parcelable","title":"Home"},{"location":"api/kohii-core/kohii.v1.media/-media/#media","text":"interface Media","title":"Media"},{"location":"api/kohii-core/kohii.v1.media/-media/#properties","text":"Name Summary mediaDrm abstract val mediaDrm: MediaDrm ? type abstract val type: String ? uri abstract val uri: Uri","title":"Properties"},{"location":"api/kohii-core/kohii.v1.media/-media/#inheritors","text":"Name Summary MediaItem open class MediaItem : Media , Parcelable","title":"Inheritors"},{"location":"api/kohii-core/kohii.v1.media/-media/media-drm/","text":"kohii-core / kohii.v1.media / Media / mediaDrm mediaDrm abstract val mediaDrm: MediaDrm ?","title":"Media drm"},{"location":"api/kohii-core/kohii.v1.media/-media/media-drm/#mediadrm","text":"abstract val mediaDrm: MediaDrm ?","title":"mediaDrm"},{"location":"api/kohii-core/kohii.v1.media/-media/type/","text":"kohii-core / kohii.v1.media / Media / type type abstract val type: String ?","title":"Type"},{"location":"api/kohii-core/kohii.v1.media/-media/type/#type","text":"abstract val type: String ?","title":"type"},{"location":"api/kohii-core/kohii.v1.media/-media/uri/","text":"kohii-core / kohii.v1.media / Media / uri uri abstract val uri: Uri","title":"Uri"},{"location":"api/kohii-core/kohii.v1.media/-media/uri/#uri","text":"abstract val uri: Uri","title":"uri"},{"location":"api/kohii-core/kohii.v1.media/-media-drm/","text":"kohii-core / kohii.v1.media / MediaDrm MediaDrm interface MediaDrm : Comparable MediaDrm , Parcelable Note: implementation of this interface must comparable using all 4 values, no more, no less. Author eneim (2018/06/25). Properties Name Summary keyRequestPropertiesArray abstract val keyRequestPropertiesArray: Array String ? licenseUrl abstract val licenseUrl: String ? multiSession abstract val multiSession: Boolean type abstract val type: String Functions Name Summary compareTo open fun compareTo(other: MediaDrm ): Int","title":"Home"},{"location":"api/kohii-core/kohii.v1.media/-media-drm/#mediadrm","text":"interface MediaDrm : Comparable MediaDrm , Parcelable Note: implementation of this interface must comparable using all 4 values, no more, no less. Author eneim (2018/06/25).","title":"MediaDrm"},{"location":"api/kohii-core/kohii.v1.media/-media-drm/#properties","text":"Name Summary keyRequestPropertiesArray abstract val keyRequestPropertiesArray: Array String ? licenseUrl abstract val licenseUrl: String ? multiSession abstract val multiSession: Boolean type abstract val type: String","title":"Properties"},{"location":"api/kohii-core/kohii.v1.media/-media-drm/#functions","text":"Name Summary compareTo open fun compareTo(other: MediaDrm ): Int","title":"Functions"},{"location":"api/kohii-core/kohii.v1.media/-media-drm/compare-to/","text":"kohii-core / kohii.v1.media / MediaDrm / compareTo compareTo open fun compareTo(other: MediaDrm ): Int","title":"Compare to"},{"location":"api/kohii-core/kohii.v1.media/-media-drm/compare-to/#compareto","text":"open fun compareTo(other: MediaDrm ): Int","title":"compareTo"},{"location":"api/kohii-core/kohii.v1.media/-media-drm/key-request-properties-array/","text":"kohii-core / kohii.v1.media / MediaDrm / keyRequestPropertiesArray keyRequestPropertiesArray abstract val keyRequestPropertiesArray: Array String ?","title":"Key request properties array"},{"location":"api/kohii-core/kohii.v1.media/-media-drm/key-request-properties-array/#keyrequestpropertiesarray","text":"abstract val keyRequestPropertiesArray: Array String ?","title":"keyRequestPropertiesArray"},{"location":"api/kohii-core/kohii.v1.media/-media-drm/license-url/","text":"kohii-core / kohii.v1.media / MediaDrm / licenseUrl licenseUrl abstract val licenseUrl: String ?","title":"License url"},{"location":"api/kohii-core/kohii.v1.media/-media-drm/license-url/#licenseurl","text":"abstract val licenseUrl: String ?","title":"licenseUrl"},{"location":"api/kohii-core/kohii.v1.media/-media-drm/multi-session/","text":"kohii-core / kohii.v1.media / MediaDrm / multiSession multiSession abstract val multiSession: Boolean","title":"Multi session"},{"location":"api/kohii-core/kohii.v1.media/-media-drm/multi-session/#multisession","text":"abstract val multiSession: Boolean","title":"multiSession"},{"location":"api/kohii-core/kohii.v1.media/-media-drm/type/","text":"kohii-core / kohii.v1.media / MediaDrm / type type abstract val type: String","title":"Type"},{"location":"api/kohii-core/kohii.v1.media/-media-drm/type/#type","text":"abstract val type: String","title":"type"},{"location":"api/kohii-core/kohii.v1.media/-media-item/","text":"kohii-core / kohii.v1.media / MediaItem MediaItem open class MediaItem : Media , Parcelable Author eneim (2018/10/19). Constructors Name Summary init MediaItem(url: String , type: String ? = null, mediaDrm: MediaDrm ? = null) MediaItem(uri: Uri , type: String ? = null, mediaDrm: MediaDrm ? = null) Properties Name Summary mediaDrm open val mediaDrm: MediaDrm ? type open val type: String ? uri open val uri: Uri Functions Name Summary equals open fun equals(other: Any ?): Boolean hashCode open fun hashCode(): Int toString open fun toString(): String","title":"Home"},{"location":"api/kohii-core/kohii.v1.media/-media-item/#mediaitem","text":"open class MediaItem : Media , Parcelable Author eneim (2018/10/19).","title":"MediaItem"},{"location":"api/kohii-core/kohii.v1.media/-media-item/#constructors","text":"Name Summary init MediaItem(url: String , type: String ? = null, mediaDrm: MediaDrm ? = null) MediaItem(uri: Uri , type: String ? = null, mediaDrm: MediaDrm ? = null)","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.media/-media-item/#properties","text":"Name Summary mediaDrm open val mediaDrm: MediaDrm ? type open val type: String ? uri open val uri: Uri","title":"Properties"},{"location":"api/kohii-core/kohii.v1.media/-media-item/#functions","text":"Name Summary equals open fun equals(other: Any ?): Boolean hashCode open fun hashCode(): Int toString open fun toString(): String","title":"Functions"},{"location":"api/kohii-core/kohii.v1.media/-media-item/-init-/","text":"kohii-core / kohii.v1.media / MediaItem / init init MediaItem(url: String , type: String ? = null, mediaDrm: MediaDrm ? = null)``MediaItem(uri: Uri , type: String ? = null, mediaDrm: MediaDrm ? = null) Author eneim (2018/10/19).","title":" init "},{"location":"api/kohii-core/kohii.v1.media/-media-item/-init-/#init","text":"MediaItem(url: String , type: String ? = null, mediaDrm: MediaDrm ? = null)``MediaItem(uri: Uri , type: String ? = null, mediaDrm: MediaDrm ? = null) Author eneim (2018/10/19).","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.media/-media-item/equals/","text":"kohii-core / kohii.v1.media / MediaItem / equals equals open fun equals(other: Any ?): Boolean","title":"Equals"},{"location":"api/kohii-core/kohii.v1.media/-media-item/equals/#equals","text":"open fun equals(other: Any ?): Boolean","title":"equals"},{"location":"api/kohii-core/kohii.v1.media/-media-item/hash-code/","text":"kohii-core / kohii.v1.media / MediaItem / hashCode hashCode open fun hashCode(): Int","title":"Hash code"},{"location":"api/kohii-core/kohii.v1.media/-media-item/hash-code/#hashcode","text":"open fun hashCode(): Int","title":"hashCode"},{"location":"api/kohii-core/kohii.v1.media/-media-item/media-drm/","text":"kohii-core / kohii.v1.media / MediaItem / mediaDrm mediaDrm open val mediaDrm: MediaDrm ?","title":"Media drm"},{"location":"api/kohii-core/kohii.v1.media/-media-item/media-drm/#mediadrm","text":"open val mediaDrm: MediaDrm ?","title":"mediaDrm"},{"location":"api/kohii-core/kohii.v1.media/-media-item/to-string/","text":"kohii-core / kohii.v1.media / MediaItem / toString toString open fun toString(): String","title":"To string"},{"location":"api/kohii-core/kohii.v1.media/-media-item/to-string/#tostring","text":"open fun toString(): String","title":"toString"},{"location":"api/kohii-core/kohii.v1.media/-media-item/type/","text":"kohii-core / kohii.v1.media / MediaItem / type type open val type: String ?","title":"Type"},{"location":"api/kohii-core/kohii.v1.media/-media-item/type/#type","text":"open val type: String ?","title":"type"},{"location":"api/kohii-core/kohii.v1.media/-media-item/uri/","text":"kohii-core / kohii.v1.media / MediaItem / uri uri open val uri: Uri","title":"Uri"},{"location":"api/kohii-core/kohii.v1.media/-media-item/uri/#uri","text":"open val uri: Uri","title":"uri"},{"location":"api/kohii-core/kohii.v1.media/-playback-info/","text":"kohii-core / kohii.v1.media / PlaybackInfo PlaybackInfo data class PlaybackInfo : Parcelable Author eneim (2018/06/24). Constructors Name Summary init PlaybackInfo() PlaybackInfo(resumeWindow: Int , resumePosition: Long , volumeInfo: VolumeInfo ) Properties Name Summary resumePosition var resumePosition: Long resumeWindow var resumeWindow: Int volumeInfo var volumeInfo: VolumeInfo Companion Object Properties Name Summary INDEX_UNSET const val INDEX_UNSET: Int TIME_UNSET const val TIME_UNSET: Long","title":"Home"},{"location":"api/kohii-core/kohii.v1.media/-playback-info/#playbackinfo","text":"data class PlaybackInfo : Parcelable Author eneim (2018/06/24).","title":"PlaybackInfo"},{"location":"api/kohii-core/kohii.v1.media/-playback-info/#constructors","text":"Name Summary init PlaybackInfo() PlaybackInfo(resumeWindow: Int , resumePosition: Long , volumeInfo: VolumeInfo )","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.media/-playback-info/#properties","text":"Name Summary resumePosition var resumePosition: Long resumeWindow var resumeWindow: Int volumeInfo var volumeInfo: VolumeInfo","title":"Properties"},{"location":"api/kohii-core/kohii.v1.media/-playback-info/#companion-object-properties","text":"Name Summary INDEX_UNSET const val INDEX_UNSET: Int TIME_UNSET const val TIME_UNSET: Long","title":"Companion Object Properties"},{"location":"api/kohii-core/kohii.v1.media/-playback-info/-i-n-d-e-x_-u-n-s-e-t/","text":"kohii-core / kohii.v1.media / PlaybackInfo / INDEX_UNSET INDEX_UNSET const val INDEX_UNSET: Int","title":" i n d e x  u n s e t"},{"location":"api/kohii-core/kohii.v1.media/-playback-info/-i-n-d-e-x_-u-n-s-e-t/#index_unset","text":"const val INDEX_UNSET: Int","title":"INDEX_UNSET"},{"location":"api/kohii-core/kohii.v1.media/-playback-info/-init-/","text":"kohii-core / kohii.v1.media / PlaybackInfo / init init PlaybackInfo()``PlaybackInfo(resumeWindow: Int , resumePosition: Long , volumeInfo: VolumeInfo ) Author eneim (2018/06/24).","title":" init "},{"location":"api/kohii-core/kohii.v1.media/-playback-info/-init-/#init","text":"PlaybackInfo()``PlaybackInfo(resumeWindow: Int , resumePosition: Long , volumeInfo: VolumeInfo ) Author eneim (2018/06/24).","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.media/-playback-info/-t-i-m-e_-u-n-s-e-t/","text":"kohii-core / kohii.v1.media / PlaybackInfo / TIME_UNSET TIME_UNSET const val TIME_UNSET: Long","title":" t i m e  u n s e t"},{"location":"api/kohii-core/kohii.v1.media/-playback-info/-t-i-m-e_-u-n-s-e-t/#time_unset","text":"const val TIME_UNSET: Long","title":"TIME_UNSET"},{"location":"api/kohii-core/kohii.v1.media/-playback-info/resume-position/","text":"kohii-core / kohii.v1.media / PlaybackInfo / resumePosition resumePosition var resumePosition: Long","title":"Resume position"},{"location":"api/kohii-core/kohii.v1.media/-playback-info/resume-position/#resumeposition","text":"var resumePosition: Long","title":"resumePosition"},{"location":"api/kohii-core/kohii.v1.media/-playback-info/resume-window/","text":"kohii-core / kohii.v1.media / PlaybackInfo / resumeWindow resumeWindow var resumeWindow: Int","title":"Resume window"},{"location":"api/kohii-core/kohii.v1.media/-playback-info/resume-window/#resumewindow","text":"var resumeWindow: Int","title":"resumeWindow"},{"location":"api/kohii-core/kohii.v1.media/-playback-info/volume-info/","text":"kohii-core / kohii.v1.media / PlaybackInfo / volumeInfo volumeInfo var volumeInfo: VolumeInfo","title":"Volume info"},{"location":"api/kohii-core/kohii.v1.media/-playback-info/volume-info/#volumeinfo","text":"var volumeInfo: VolumeInfo","title":"volumeInfo"},{"location":"api/kohii-core/kohii.v1.media/-volume-info/","text":"kohii-core / kohii.v1.media / VolumeInfo VolumeInfo data class VolumeInfo : Parcelable Author eneim (2018/06/24). Constructors Name Summary init VolumeInfo(original: VolumeInfo ) VolumeInfo(mute: Boolean = false, volume: Float = 1F) Properties Name Summary mute var mute: Boolean volume var volume: Float Functions Name Summary setTo fun setTo(mute: Boolean , volume: Float ): Unit fun setTo(volumeInfo: VolumeInfo ): Unit Companion Object Properties Name Summary SCRAP val SCRAP: VolumeInfo","title":"Home"},{"location":"api/kohii-core/kohii.v1.media/-volume-info/#volumeinfo","text":"data class VolumeInfo : Parcelable Author eneim (2018/06/24).","title":"VolumeInfo"},{"location":"api/kohii-core/kohii.v1.media/-volume-info/#constructors","text":"Name Summary init VolumeInfo(original: VolumeInfo ) VolumeInfo(mute: Boolean = false, volume: Float = 1F)","title":"Constructors"},{"location":"api/kohii-core/kohii.v1.media/-volume-info/#properties","text":"Name Summary mute var mute: Boolean volume var volume: Float","title":"Properties"},{"location":"api/kohii-core/kohii.v1.media/-volume-info/#functions","text":"Name Summary setTo fun setTo(mute: Boolean , volume: Float ): Unit fun setTo(volumeInfo: VolumeInfo ): Unit","title":"Functions"},{"location":"api/kohii-core/kohii.v1.media/-volume-info/#companion-object-properties","text":"Name Summary SCRAP val SCRAP: VolumeInfo","title":"Companion Object Properties"},{"location":"api/kohii-core/kohii.v1.media/-volume-info/-init-/","text":"kohii-core / kohii.v1.media / VolumeInfo / init init VolumeInfo(original: VolumeInfo )``VolumeInfo(mute: Boolean = false, volume: Float = 1F) Author eneim (2018/06/24).","title":" init "},{"location":"api/kohii-core/kohii.v1.media/-volume-info/-init-/#init","text":"VolumeInfo(original: VolumeInfo )``VolumeInfo(mute: Boolean = false, volume: Float = 1F) Author eneim (2018/06/24).","title":"&lt;init&gt;"},{"location":"api/kohii-core/kohii.v1.media/-volume-info/-s-c-r-a-p/","text":"kohii-core / kohii.v1.media / VolumeInfo / SCRAP SCRAP val SCRAP: VolumeInfo","title":" s c r a p"},{"location":"api/kohii-core/kohii.v1.media/-volume-info/-s-c-r-a-p/#scrap","text":"val SCRAP: VolumeInfo","title":"SCRAP"},{"location":"api/kohii-core/kohii.v1.media/-volume-info/mute/","text":"kohii-core / kohii.v1.media / VolumeInfo / mute mute var mute: Boolean","title":"Mute"},{"location":"api/kohii-core/kohii.v1.media/-volume-info/mute/#mute","text":"var mute: Boolean","title":"mute"},{"location":"api/kohii-core/kohii.v1.media/-volume-info/set-to/","text":"kohii-core / kohii.v1.media / VolumeInfo / setTo setTo fun setTo(mute: Boolean , volume: Float ): Unit fun setTo(volumeInfo: VolumeInfo ): Unit","title":"Set to"},{"location":"api/kohii-core/kohii.v1.media/-volume-info/set-to/#setto","text":"fun setTo(mute: Boolean , volume: Float ): Unit fun setTo(volumeInfo: VolumeInfo ): Unit","title":"setTo"},{"location":"api/kohii-core/kohii.v1.media/-volume-info/volume/","text":"kohii-core / kohii.v1.media / VolumeInfo / volume volume var volume: Float","title":"Volume"},{"location":"api/kohii-core/kohii.v1.media/-volume-info/volume/#volume","text":"var volume: Float","title":"volume"},{"location":"api/kohii-exoplayer/","text":"kohii-exoplayer Packages Name Summary kohii.v1.exoplayer kohii.v1.exoplayer.internal Index All Types","title":"kohii-exoplayer"},{"location":"api/kohii-exoplayer/#packages","text":"Name Summary kohii.v1.exoplayer kohii.v1.exoplayer.internal","title":"Packages"},{"location":"api/kohii-exoplayer/#index","text":"All Types","title":"Index"},{"location":"api/kohii-exoplayer/alltypes/","text":"All Types Name Summary kohii.v1.exoplayer.internal.BandwidthMeterFactory | kohii.v1.exoplayer.internal.DefaultBandwidthMeterFactory | kohii.v1.exoplayer.DefaultControlDispatcher | kohii.v1.exoplayer.internal.DefaultDrmSessionManagerProvider | kohii.v1.exoplayer.internal.DefaultExoPlayerProvider | kohii.v1.exoplayer.internal.DefaultMediaSourceFactoryProvider | kohii.v1.exoplayer.internal.DrmSessionManagerProvider | kohii.v1.exoplayer.internal.ExoPlayerProvider | kohii.v1.exoplayer.HybridMediaItem | kohii.v1.exoplayer.Kohii | kohii.v1.exoplayer.internal.KohiiExoPlayer Extend the SimpleExoPlayer to have custom configuration. | kohii.v1.exoplayer.internal.MediaSourceFactoryProvider | kohii.v1.exoplayer.internal.OfflineSourceHelper | (extensions in package kohii.v1.exoplayer.internal) com.google.android.exoplayer2.Player | kohii.v1.exoplayer.internal.PlayerViewBridgeCreator | kohii.v1.exoplayer.internal.PlayerViewPlayable | kohii.v1.exoplayer.internal.PlayerViewPlayableCreator","title":"Home"},{"location":"api/kohii-exoplayer/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"api/kohii-exoplayer/alltypes/#kohiiv1exoplayerinternalbandwidthmeterfactory","text":"|","title":"kohii.v1.exoplayer.internal.BandwidthMeterFactory"},{"location":"api/kohii-exoplayer/alltypes/#kohiiv1exoplayerinternaldefaultbandwidthmeterfactory","text":"|","title":"kohii.v1.exoplayer.internal.DefaultBandwidthMeterFactory"},{"location":"api/kohii-exoplayer/alltypes/#kohiiv1exoplayerdefaultcontroldispatcher","text":"|","title":"kohii.v1.exoplayer.DefaultControlDispatcher"},{"location":"api/kohii-exoplayer/alltypes/#kohiiv1exoplayerinternaldefaultdrmsessionmanagerprovider","text":"|","title":"kohii.v1.exoplayer.internal.DefaultDrmSessionManagerProvider"},{"location":"api/kohii-exoplayer/alltypes/#kohiiv1exoplayerinternaldefaultexoplayerprovider","text":"|","title":"kohii.v1.exoplayer.internal.DefaultExoPlayerProvider"},{"location":"api/kohii-exoplayer/alltypes/#kohiiv1exoplayerinternaldefaultmediasourcefactoryprovider","text":"|","title":"kohii.v1.exoplayer.internal.DefaultMediaSourceFactoryProvider"},{"location":"api/kohii-exoplayer/alltypes/#kohiiv1exoplayerinternaldrmsessionmanagerprovider","text":"|","title":"kohii.v1.exoplayer.internal.DrmSessionManagerProvider"},{"location":"api/kohii-exoplayer/alltypes/#kohiiv1exoplayerinternalexoplayerprovider","text":"|","title":"kohii.v1.exoplayer.internal.ExoPlayerProvider"},{"location":"api/kohii-exoplayer/alltypes/#kohiiv1exoplayerhybridmediaitem","text":"|","title":"kohii.v1.exoplayer.HybridMediaItem"},{"location":"api/kohii-exoplayer/alltypes/#kohiiv1exoplayerkohii","text":"|","title":"kohii.v1.exoplayer.Kohii"},{"location":"api/kohii-exoplayer/alltypes/#kohiiv1exoplayerinternalkohiiexoplayer","text":"Extend the SimpleExoPlayer to have custom configuration. |","title":"kohii.v1.exoplayer.internal.KohiiExoPlayer"},{"location":"api/kohii-exoplayer/alltypes/#kohiiv1exoplayerinternalmediasourcefactoryprovider","text":"|","title":"kohii.v1.exoplayer.internal.MediaSourceFactoryProvider"},{"location":"api/kohii-exoplayer/alltypes/#kohiiv1exoplayerinternalofflinesourcehelper","text":"| (extensions in package kohii.v1.exoplayer.internal)","title":"kohii.v1.exoplayer.internal.OfflineSourceHelper"},{"location":"api/kohii-exoplayer/alltypes/#comgoogleandroidexoplayer2player","text":"|","title":"com.google.android.exoplayer2.Player"},{"location":"api/kohii-exoplayer/alltypes/#kohiiv1exoplayerinternalplayerviewbridgecreator","text":"|","title":"kohii.v1.exoplayer.internal.PlayerViewBridgeCreator"},{"location":"api/kohii-exoplayer/alltypes/#kohiiv1exoplayerinternalplayerviewplayable","text":"|","title":"kohii.v1.exoplayer.internal.PlayerViewPlayable"},{"location":"api/kohii-exoplayer/alltypes/#kohiiv1exoplayerinternalplayerviewplayablecreator","text":"","title":"kohii.v1.exoplayer.internal.PlayerViewPlayableCreator"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/","text":"kohii-exoplayer / kohii.v1.exoplayer Package kohii.v1.exoplayer Types Name Summary DefaultControlDispatcher class DefaultControlDispatcher : ControlDispatcher , Controller HybridMediaItem class HybridMediaItem : Media , MediaSource Kohii class Kohii : Engine PlayerView","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/#package-kohiiv1exoplayer","text":"","title":"Package kohii.v1.exoplayer"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/#types","text":"Name Summary DefaultControlDispatcher class DefaultControlDispatcher : ControlDispatcher , Controller HybridMediaItem class HybridMediaItem : Media , MediaSource Kohii class Kohii : Engine PlayerView","title":"Types"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/","text":"kohii-exoplayer / kohii.v1.exoplayer / DefaultControlDispatcher DefaultControlDispatcher class DefaultControlDispatcher : ControlDispatcher , Controller Constructors Name Summary init DefaultControlDispatcher(manager: Manager , container: ViewGroup , kohiiCanStart: Boolean = true, kohiiCanPause: Boolean = true) Functions Name Summary dispatchSeekTo fun dispatchSeekTo(player: Player ?, windowIndex: Int , positionMs: Long ): Boolean dispatchSetPlayWhenReady fun dispatchSetPlayWhenReady(player: Player ?, playWhenReady: Boolean ): Boolean dispatchSetRepeatMode fun dispatchSetRepeatMode(player: Player ?, repeatMode: Int ): Boolean dispatchSetShuffleModeEnabled fun dispatchSetShuffleModeEnabled(player: Player ?, shuffleModeEnabled: Boolean ): Boolean dispatchStop fun dispatchStop(player: Player ?, reset: Boolean ): Boolean kohiiCanPause fun kohiiCanPause(): Boolean kohiiCanStart fun kohiiCanStart(): Boolean","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/#defaultcontroldispatcher","text":"class DefaultControlDispatcher : ControlDispatcher , Controller","title":"DefaultControlDispatcher"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/#constructors","text":"Name Summary init DefaultControlDispatcher(manager: Manager , container: ViewGroup , kohiiCanStart: Boolean = true, kohiiCanPause: Boolean = true)","title":"Constructors"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/#functions","text":"Name Summary dispatchSeekTo fun dispatchSeekTo(player: Player ?, windowIndex: Int , positionMs: Long ): Boolean dispatchSetPlayWhenReady fun dispatchSetPlayWhenReady(player: Player ?, playWhenReady: Boolean ): Boolean dispatchSetRepeatMode fun dispatchSetRepeatMode(player: Player ?, repeatMode: Int ): Boolean dispatchSetShuffleModeEnabled fun dispatchSetShuffleModeEnabled(player: Player ?, shuffleModeEnabled: Boolean ): Boolean dispatchStop fun dispatchStop(player: Player ?, reset: Boolean ): Boolean kohiiCanPause fun kohiiCanPause(): Boolean kohiiCanStart fun kohiiCanStart(): Boolean","title":"Functions"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/-init-/","text":"kohii-exoplayer / kohii.v1.exoplayer / DefaultControlDispatcher / init init DefaultControlDispatcher(manager: Manager , container: ViewGroup , kohiiCanStart: Boolean = true, kohiiCanPause: Boolean = true)","title":" init "},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/-init-/#init","text":"DefaultControlDispatcher(manager: Manager , container: ViewGroup , kohiiCanStart: Boolean = true, kohiiCanPause: Boolean = true)","title":"&lt;init&gt;"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/dispatch-seek-to/","text":"kohii-exoplayer / kohii.v1.exoplayer / DefaultControlDispatcher / dispatchSeekTo dispatchSeekTo fun dispatchSeekTo(player: Player ?, windowIndex: Int , positionMs: Long ): Boolean","title":"Dispatch seek to"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/dispatch-seek-to/#dispatchseekto","text":"fun dispatchSeekTo(player: Player ?, windowIndex: Int , positionMs: Long ): Boolean","title":"dispatchSeekTo"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/dispatch-set-play-when-ready/","text":"kohii-exoplayer / kohii.v1.exoplayer / DefaultControlDispatcher / dispatchSetPlayWhenReady dispatchSetPlayWhenReady fun dispatchSetPlayWhenReady(player: Player ?, playWhenReady: Boolean ): Boolean","title":"Dispatch set play when ready"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/dispatch-set-play-when-ready/#dispatchsetplaywhenready","text":"fun dispatchSetPlayWhenReady(player: Player ?, playWhenReady: Boolean ): Boolean","title":"dispatchSetPlayWhenReady"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/dispatch-set-repeat-mode/","text":"kohii-exoplayer / kohii.v1.exoplayer / DefaultControlDispatcher / dispatchSetRepeatMode dispatchSetRepeatMode fun dispatchSetRepeatMode(player: Player ?, repeatMode: Int ): Boolean","title":"Dispatch set repeat mode"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/dispatch-set-repeat-mode/#dispatchsetrepeatmode","text":"fun dispatchSetRepeatMode(player: Player ?, repeatMode: Int ): Boolean","title":"dispatchSetRepeatMode"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/dispatch-set-shuffle-mode-enabled/","text":"kohii-exoplayer / kohii.v1.exoplayer / DefaultControlDispatcher / dispatchSetShuffleModeEnabled dispatchSetShuffleModeEnabled fun dispatchSetShuffleModeEnabled(player: Player ?, shuffleModeEnabled: Boolean ): Boolean","title":"Dispatch set shuffle mode enabled"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/dispatch-set-shuffle-mode-enabled/#dispatchsetshufflemodeenabled","text":"fun dispatchSetShuffleModeEnabled(player: Player ?, shuffleModeEnabled: Boolean ): Boolean","title":"dispatchSetShuffleModeEnabled"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/dispatch-stop/","text":"kohii-exoplayer / kohii.v1.exoplayer / DefaultControlDispatcher / dispatchStop dispatchStop fun dispatchStop(player: Player ?, reset: Boolean ): Boolean","title":"Dispatch stop"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/dispatch-stop/#dispatchstop","text":"fun dispatchStop(player: Player ?, reset: Boolean ): Boolean","title":"dispatchStop"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/kohii-can-pause/","text":"kohii-exoplayer / kohii.v1.exoplayer / DefaultControlDispatcher / kohiiCanPause kohiiCanPause fun kohiiCanPause(): Boolean","title":"Kohii can pause"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/kohii-can-pause/#kohiicanpause","text":"fun kohiiCanPause(): Boolean","title":"kohiiCanPause"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/kohii-can-start/","text":"kohii-exoplayer / kohii.v1.exoplayer / DefaultControlDispatcher / kohiiCanStart kohiiCanStart fun kohiiCanStart(): Boolean","title":"Kohii can start"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-default-control-dispatcher/kohii-can-start/#kohiicanstart","text":"fun kohiiCanStart(): Boolean","title":"kohiiCanStart"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-hybrid-media-item/","text":"kohii-exoplayer / kohii.v1.exoplayer / HybridMediaItem HybridMediaItem class HybridMediaItem : Media , MediaSource Constructors Name Summary init HybridMediaItem(media: Media , mediaSource: MediaSource ) Properties Name Summary media val media: Media mediaSource val mediaSource: MediaSource","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-hybrid-media-item/#hybridmediaitem","text":"class HybridMediaItem : Media , MediaSource","title":"HybridMediaItem"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-hybrid-media-item/#constructors","text":"Name Summary init HybridMediaItem(media: Media , mediaSource: MediaSource )","title":"Constructors"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-hybrid-media-item/#properties","text":"Name Summary media val media: Media mediaSource val mediaSource: MediaSource","title":"Properties"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-hybrid-media-item/-init-/","text":"kohii-exoplayer / kohii.v1.exoplayer / HybridMediaItem / init init HybridMediaItem(media: Media , mediaSource: MediaSource )","title":" init "},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-hybrid-media-item/-init-/#init","text":"HybridMediaItem(media: Media , mediaSource: MediaSource )","title":"&lt;init&gt;"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-hybrid-media-item/media-source/","text":"kohii-exoplayer / kohii.v1.exoplayer / HybridMediaItem / mediaSource mediaSource val mediaSource: MediaSource","title":"Media source"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-hybrid-media-item/media-source/#mediasource","text":"val mediaSource: MediaSource","title":"mediaSource"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-hybrid-media-item/media/","text":"kohii-exoplayer / kohii.v1.exoplayer / HybridMediaItem / media media val media: Media","title":"Media"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-hybrid-media-item/media/#media","text":"val media: Media","title":"media"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-kohii/","text":"kohii-exoplayer / kohii.v1.exoplayer / Kohii Kohii class Kohii : Engine PlayerView Functions Name Summary inject fun inject(group: Group ): Unit Companion Object Functions Name Summary get operator fun get(context: Context ): Kohii operator fun get(fragment: Fragment ): Kohii","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-kohii/#kohii","text":"class Kohii : Engine PlayerView","title":"Kohii"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-kohii/#functions","text":"Name Summary inject fun inject(group: Group ): Unit","title":"Functions"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-kohii/#companion-object-functions","text":"Name Summary get operator fun get(context: Context ): Kohii operator fun get(fragment: Fragment ): Kohii","title":"Companion Object Functions"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-kohii/get/","text":"kohii-exoplayer / kohii.v1.exoplayer / Kohii / get get @JvmStatic operator fun get(context: Context ): Kohii @JvmStatic operator fun get(fragment: Fragment ): Kohii","title":"Get"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-kohii/get/#get","text":"@JvmStatic operator fun get(context: Context ): Kohii @JvmStatic operator fun get(fragment: Fragment ): Kohii","title":"get"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-kohii/inject/","text":"kohii-exoplayer / kohii.v1.exoplayer / Kohii / inject inject fun inject(group: Group ): Unit","title":"Inject"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer/-kohii/inject/#inject","text":"fun inject(group: Group ): Unit","title":"inject"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal Package kohii.v1.exoplayer.internal Types Name Summary BandwidthMeterFactory interface BandwidthMeterFactory DefaultBandwidthMeterFactory class DefaultBandwidthMeterFactory : BandwidthMeterFactory DefaultDrmSessionManagerProvider class DefaultDrmSessionManagerProvider : DrmSessionManagerProvider DefaultExoPlayerProvider class DefaultExoPlayerProvider : ExoPlayerProvider DefaultMediaSourceFactoryProvider class DefaultMediaSourceFactoryProvider : MediaSourceFactoryProvider DrmSessionManagerProvider interface DrmSessionManagerProvider ExoPlayerProvider interface ExoPlayerProvider KohiiExoPlayer Extend the SimpleExoPlayer to have custom configuration. open class KohiiExoPlayer : SimpleExoPlayer , VolumeInfoController MediaSourceFactoryProvider interface MediaSourceFactoryProvider OfflineSourceHelper interface OfflineSourceHelper PlayerViewBridgeCreator class PlayerViewBridgeCreator : BridgeCreator PlayerView PlayerViewPlayable class PlayerViewPlayable : AbstractPlayable PlayerView PlayerViewPlayableCreator class PlayerViewPlayableCreator : PlayableCreator PlayerView Extensions for External Classes Name Summary com.google.android.exoplayer2.Player","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/#package-kohiiv1exoplayerinternal","text":"","title":"Package kohii.v1.exoplayer.internal"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/#types","text":"Name Summary BandwidthMeterFactory interface BandwidthMeterFactory DefaultBandwidthMeterFactory class DefaultBandwidthMeterFactory : BandwidthMeterFactory DefaultDrmSessionManagerProvider class DefaultDrmSessionManagerProvider : DrmSessionManagerProvider DefaultExoPlayerProvider class DefaultExoPlayerProvider : ExoPlayerProvider DefaultMediaSourceFactoryProvider class DefaultMediaSourceFactoryProvider : MediaSourceFactoryProvider DrmSessionManagerProvider interface DrmSessionManagerProvider ExoPlayerProvider interface ExoPlayerProvider KohiiExoPlayer Extend the SimpleExoPlayer to have custom configuration. open class KohiiExoPlayer : SimpleExoPlayer , VolumeInfoController MediaSourceFactoryProvider interface MediaSourceFactoryProvider OfflineSourceHelper interface OfflineSourceHelper PlayerViewBridgeCreator class PlayerViewBridgeCreator : BridgeCreator PlayerView PlayerViewPlayable class PlayerViewPlayable : AbstractPlayable PlayerView PlayerViewPlayableCreator class PlayerViewPlayableCreator : PlayableCreator PlayerView","title":"Types"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/#extensions-for-external-classes","text":"Name Summary com.google.android.exoplayer2.Player","title":"Extensions for External Classes"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-bandwidth-meter-factory/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / BandwidthMeterFactory BandwidthMeterFactory interface BandwidthMeterFactory Functions Name Summary createBandwidthMeter abstract fun createBandwidthMeter(context: Context ): BandwidthMeter Inheritors Name Summary DefaultBandwidthMeterFactory class DefaultBandwidthMeterFactory : BandwidthMeterFactory","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-bandwidth-meter-factory/#bandwidthmeterfactory","text":"interface BandwidthMeterFactory","title":"BandwidthMeterFactory"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-bandwidth-meter-factory/#functions","text":"Name Summary createBandwidthMeter abstract fun createBandwidthMeter(context: Context ): BandwidthMeter","title":"Functions"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-bandwidth-meter-factory/#inheritors","text":"Name Summary DefaultBandwidthMeterFactory class DefaultBandwidthMeterFactory : BandwidthMeterFactory","title":"Inheritors"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-bandwidth-meter-factory/create-bandwidth-meter/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / BandwidthMeterFactory / createBandwidthMeter createBandwidthMeter abstract fun createBandwidthMeter(context: Context ): BandwidthMeter","title":"Create bandwidth meter"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-bandwidth-meter-factory/create-bandwidth-meter/#createbandwidthmeter","text":"abstract fun createBandwidthMeter(context: Context ): BandwidthMeter","title":"createBandwidthMeter"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-bandwidth-meter-factory/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DefaultBandwidthMeterFactory DefaultBandwidthMeterFactory class DefaultBandwidthMeterFactory : BandwidthMeterFactory Constructors Name Summary init DefaultBandwidthMeterFactory() Functions Name Summary createBandwidthMeter fun createBandwidthMeter(context: Context ): BandwidthMeter","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-bandwidth-meter-factory/#defaultbandwidthmeterfactory","text":"class DefaultBandwidthMeterFactory : BandwidthMeterFactory","title":"DefaultBandwidthMeterFactory"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-bandwidth-meter-factory/#constructors","text":"Name Summary init DefaultBandwidthMeterFactory()","title":"Constructors"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-bandwidth-meter-factory/#functions","text":"Name Summary createBandwidthMeter fun createBandwidthMeter(context: Context ): BandwidthMeter","title":"Functions"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-bandwidth-meter-factory/-init-/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DefaultBandwidthMeterFactory / init init DefaultBandwidthMeterFactory()","title":" init "},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-bandwidth-meter-factory/-init-/#init","text":"DefaultBandwidthMeterFactory()","title":"&lt;init&gt;"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-bandwidth-meter-factory/create-bandwidth-meter/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DefaultBandwidthMeterFactory / createBandwidthMeter createBandwidthMeter fun createBandwidthMeter(context: Context ): BandwidthMeter","title":"Create bandwidth meter"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-bandwidth-meter-factory/create-bandwidth-meter/#createbandwidthmeter","text":"fun createBandwidthMeter(context: Context ): BandwidthMeter","title":"createBandwidthMeter"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-drm-session-manager-provider/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DefaultDrmSessionManagerProvider DefaultDrmSessionManagerProvider class DefaultDrmSessionManagerProvider : DrmSessionManagerProvider Author eneim (2018/10/27). Constructors Name Summary init DefaultDrmSessionManagerProvider(context: Context , httpDataSourceFactory: Factory ) Functions Name Summary cleanUp fun cleanUp(): Unit provideDrmSessionManager fun provideDrmSessionManager(media: Media ): DrmSessionManager FrameworkMediaCrypto ? releaseDrmSessionManager fun releaseDrmSessionManager(sessionManager: DrmSessionManager * ?): Unit","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-drm-session-manager-provider/#defaultdrmsessionmanagerprovider","text":"class DefaultDrmSessionManagerProvider : DrmSessionManagerProvider Author eneim (2018/10/27).","title":"DefaultDrmSessionManagerProvider"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-drm-session-manager-provider/#constructors","text":"Name Summary init DefaultDrmSessionManagerProvider(context: Context , httpDataSourceFactory: Factory )","title":"Constructors"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-drm-session-manager-provider/#functions","text":"Name Summary cleanUp fun cleanUp(): Unit provideDrmSessionManager fun provideDrmSessionManager(media: Media ): DrmSessionManager FrameworkMediaCrypto ? releaseDrmSessionManager fun releaseDrmSessionManager(sessionManager: DrmSessionManager * ?): Unit","title":"Functions"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-drm-session-manager-provider/-init-/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DefaultDrmSessionManagerProvider / init init DefaultDrmSessionManagerProvider(context: Context , httpDataSourceFactory: Factory ) Author eneim (2018/10/27).","title":" init "},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-drm-session-manager-provider/-init-/#init","text":"DefaultDrmSessionManagerProvider(context: Context , httpDataSourceFactory: Factory ) Author eneim (2018/10/27).","title":"&lt;init&gt;"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-drm-session-manager-provider/clean-up/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DefaultDrmSessionManagerProvider / cleanUp cleanUp fun cleanUp(): Unit","title":"Clean up"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-drm-session-manager-provider/clean-up/#cleanup","text":"fun cleanUp(): Unit","title":"cleanUp"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-drm-session-manager-provider/provide-drm-session-manager/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DefaultDrmSessionManagerProvider / provideDrmSessionManager provideDrmSessionManager fun provideDrmSessionManager(media: Media ): DrmSessionManager FrameworkMediaCrypto ?","title":"Provide drm session manager"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-drm-session-manager-provider/provide-drm-session-manager/#providedrmsessionmanager","text":"fun provideDrmSessionManager(media: Media ): DrmSessionManager FrameworkMediaCrypto ?","title":"provideDrmSessionManager"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-drm-session-manager-provider/release-drm-session-manager/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DefaultDrmSessionManagerProvider / releaseDrmSessionManager releaseDrmSessionManager fun releaseDrmSessionManager(sessionManager: DrmSessionManager * ?): Unit","title":"Release drm session manager"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-drm-session-manager-provider/release-drm-session-manager/#releasedrmsessionmanager","text":"fun releaseDrmSessionManager(sessionManager: DrmSessionManager * ?): Unit","title":"releaseDrmSessionManager"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-exo-player-provider/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DefaultExoPlayerProvider DefaultExoPlayerProvider class DefaultExoPlayerProvider : ExoPlayerProvider Author eneim (2018/10/27). Constructors Name Summary init DefaultExoPlayerProvider(context: Context , bandwidthMeterFactory: BandwidthMeterFactory = DefaultBandwidthMeterFactory(), drmSessionManagerProvider: DrmSessionManagerProvider ? = null, loadControl: LoadControl = DefaultLoadControl(), renderersFactory: RenderersFactory ` = DefaultRenderersFactory( context.applicationContext ).setExtensionRendererMode(EXTENSION_RENDERER_MODE_OFF))` Functions Name Summary acquirePlayer fun acquirePlayer(media: Media ): Player cleanUp fun cleanUp(): Unit releasePlayer fun releasePlayer(media: Media , player: Player ): Unit","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-exo-player-provider/#defaultexoplayerprovider","text":"class DefaultExoPlayerProvider : ExoPlayerProvider Author eneim (2018/10/27).","title":"DefaultExoPlayerProvider"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-exo-player-provider/#constructors","text":"Name Summary init DefaultExoPlayerProvider(context: Context , bandwidthMeterFactory: BandwidthMeterFactory = DefaultBandwidthMeterFactory(), drmSessionManagerProvider: DrmSessionManagerProvider ? = null, loadControl: LoadControl = DefaultLoadControl(), renderersFactory: RenderersFactory ` = DefaultRenderersFactory( context.applicationContext ).setExtensionRendererMode(EXTENSION_RENDERER_MODE_OFF))`","title":"Constructors"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-exo-player-provider/#functions","text":"Name Summary acquirePlayer fun acquirePlayer(media: Media ): Player cleanUp fun cleanUp(): Unit releasePlayer fun releasePlayer(media: Media , player: Player ): Unit","title":"Functions"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-exo-player-provider/-init-/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DefaultExoPlayerProvider / init init DefaultExoPlayerProvider(context: Context , bandwidthMeterFactory: BandwidthMeterFactory = DefaultBandwidthMeterFactory(), drmSessionManagerProvider: DrmSessionManagerProvider ? = null, loadControl: LoadControl = DefaultLoadControl(), renderersFactory: RenderersFactory = DefaultRenderersFactory( context.applicationContext ).setExtensionRendererMode(EXTENSION_RENDERER_MODE_OFF)) Author eneim (2018/10/27).","title":" init "},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-exo-player-provider/-init-/#init","text":"DefaultExoPlayerProvider(context: Context , bandwidthMeterFactory: BandwidthMeterFactory = DefaultBandwidthMeterFactory(), drmSessionManagerProvider: DrmSessionManagerProvider ? = null, loadControl: LoadControl = DefaultLoadControl(), renderersFactory: RenderersFactory = DefaultRenderersFactory( context.applicationContext ).setExtensionRendererMode(EXTENSION_RENDERER_MODE_OFF)) Author eneim (2018/10/27).","title":"&lt;init&gt;"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-exo-player-provider/acquire-player/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DefaultExoPlayerProvider / acquirePlayer acquirePlayer fun acquirePlayer(media: Media ): Player","title":"Acquire player"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-exo-player-provider/acquire-player/#acquireplayer","text":"fun acquirePlayer(media: Media ): Player","title":"acquirePlayer"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-exo-player-provider/clean-up/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DefaultExoPlayerProvider / cleanUp cleanUp fun cleanUp(): Unit","title":"Clean up"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-exo-player-provider/clean-up/#cleanup","text":"fun cleanUp(): Unit","title":"cleanUp"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-exo-player-provider/release-player/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DefaultExoPlayerProvider / releasePlayer releasePlayer fun releasePlayer(media: Media , player: Player ): Unit","title":"Release player"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-exo-player-provider/release-player/#releaseplayer","text":"fun releasePlayer(media: Media , player: Player ): Unit","title":"releasePlayer"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-media-source-factory-provider/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DefaultMediaSourceFactoryProvider DefaultMediaSourceFactoryProvider class DefaultMediaSourceFactoryProvider : MediaSourceFactoryProvider Author eneim (2018/10/27). Constructors Name Summary init DefaultMediaSourceFactoryProvider(upstreamFactory: Factory , mediaCache: Cache ? = null) DefaultMediaSourceFactoryProvider(upstreamFactory: Factory , offlineSourceHelper: OfflineSourceHelper ) Functions Name Summary provideMediaSourceFactory fun provideMediaSourceFactory(media: Media ): MediaSourceFactory","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-media-source-factory-provider/#defaultmediasourcefactoryprovider","text":"class DefaultMediaSourceFactoryProvider : MediaSourceFactoryProvider Author eneim (2018/10/27).","title":"DefaultMediaSourceFactoryProvider"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-media-source-factory-provider/#constructors","text":"Name Summary init DefaultMediaSourceFactoryProvider(upstreamFactory: Factory , mediaCache: Cache ? = null) DefaultMediaSourceFactoryProvider(upstreamFactory: Factory , offlineSourceHelper: OfflineSourceHelper )","title":"Constructors"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-media-source-factory-provider/#functions","text":"Name Summary provideMediaSourceFactory fun provideMediaSourceFactory(media: Media ): MediaSourceFactory","title":"Functions"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-media-source-factory-provider/-init-/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DefaultMediaSourceFactoryProvider / init init DefaultMediaSourceFactoryProvider(upstreamFactory: Factory , mediaCache: Cache ? = null) DefaultMediaSourceFactoryProvider(upstreamFactory: Factory , offlineSourceHelper: OfflineSourceHelper )","title":" init "},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-media-source-factory-provider/-init-/#init","text":"DefaultMediaSourceFactoryProvider(upstreamFactory: Factory , mediaCache: Cache ? = null) DefaultMediaSourceFactoryProvider(upstreamFactory: Factory , offlineSourceHelper: OfflineSourceHelper )","title":"&lt;init&gt;"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-media-source-factory-provider/provide-media-source-factory/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DefaultMediaSourceFactoryProvider / provideMediaSourceFactory provideMediaSourceFactory fun provideMediaSourceFactory(media: Media ): MediaSourceFactory","title":"Provide media source factory"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-default-media-source-factory-provider/provide-media-source-factory/#providemediasourcefactory","text":"fun provideMediaSourceFactory(media: Media ): MediaSourceFactory","title":"provideMediaSourceFactory"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-drm-session-manager-provider/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DrmSessionManagerProvider DrmSessionManagerProvider interface DrmSessionManagerProvider Author eneim (2018/10/27). Functions Name Summary cleanUp abstract fun cleanUp(): Unit provideDrmSessionManager abstract fun provideDrmSessionManager(media: Media ): DrmSessionManager FrameworkMediaCrypto ? releaseDrmSessionManager abstract fun releaseDrmSessionManager(sessionManager: DrmSessionManager * ?): Unit Inheritors Name Summary DefaultDrmSessionManagerProvider class DefaultDrmSessionManagerProvider : DrmSessionManagerProvider","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-drm-session-manager-provider/#drmsessionmanagerprovider","text":"interface DrmSessionManagerProvider Author eneim (2018/10/27).","title":"DrmSessionManagerProvider"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-drm-session-manager-provider/#functions","text":"Name Summary cleanUp abstract fun cleanUp(): Unit provideDrmSessionManager abstract fun provideDrmSessionManager(media: Media ): DrmSessionManager FrameworkMediaCrypto ? releaseDrmSessionManager abstract fun releaseDrmSessionManager(sessionManager: DrmSessionManager * ?): Unit","title":"Functions"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-drm-session-manager-provider/#inheritors","text":"Name Summary DefaultDrmSessionManagerProvider class DefaultDrmSessionManagerProvider : DrmSessionManagerProvider","title":"Inheritors"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-drm-session-manager-provider/clean-up/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DrmSessionManagerProvider / cleanUp cleanUp abstract fun cleanUp(): Unit","title":"Clean up"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-drm-session-manager-provider/clean-up/#cleanup","text":"abstract fun cleanUp(): Unit","title":"cleanUp"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-drm-session-manager-provider/provide-drm-session-manager/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DrmSessionManagerProvider / provideDrmSessionManager provideDrmSessionManager abstract fun provideDrmSessionManager(media: Media ): DrmSessionManager FrameworkMediaCrypto ?","title":"Provide drm session manager"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-drm-session-manager-provider/provide-drm-session-manager/#providedrmsessionmanager","text":"abstract fun provideDrmSessionManager(media: Media ): DrmSessionManager FrameworkMediaCrypto ?","title":"provideDrmSessionManager"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-drm-session-manager-provider/release-drm-session-manager/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / DrmSessionManagerProvider / releaseDrmSessionManager releaseDrmSessionManager abstract fun releaseDrmSessionManager(sessionManager: DrmSessionManager * ?): Unit","title":"Release drm session manager"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-drm-session-manager-provider/release-drm-session-manager/#releasedrmsessionmanager","text":"abstract fun releaseDrmSessionManager(sessionManager: DrmSessionManager * ?): Unit","title":"releaseDrmSessionManager"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-exo-player-provider/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / ExoPlayerProvider ExoPlayerProvider interface ExoPlayerProvider Author eneim (2018/10/27). A Pool to store unused Player instance. As initializing a Player is relatively expensive, we try to cache them for reuse. Functions Name Summary acquirePlayer abstract fun acquirePlayer(media: Media ): Player cleanUp abstract fun cleanUp(): Unit releasePlayer abstract fun releasePlayer(media: Media , player: Player ): Unit Inheritors Name Summary DefaultExoPlayerProvider class DefaultExoPlayerProvider : ExoPlayerProvider","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-exo-player-provider/#exoplayerprovider","text":"interface ExoPlayerProvider Author eneim (2018/10/27). A Pool to store unused Player instance. As initializing a Player is relatively expensive, we try to cache them for reuse.","title":"ExoPlayerProvider"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-exo-player-provider/#functions","text":"Name Summary acquirePlayer abstract fun acquirePlayer(media: Media ): Player cleanUp abstract fun cleanUp(): Unit releasePlayer abstract fun releasePlayer(media: Media , player: Player ): Unit","title":"Functions"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-exo-player-provider/#inheritors","text":"Name Summary DefaultExoPlayerProvider class DefaultExoPlayerProvider : ExoPlayerProvider","title":"Inheritors"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-exo-player-provider/acquire-player/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / ExoPlayerProvider / acquirePlayer acquirePlayer abstract fun acquirePlayer(media: Media ): Player","title":"Acquire player"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-exo-player-provider/acquire-player/#acquireplayer","text":"abstract fun acquirePlayer(media: Media ): Player","title":"acquirePlayer"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-exo-player-provider/clean-up/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / ExoPlayerProvider / cleanUp cleanUp abstract fun cleanUp(): Unit","title":"Clean up"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-exo-player-provider/clean-up/#cleanup","text":"abstract fun cleanUp(): Unit","title":"cleanUp"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-exo-player-provider/release-player/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / ExoPlayerProvider / releasePlayer releasePlayer abstract fun releasePlayer(media: Media , player: Player ): Unit","title":"Release player"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-exo-player-provider/release-player/#releaseplayer","text":"abstract fun releasePlayer(media: Media , player: Player ): Unit","title":"releasePlayer"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / KohiiExoPlayer KohiiExoPlayer open class KohiiExoPlayer : SimpleExoPlayer , VolumeInfoController Extend the SimpleExoPlayer to have custom configuration. Author eneim (2018/06/25). Constructors Name Summary init Extend the SimpleExoPlayer to have custom configuration. KohiiExoPlayer(context: Context , renderersFactory: RenderersFactory ` = DefaultRenderersFactory( context.applicationContext ).setExtensionRendererMode(DefaultRenderersFactory.EXTENSION_RENDERER_MODE_OFF), trackSelector: [ DefaultTrackSelector ](https://exoplayer.dev/doc/reference/com/google/android/exoplayer2/trackselection/DefaultTrackSelector.html) = DefaultTrackSelector(), loadControl: [ LoadControl ](https://exoplayer.dev/doc/reference/com/google/android/exoplayer2/LoadControl.html) = DefaultLoadControl(), bandwidthMeter: [ BandwidthMeter ](https://exoplayer.dev/doc/reference/com/google/android/exoplayer2/upstream/BandwidthMeter.html) = DefaultBandwidthMeter.Builder(context).build(), drmSessionManager: [ DrmSessionManager ](https://exoplayer.dev/doc/reference/com/google/android/exoplayer2/drm/DrmSessionManager.html) [ FrameworkMediaCrypto ](https://exoplayer.dev/doc/reference/com/google/android/exoplayer2/drm/FrameworkMediaCrypto.html) ? = null, looper: [ Looper ](https://developer.android.com/reference/android/os/Looper.html) = Util.getLooper())` Properties Name Summary trackSelector val trackSelector: DefaultTrackSelector volumeInfo open val volumeInfo: VolumeInfo Functions Name Summary addVolumeChangedListener open fun addVolumeChangedListener(listener: VolumeChangedListener ): Unit removeVolumeChangedListener open fun removeVolumeChangedListener(listener: VolumeChangedListener ?): Unit setVolume open fun setVolume(audioVolume: Float ): Unit setVolumeInfo open fun setVolumeInfo(volumeInfo: VolumeInfo ): Boolean","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/#kohiiexoplayer","text":"open class KohiiExoPlayer : SimpleExoPlayer , VolumeInfoController Extend the SimpleExoPlayer to have custom configuration. Author eneim (2018/06/25).","title":"KohiiExoPlayer"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/#constructors","text":"Name Summary init Extend the SimpleExoPlayer to have custom configuration. KohiiExoPlayer(context: Context , renderersFactory: RenderersFactory ` = DefaultRenderersFactory( context.applicationContext ).setExtensionRendererMode(DefaultRenderersFactory.EXTENSION_RENDERER_MODE_OFF), trackSelector: [ DefaultTrackSelector ](https://exoplayer.dev/doc/reference/com/google/android/exoplayer2/trackselection/DefaultTrackSelector.html) = DefaultTrackSelector(), loadControl: [ LoadControl ](https://exoplayer.dev/doc/reference/com/google/android/exoplayer2/LoadControl.html) = DefaultLoadControl(), bandwidthMeter: [ BandwidthMeter ](https://exoplayer.dev/doc/reference/com/google/android/exoplayer2/upstream/BandwidthMeter.html) = DefaultBandwidthMeter.Builder(context).build(), drmSessionManager: [ DrmSessionManager ](https://exoplayer.dev/doc/reference/com/google/android/exoplayer2/drm/DrmSessionManager.html) [ FrameworkMediaCrypto ](https://exoplayer.dev/doc/reference/com/google/android/exoplayer2/drm/FrameworkMediaCrypto.html) ? = null, looper: [ Looper ](https://developer.android.com/reference/android/os/Looper.html) = Util.getLooper())`","title":"Constructors"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/#properties","text":"Name Summary trackSelector val trackSelector: DefaultTrackSelector volumeInfo open val volumeInfo: VolumeInfo","title":"Properties"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/#functions","text":"Name Summary addVolumeChangedListener open fun addVolumeChangedListener(listener: VolumeChangedListener ): Unit removeVolumeChangedListener open fun removeVolumeChangedListener(listener: VolumeChangedListener ?): Unit setVolume open fun setVolume(audioVolume: Float ): Unit setVolumeInfo open fun setVolumeInfo(volumeInfo: VolumeInfo ): Boolean","title":"Functions"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/-init-/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / KohiiExoPlayer / init init KohiiExoPlayer(context: Context , renderersFactory: RenderersFactory = DefaultRenderersFactory( context.applicationContext ).setExtensionRendererMode(DefaultRenderersFactory.EXTENSION_RENDERER_MODE_OFF), trackSelector: DefaultTrackSelector = DefaultTrackSelector(), loadControl: LoadControl = DefaultLoadControl(), bandwidthMeter: BandwidthMeter = DefaultBandwidthMeter.Builder(context).build(), drmSessionManager: DrmSessionManager FrameworkMediaCrypto ? = null, looper: Looper = Util.getLooper()) Extend the SimpleExoPlayer to have custom configuration. Author eneim (2018/06/25).","title":" init "},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/-init-/#init","text":"KohiiExoPlayer(context: Context , renderersFactory: RenderersFactory = DefaultRenderersFactory( context.applicationContext ).setExtensionRendererMode(DefaultRenderersFactory.EXTENSION_RENDERER_MODE_OFF), trackSelector: DefaultTrackSelector = DefaultTrackSelector(), loadControl: LoadControl = DefaultLoadControl(), bandwidthMeter: BandwidthMeter = DefaultBandwidthMeter.Builder(context).build(), drmSessionManager: DrmSessionManager FrameworkMediaCrypto ? = null, looper: Looper = Util.getLooper()) Extend the SimpleExoPlayer to have custom configuration. Author eneim (2018/06/25).","title":"&lt;init&gt;"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/add-volume-changed-listener/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / KohiiExoPlayer / addVolumeChangedListener addVolumeChangedListener open fun addVolumeChangedListener(listener: VolumeChangedListener ): Unit","title":"Add volume changed listener"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/add-volume-changed-listener/#addvolumechangedlistener","text":"open fun addVolumeChangedListener(listener: VolumeChangedListener ): Unit","title":"addVolumeChangedListener"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/remove-volume-changed-listener/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / KohiiExoPlayer / removeVolumeChangedListener removeVolumeChangedListener open fun removeVolumeChangedListener(listener: VolumeChangedListener ?): Unit","title":"Remove volume changed listener"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/remove-volume-changed-listener/#removevolumechangedlistener","text":"open fun removeVolumeChangedListener(listener: VolumeChangedListener ?): Unit","title":"removeVolumeChangedListener"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/set-volume-info/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / KohiiExoPlayer / setVolumeInfo setVolumeInfo open fun setVolumeInfo(volumeInfo: VolumeInfo ): Boolean","title":"Set volume info"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/set-volume-info/#setvolumeinfo","text":"open fun setVolumeInfo(volumeInfo: VolumeInfo ): Boolean","title":"setVolumeInfo"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/set-volume/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / KohiiExoPlayer / setVolume setVolume @CallSuper open fun setVolume(audioVolume: Float ): Unit","title":"Set volume"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/set-volume/#setvolume","text":"@CallSuper open fun setVolume(audioVolume: Float ): Unit","title":"setVolume"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/track-selector/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / KohiiExoPlayer / trackSelector trackSelector val trackSelector: DefaultTrackSelector","title":"Track selector"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/track-selector/#trackselector","text":"val trackSelector: DefaultTrackSelector","title":"trackSelector"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/volume-info/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / KohiiExoPlayer / volumeInfo volumeInfo open val volumeInfo: VolumeInfo","title":"Volume info"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-kohii-exo-player/volume-info/#volumeinfo","text":"open val volumeInfo: VolumeInfo","title":"volumeInfo"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-media-source-factory-provider/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / MediaSourceFactoryProvider MediaSourceFactoryProvider interface MediaSourceFactoryProvider Author eneim (2018/10/27). Functions Name Summary provideMediaSourceFactory abstract fun provideMediaSourceFactory(media: Media ): MediaSourceFactory Inheritors Name Summary DefaultMediaSourceFactoryProvider class DefaultMediaSourceFactoryProvider : MediaSourceFactoryProvider","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-media-source-factory-provider/#mediasourcefactoryprovider","text":"interface MediaSourceFactoryProvider Author eneim (2018/10/27).","title":"MediaSourceFactoryProvider"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-media-source-factory-provider/#functions","text":"Name Summary provideMediaSourceFactory abstract fun provideMediaSourceFactory(media: Media ): MediaSourceFactory","title":"Functions"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-media-source-factory-provider/#inheritors","text":"Name Summary DefaultMediaSourceFactoryProvider class DefaultMediaSourceFactoryProvider : MediaSourceFactoryProvider","title":"Inheritors"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-media-source-factory-provider/provide-media-source-factory/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / MediaSourceFactoryProvider / provideMediaSourceFactory provideMediaSourceFactory abstract fun provideMediaSourceFactory(media: Media ): MediaSourceFactory","title":"Provide media source factory"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-media-source-factory-provider/provide-media-source-factory/#providemediasourcefactory","text":"abstract fun provideMediaSourceFactory(media: Media ): MediaSourceFactory","title":"provideMediaSourceFactory"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-offline-source-helper/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / OfflineSourceHelper OfflineSourceHelper interface OfflineSourceHelper Properties Name Summary dataSourceFactory abstract val dataSourceFactory: Factory downloadCache abstract val downloadCache: Cache Functions Name Summary getDownloadRequest abstract fun getDownloadRequest(uri: Uri ): DownloadRequest getMediaSourceFactory open fun getMediaSourceFactory(uri: Uri ): MediaSourceFactory purge abstract fun purge(vararg uris: Uri ): Unit","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-offline-source-helper/#offlinesourcehelper","text":"interface OfflineSourceHelper","title":"OfflineSourceHelper"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-offline-source-helper/#properties","text":"Name Summary dataSourceFactory abstract val dataSourceFactory: Factory downloadCache abstract val downloadCache: Cache","title":"Properties"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-offline-source-helper/#functions","text":"Name Summary getDownloadRequest abstract fun getDownloadRequest(uri: Uri ): DownloadRequest getMediaSourceFactory open fun getMediaSourceFactory(uri: Uri ): MediaSourceFactory purge abstract fun purge(vararg uris: Uri ): Unit","title":"Functions"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-offline-source-helper/data-source-factory/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / OfflineSourceHelper / dataSourceFactory dataSourceFactory abstract val dataSourceFactory: Factory","title":"Data source factory"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-offline-source-helper/data-source-factory/#datasourcefactory","text":"abstract val dataSourceFactory: Factory","title":"dataSourceFactory"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-offline-source-helper/download-cache/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / OfflineSourceHelper / downloadCache downloadCache abstract val downloadCache: Cache","title":"Download cache"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-offline-source-helper/download-cache/#downloadcache","text":"abstract val downloadCache: Cache","title":"downloadCache"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-offline-source-helper/get-download-request/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / OfflineSourceHelper / getDownloadRequest getDownloadRequest abstract fun getDownloadRequest(uri: Uri ): DownloadRequest","title":"Get download request"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-offline-source-helper/get-download-request/#getdownloadrequest","text":"abstract fun getDownloadRequest(uri: Uri ): DownloadRequest","title":"getDownloadRequest"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-offline-source-helper/get-media-source-factory/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / OfflineSourceHelper / getMediaSourceFactory getMediaSourceFactory open fun getMediaSourceFactory(uri: Uri ): MediaSourceFactory","title":"Get media source factory"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-offline-source-helper/get-media-source-factory/#getmediasourcefactory","text":"open fun getMediaSourceFactory(uri: Uri ): MediaSourceFactory","title":"getMediaSourceFactory"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-offline-source-helper/purge/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / OfflineSourceHelper / purge purge abstract fun purge(vararg uris: Uri ): Unit","title":"Purge"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-offline-source-helper/purge/#purge","text":"abstract fun purge(vararg uris: Uri ): Unit","title":"purge"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-bridge-creator/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / PlayerViewBridgeCreator PlayerViewBridgeCreator class PlayerViewBridgeCreator : BridgeCreator PlayerView Constructors Name Summary init PlayerViewBridgeCreator(playerProvider: ExoPlayerProvider , mediaSourceFactoryProvider: MediaSourceFactoryProvider ) Functions Name Summary cleanUp fun cleanUp(): Unit createBridge fun createBridge(context: Context , media: Media ): Bridge PlayerView","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-bridge-creator/#playerviewbridgecreator","text":"class PlayerViewBridgeCreator : BridgeCreator PlayerView","title":"PlayerViewBridgeCreator"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-bridge-creator/#constructors","text":"Name Summary init PlayerViewBridgeCreator(playerProvider: ExoPlayerProvider , mediaSourceFactoryProvider: MediaSourceFactoryProvider )","title":"Constructors"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-bridge-creator/#functions","text":"Name Summary cleanUp fun cleanUp(): Unit createBridge fun createBridge(context: Context , media: Media ): Bridge PlayerView","title":"Functions"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-bridge-creator/-init-/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / PlayerViewBridgeCreator / init init PlayerViewBridgeCreator(playerProvider: ExoPlayerProvider , mediaSourceFactoryProvider: MediaSourceFactoryProvider )","title":" init "},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-bridge-creator/-init-/#init","text":"PlayerViewBridgeCreator(playerProvider: ExoPlayerProvider , mediaSourceFactoryProvider: MediaSourceFactoryProvider )","title":"&lt;init&gt;"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-bridge-creator/clean-up/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / PlayerViewBridgeCreator / cleanUp cleanUp fun cleanUp(): Unit","title":"Clean up"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-bridge-creator/clean-up/#cleanup","text":"fun cleanUp(): Unit","title":"cleanUp"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-bridge-creator/create-bridge/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / PlayerViewBridgeCreator / createBridge createBridge fun createBridge(context: Context , media: Media ): Bridge PlayerView","title":"Create bridge"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-bridge-creator/create-bridge/#createbridge","text":"fun createBridge(context: Context , media: Media ): Bridge PlayerView","title":"createBridge"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / PlayerViewPlayable PlayerViewPlayable class PlayerViewPlayable : AbstractPlayable PlayerView Constructors Name Summary init PlayerViewPlayable(master: Master , media: Media , config: Config , bridge: Bridge PlayerView ) Properties Name Summary renderer var renderer: Any ? Functions Name Summary considerReleaseRenderer fun considerReleaseRenderer(playback: Playback ): Unit considerRequestRenderer fun considerRequestRenderer(playback: Playback ): Unit","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable/#playerviewplayable","text":"class PlayerViewPlayable : AbstractPlayable PlayerView","title":"PlayerViewPlayable"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable/#constructors","text":"Name Summary init PlayerViewPlayable(master: Master , media: Media , config: Config , bridge: Bridge PlayerView )","title":"Constructors"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable/#properties","text":"Name Summary renderer var renderer: Any ?","title":"Properties"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable/#functions","text":"Name Summary considerReleaseRenderer fun considerReleaseRenderer(playback: Playback ): Unit considerRequestRenderer fun considerRequestRenderer(playback: Playback ): Unit","title":"Functions"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable/-init-/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / PlayerViewPlayable / init init PlayerViewPlayable(master: Master , media: Media , config: Config , bridge: Bridge PlayerView )","title":" init "},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable/-init-/#init","text":"PlayerViewPlayable(master: Master , media: Media , config: Config , bridge: Bridge PlayerView )","title":"&lt;init&gt;"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable/consider-release-renderer/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / PlayerViewPlayable / considerReleaseRenderer considerReleaseRenderer fun considerReleaseRenderer(playback: Playback ): Unit","title":"Consider release renderer"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable/consider-release-renderer/#considerreleaserenderer","text":"fun considerReleaseRenderer(playback: Playback ): Unit","title":"considerReleaseRenderer"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable/consider-request-renderer/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / PlayerViewPlayable / considerRequestRenderer considerRequestRenderer fun considerRequestRenderer(playback: Playback ): Unit","title":"Consider request renderer"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable/consider-request-renderer/#considerrequestrenderer","text":"fun considerRequestRenderer(playback: Playback ): Unit","title":"considerRequestRenderer"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable/renderer/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / PlayerViewPlayable / renderer renderer var renderer: Any ?","title":"Renderer"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable/renderer/#renderer","text":"var renderer: Any ?","title":"renderer"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable-creator/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / PlayerViewPlayableCreator PlayerViewPlayableCreator class PlayerViewPlayableCreator : PlayableCreator PlayerView Constructors Name Summary init PlayerViewPlayableCreator(master: Master ) Functions Name Summary cleanUp fun cleanUp(): Unit createPlayable fun createPlayable(config: Config , media: Media ): Playable","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable-creator/#playerviewplayablecreator","text":"class PlayerViewPlayableCreator : PlayableCreator PlayerView","title":"PlayerViewPlayableCreator"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable-creator/#constructors","text":"Name Summary init PlayerViewPlayableCreator(master: Master )","title":"Constructors"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable-creator/#functions","text":"Name Summary cleanUp fun cleanUp(): Unit createPlayable fun createPlayable(config: Config , media: Media ): Playable","title":"Functions"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable-creator/-init-/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / PlayerViewPlayableCreator / init init PlayerViewPlayableCreator(master: Master )","title":" init "},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable-creator/-init-/#init","text":"PlayerViewPlayableCreator(master: Master )","title":"&lt;init&gt;"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable-creator/clean-up/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / PlayerViewPlayableCreator / cleanUp cleanUp fun cleanUp(): Unit","title":"Clean up"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable-creator/clean-up/#cleanup","text":"fun cleanUp(): Unit","title":"cleanUp"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable-creator/create-playable/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / PlayerViewPlayableCreator / createPlayable createPlayable fun createPlayable(config: Config , media: Media ): Playable","title":"Create playable"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/-player-view-playable-creator/create-playable/#createplayable","text":"fun createPlayable(config: Config , media: Media ): Playable","title":"createPlayable"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/com.google.android.exoplayer2.-player/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / com.google.android.exoplayer2.Player Extensions for com.google.android.exoplayer2.Player Name Summary addEventListener fun Player .addEventListener(listener: PlayerEventListener ): Unit getVolumeInfo fun Player .getVolumeInfo(): VolumeInfo removeEventListener fun Player .removeEventListener(listener: PlayerEventListener ?): Unit setVolumeInfo fun Player .setVolumeInfo(volume: VolumeInfo ): Unit","title":"Home"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/com.google.android.exoplayer2.-player/#extensions-for-comgoogleandroidexoplayer2player","text":"Name Summary addEventListener fun Player .addEventListener(listener: PlayerEventListener ): Unit getVolumeInfo fun Player .getVolumeInfo(): VolumeInfo removeEventListener fun Player .removeEventListener(listener: PlayerEventListener ?): Unit setVolumeInfo fun Player .setVolumeInfo(volume: VolumeInfo ): Unit","title":"Extensions for com.google.android.exoplayer2.Player"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/com.google.android.exoplayer2.-player/add-event-listener/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / com.google.android.exoplayer2.Player / addEventListener addEventListener fun Player .addEventListener(listener: PlayerEventListener ): Unit","title":"Add event listener"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/com.google.android.exoplayer2.-player/add-event-listener/#addeventlistener","text":"fun Player .addEventListener(listener: PlayerEventListener ): Unit","title":"addEventListener"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/com.google.android.exoplayer2.-player/get-volume-info/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / com.google.android.exoplayer2.Player / getVolumeInfo getVolumeInfo fun Player .getVolumeInfo(): VolumeInfo","title":"Get volume info"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/com.google.android.exoplayer2.-player/get-volume-info/#getvolumeinfo","text":"fun Player .getVolumeInfo(): VolumeInfo","title":"getVolumeInfo"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/com.google.android.exoplayer2.-player/remove-event-listener/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / com.google.android.exoplayer2.Player / removeEventListener removeEventListener fun Player .removeEventListener(listener: PlayerEventListener ?): Unit","title":"Remove event listener"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/com.google.android.exoplayer2.-player/remove-event-listener/#removeeventlistener","text":"fun Player .removeEventListener(listener: PlayerEventListener ?): Unit","title":"removeEventListener"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/com.google.android.exoplayer2.-player/set-volume-info/","text":"kohii-exoplayer / kohii.v1.exoplayer.internal / com.google.android.exoplayer2.Player / setVolumeInfo setVolumeInfo fun Player .setVolumeInfo(volume: VolumeInfo ): Unit","title":"Set volume info"},{"location":"api/kohii-exoplayer/kohii.v1.exoplayer.internal/com.google.android.exoplayer2.-player/set-volume-info/#setvolumeinfo","text":"fun Player .setVolumeInfo(volume: VolumeInfo ): Unit","title":"setVolumeInfo"},{"location":"design/DESIGN/","text":"Roadmap [x] Basic binding [x] Simple syntax to start binding a Video to a ViewGroup (PlayerView or a ViewGroup that will contain a PlayerView), using Url, Uri or specific Media object. [x] Automatically update the playbacks in RecyclerView, NestedScrollView or general ViewGroup. [x] Automatically update the playbacks in ViewPager, ViewPager2. [x] Callbacks [x] Callbacks for Kohii components status. [x] Callbacks for playback status. [x] (Nice to have) Opinionated callbacks that tell client when it should show/hide thumbnail . beforePlay() and afterPause() [x] Handle configuration change [x] Retain playback on configuration changes. [ ] Manual control over Playbacks [ ] Allow client to have full control over Playbacks: client can start/pause any Playback without the control of system/Kohii. [ ] Allow client to have half-manual control over Playbacks: client can start/pause any Playback on demand, but Kohii can also start/pause the Playback regarding some conditions. [x] Global control: simple method to pause/resume everything. The resume behavior follow each Playback's config. [x] Flexible VolumeInfo update mechanism: allow to change VolumeInfo for individual Video or all Videos in the same parent. [ ] ExoPlayer related implementations [x] First-class support for playback using ExoPlayer/PlayerView. [x] Cached playback using ExoPlayer cache mechanism. [ ] Offline/downloaded playback using ExoPlayer download mechanism. [ ] Extensible architecture [x] Base abstraction. [x] Default implementation for ExoPlayer. [x] (Nice to have) Experiment implementation for YouTube Videos using YouTube Player API. [x] (Nice to have) Experiment implementation for YouTube Videos using OSS playback library. [ ] (Nice to have) Experiment implementation for AndroidX Media 2. [ ] (Nice to have) Experiment implementation for Platform MediaPlayer/VideoView. [ ] Others [ ] Flag/Callback to enable/disable automatic playback. Useful to trigger the feature on demand (eg: due to Network quality changes). [x] MemoryMode setting, allows client to control how Videos will be kept when it is not playing. For example in HIGH MemoryMode, many Videos can keep resource at the same time, so the playback will be really smooth, but in LOW MemoryMode, any paused Video will be released to save resource. [ ] Ads support with Mopub, IMA. [x] Demos [x] Basic RecyclerView sample, no nesting. [x] Basic NestedScrollView sample, no nesting. [x] RecyclerView with NestedScrollView nested in a ViewHolder. [x] RecyclerView with RecyclerView nested in a ViewHolder. [x] NestedScrollView with a RecyclerView nested inside. [x] RecyclerView with user interaction (eg: Click). [x] NestedScrollView with user interaction (eg: Click). [x] ViewPager where pages are PlayerViews or FrameLayouts. ~~[ ] ViewPager where pages are RecyclerViews with Videos.~~ (It is recommended to use Fragment with RecyclerView inside ViewPager instead) [x] ViewPager where pages are Fragments contain PlayerViews or FrameLayout. [x] ViewPager where pages are Fragments contain RecyclerView with Videos. [x] ViewPager2 where pages are PlayerViews or FrameLayouts. ~~[ ] ViewPager2 where pages are RecyclerViews with Videos.~~ (It is recommended to use Fragment with RecyclerView inside ViewPager instead) [x] ViewPager2 where pages are Fragments contain PlayerViews or FrameLayout. [x] ViewPager2 where pages are Fragments contain RecyclerView with Videos. [x] Multiple Fragments where each contains RecyclerView or ViewPager with Videos. [x] Sample to mimic Facebook. [x] YouTube sample using Android Player SDK (the Official SDK). [x] YouTube sample using PierfrancescoSoffritti/android-youtube-player. [ ] Background Playback support [ ] Allow configuration to enable/disable background Playback. The config would allow to setup: flag to turn the feature on/off, necessary information for the foreground notification (eg Bitmap for the Notification large image). [ ] Allow the Playback to keep playing after closing the App on-demand. [ ] Allow the Playback to keep playing when: the Playback is deselected from the Manager, but no newer Playback is selected. [ ] Others [ ] Store PlaybackInfo to pages + local DB to optimize/reduce in-memory cache. Resource creation Binding Playable to Container (ViewGroup) The actual binding only happens once the Container is attached to Window. The result will be a Playback that has reference to the Container. After being bound, the Container might be detached/re-attached without the need to remove the Playback. States of a Playback: 'ADDED': the binding is established. 'DETACHED': the Container is detached from Window. 'ATTACHED, INACTIVE': the Container is attached to Window, but its visible area is 0. 'ATTACHED, ACTIVE': the Container is attached to Window, but its visible area is = 0. 'REMOVED': the binding is destroyed. Lifecycle of a Playback: a Playback lives through the 'ADDED' state and 'REMOVED' state. A 'REMOVED' Playback must also be 'INACTIVE' and 'DETACHED'. Lifecycle of a Playback relies on its Container (ViewGroup)'s lifecycle, the Host that contains that Container and the Manager that contains the Host. Binding scenarios and the behavior: Bind a Playable to a fresh Container: Establish new binding (new Playback will be created and added to the Manager). Any old Playback referenced by Playable must be removed. Bind a Playable to a Container that was bound to different Playable: Establish new binding (new Playback will be created and added to the Manager). Any old Playback referenced by Playable must be removed. Any Playback reference to the same Container must be removed. Bind a Playable to a Container that was bond to the same Playable: no action required. Manager lifecycle and its affects: A Manager lifecycle is bound to its 'origin's lifecycle'. The origin can be ComponentActivity or Fragment. ON_STOP event: all Playbacks must be transferred to up-to 'INACTIVE' state. ON_DESTROY event: all Playbacks must be transferred to up-to 'REMOVED' state. ON_START event: refresh the status of Playbacks to its latest state.","title":"DESIGN"},{"location":"design/DESIGN/#roadmap","text":"[x] Basic binding [x] Simple syntax to start binding a Video to a ViewGroup (PlayerView or a ViewGroup that will contain a PlayerView), using Url, Uri or specific Media object. [x] Automatically update the playbacks in RecyclerView, NestedScrollView or general ViewGroup. [x] Automatically update the playbacks in ViewPager, ViewPager2. [x] Callbacks [x] Callbacks for Kohii components status. [x] Callbacks for playback status. [x] (Nice to have) Opinionated callbacks that tell client when it should show/hide thumbnail . beforePlay() and afterPause() [x] Handle configuration change [x] Retain playback on configuration changes. [ ] Manual control over Playbacks [ ] Allow client to have full control over Playbacks: client can start/pause any Playback without the control of system/Kohii. [ ] Allow client to have half-manual control over Playbacks: client can start/pause any Playback on demand, but Kohii can also start/pause the Playback regarding some conditions. [x] Global control: simple method to pause/resume everything. The resume behavior follow each Playback's config. [x] Flexible VolumeInfo update mechanism: allow to change VolumeInfo for individual Video or all Videos in the same parent. [ ] ExoPlayer related implementations [x] First-class support for playback using ExoPlayer/PlayerView. [x] Cached playback using ExoPlayer cache mechanism. [ ] Offline/downloaded playback using ExoPlayer download mechanism. [ ] Extensible architecture [x] Base abstraction. [x] Default implementation for ExoPlayer. [x] (Nice to have) Experiment implementation for YouTube Videos using YouTube Player API. [x] (Nice to have) Experiment implementation for YouTube Videos using OSS playback library. [ ] (Nice to have) Experiment implementation for AndroidX Media 2. [ ] (Nice to have) Experiment implementation for Platform MediaPlayer/VideoView. [ ] Others [ ] Flag/Callback to enable/disable automatic playback. Useful to trigger the feature on demand (eg: due to Network quality changes). [x] MemoryMode setting, allows client to control how Videos will be kept when it is not playing. For example in HIGH MemoryMode, many Videos can keep resource at the same time, so the playback will be really smooth, but in LOW MemoryMode, any paused Video will be released to save resource. [ ] Ads support with Mopub, IMA. [x] Demos [x] Basic RecyclerView sample, no nesting. [x] Basic NestedScrollView sample, no nesting. [x] RecyclerView with NestedScrollView nested in a ViewHolder. [x] RecyclerView with RecyclerView nested in a ViewHolder. [x] NestedScrollView with a RecyclerView nested inside. [x] RecyclerView with user interaction (eg: Click). [x] NestedScrollView with user interaction (eg: Click). [x] ViewPager where pages are PlayerViews or FrameLayouts. ~~[ ] ViewPager where pages are RecyclerViews with Videos.~~ (It is recommended to use Fragment with RecyclerView inside ViewPager instead) [x] ViewPager where pages are Fragments contain PlayerViews or FrameLayout. [x] ViewPager where pages are Fragments contain RecyclerView with Videos. [x] ViewPager2 where pages are PlayerViews or FrameLayouts. ~~[ ] ViewPager2 where pages are RecyclerViews with Videos.~~ (It is recommended to use Fragment with RecyclerView inside ViewPager instead) [x] ViewPager2 where pages are Fragments contain PlayerViews or FrameLayout. [x] ViewPager2 where pages are Fragments contain RecyclerView with Videos. [x] Multiple Fragments where each contains RecyclerView or ViewPager with Videos. [x] Sample to mimic Facebook. [x] YouTube sample using Android Player SDK (the Official SDK). [x] YouTube sample using PierfrancescoSoffritti/android-youtube-player. [ ] Background Playback support [ ] Allow configuration to enable/disable background Playback. The config would allow to setup: flag to turn the feature on/off, necessary information for the foreground notification (eg Bitmap for the Notification large image). [ ] Allow the Playback to keep playing after closing the App on-demand. [ ] Allow the Playback to keep playing when: the Playback is deselected from the Manager, but no newer Playback is selected. [ ] Others [ ] Store PlaybackInfo to pages + local DB to optimize/reduce in-memory cache.","title":"Roadmap"},{"location":"design/DESIGN/#resource-creation","text":"","title":"Resource creation"},{"location":"design/DESIGN/#binding-playable-to-container-viewgroup","text":"The actual binding only happens once the Container is attached to Window. The result will be a Playback that has reference to the Container. After being bound, the Container might be detached/re-attached without the need to remove the Playback. States of a Playback: 'ADDED': the binding is established. 'DETACHED': the Container is detached from Window. 'ATTACHED, INACTIVE': the Container is attached to Window, but its visible area is 0. 'ATTACHED, ACTIVE': the Container is attached to Window, but its visible area is = 0. 'REMOVED': the binding is destroyed. Lifecycle of a Playback: a Playback lives through the 'ADDED' state and 'REMOVED' state. A 'REMOVED' Playback must also be 'INACTIVE' and 'DETACHED'. Lifecycle of a Playback relies on its Container (ViewGroup)'s lifecycle, the Host that contains that Container and the Manager that contains the Host. Binding scenarios and the behavior: Bind a Playable to a fresh Container: Establish new binding (new Playback will be created and added to the Manager). Any old Playback referenced by Playable must be removed. Bind a Playable to a Container that was bound to different Playable: Establish new binding (new Playback will be created and added to the Manager). Any old Playback referenced by Playable must be removed. Any Playback reference to the same Container must be removed. Bind a Playable to a Container that was bond to the same Playable: no action required. Manager lifecycle and its affects: A Manager lifecycle is bound to its 'origin's lifecycle'. The origin can be ComponentActivity or Fragment. ON_STOP event: all Playbacks must be transferred to up-to 'INACTIVE' state. ON_DESTROY event: all Playbacks must be transferred to up-to 'REMOVED' state. ON_START event: refresh the status of Playbacks to its latest state.","title":"Binding Playable to Container (ViewGroup)"},{"location":"terms/","text":"This document introduces and explain some core concepts in Kohii . This doc will explain those concepts by taking a Video playback scenario for demonstration. The scenario Thinking that, a Video will be played on a piece of UI, in the shape of a rectangle View, in the middle of the device. The Video file is stored on the Internet and the client use a url to load it. In practice: a PlayerView is playing a Video stored on Cloud. The PlayerView is placed in the center of the phone. The concepts Bridge Playable Output Container Target TargetHost/Host Playback Playback Manager Playback Manager Group","title":"Home"},{"location":"terms/#the-scenario","text":"Thinking that, a Video will be played on a piece of UI, in the shape of a rectangle View, in the middle of the device. The Video file is stored on the Internet and the client use a url to load it. In practice: a PlayerView is playing a Video stored on Cloud. The PlayerView is placed in the center of the phone.","title":"The scenario"},{"location":"terms/#the-concepts","text":"","title":"The concepts"},{"location":"terms/#bridge","text":"","title":"Bridge"},{"location":"terms/#playable","text":"","title":"Playable"},{"location":"terms/#output","text":"","title":"Output"},{"location":"terms/#container","text":"","title":"Container"},{"location":"terms/#target","text":"","title":"Target"},{"location":"terms/#targethosthost","text":"","title":"TargetHost/Host"},{"location":"terms/#playback","text":"","title":"Playback"},{"location":"terms/#playback-manager","text":"","title":"Playback Manager"},{"location":"terms/#playback-manager-group","text":"","title":"Playback Manager Group"},{"location":"usages/","text":"Common usages of Kohii Required: common setup for Kohii Assuming that you are using Kohii in a Fragment MyFragment , having a ViewGroup to contains some Videos. Below steps are to initialize Kohii before going any further. \u25a0 Initialize Kohii instance. It will be global and unique in your application lifecycle. val kohii = Kohii [ this @MyFragment ] \u25a0 Register current Fragment as the PlaybackManager . In Kohii , PlaybackManager helps manage all Videos in a Fragment or Activity. When using with ViewPager whose pages are Fragment s, we need to register both the parent Fragment (who owns the ViewPager ) and child Fragment (who is page of the ViewPager ). // Calling this will return a ``PlaybackManager`` instance val manager = kohii . register ( this @MyFragment ) \u25a0 Register the ViewGroup that contains the Videos inside. It may or may not be the direct parent of the Video View. In Kohii , a View that is used to render a Video playback is called Target and the ViewGroup which is the parent of a Target is called host . To help the ViewGroup watch its Targets, Kohii has the TargetHost to wrap this ViewGroup. Here is how we create a TargetHost by registering the ViewGroup : // This returns a nullable TargetHost instance // The result is null when the View is already registered before, not null otherwise. val host = manager . registerTargetHost ( videoHostViewGroup ) That is enough for a common usage. In practice, your setup will look like below: // Setup **Kohii** from Fragment s onViewCreated or Activity s onCreate method. override fun onViewCreated ( view : View , savedInstanceState : Bundle ? ) { super . onViewCreated ( view , savedInstanceState ) val kohii = Kohii [ this @MyFragment ] val manager = kohii . register ( this @MyFragment ) val host = manager . registerTargetHost ( videoHostViewGroup ) !! // TODO anything else } In basic usage, you do not need to get returned value of the setting above: // Setup **Kohii** from Fragment s onViewCreated or Activity s onCreate method. override fun onViewCreated ( view : View , savedInstanceState : Bundle ? ) { super . onViewCreated ( view , savedInstanceState ) Kohii [ this @MyFragment ]. also { kohii - kohii . register ( this @MyFragment , videoHostViewGroup ) // an overloaded version of register(). } // TODO anything else } Usages 1.0 One video to one existing PlayerView In Kohii , the term binding stands for the act in that a Video resource provided by client being converted to playable resource (eg: a Uri to a MediaSource object), and then being prepared to the Surface to play the Video). It is just as simple concept as videoView.setVideoPath(videoUri) , but more powerful behavior. This is the most common/simple usage of Kohii . Assuming that you have an uri, and a PlayerView to show the Video named playerView , below is how to do it: kohii . setUp ( uri ). bind ( playerView ) Note that, the required steps above must be done first. Or else there will be no TargetHost to watch the PlayerView , and your client will throw exception. With that one line , you will have the following done: The Uri you provided will be wrapped in a MediaItem object, and then be used to create a Playable object. This object has a Bridge object inside it contains all necessary resources for a Video playback: factory to build MediaSource from the Uri , pool to acquire Player instance for the playback, all preparation logic are done automatically and will wait for the trigger to start or pause the Video. A Playback object is created using the Playable above, and is added to the PlaybackManager we created before. This PlaybackManager will find the correct TargetHost for the PlayerView , listen to its behavior (scrolled, attached, detached, etc) to trigger the playback start/pause. From this point onward, you have the Video to be automatically played/paused once user scrolls the list such that the PlayerView is visible more (will play) or less (will pause) than 65% of its area. Also, to ensure the playback is automatic, Kohii will forcefully disable the PlayerView 's PlayerControlView even if you set it before. To have manual playback control enabled, you need some additional configuration which will be discussed in next usage. 1.1 Same as 1.0, with listeners In practice, client wants to observe the status of the Playback. Kohii provides a listener system to fulfill this requirement. A Playback has the following important listeners you can use: Playback.Callback: listen to status of a Playback object: interface Callback { /** Called when the Playback is added to the PlaybackManager */ fun onAdded ( playback : Playback * ) {} /** Called when the Playback becomes active. It is equal to that the target PlayerView is attached to the Window */ fun onActive ( playback : Playback * ) {} /** Called when the Playback becomes inactive. It is equal to that the target PlayerView is detached from the Window */ fun onInActive ( playback : Playback * ) {} /** Called when the Playback is removed from the PlaybackManager */ fun onRemoved ( playback : Playback * ) {} } PlaybackEventListener: listen to play/pause/end event of a playback: interface PlaybackEventListener { /** Called when a Video is rendered on the Surface for the first time */ fun onFirstFrameRendered ( playback : Playback * ) {} /** * Called when buffering status of the playback is changed. * * @param playWhenReady true if the Video will start playing once buffered enough, false otherwise. */ fun onBuffering ( playback : Playback * , playWhenReady : Boolean ) { } // ExoPlayer state: 2 /** Called when the Video starts playing */ fun onPlay ( playback : Playback * ) {} // ExoPlayer state: 3, play flag: true /** Called when the Video is paused */ fun onPause ( playback : Playback * ) {} // ExoPlayer state: 3, play flag: false /** Called when the Video finishes its playback */ fun onEnd ( playback : Playback * ) {} // ExoPlayer state: 4 /** Called when right before Playback s play() method is called. Maybe called multiple times */ fun beforePlay ( playback : Playback * ) {} /** Called when right after Playback s pause() method is called. Maybe called multiple times */ fun afterPause ( playback : Playback * ) {} } Before going into the actual setup, let's take a look at what we have done and what we got. First, the bind method above has the full signature as below: fun CONTAINER : Any bind ( target : CONTAINER , callback : (( Playback OUTPUT ) - Unit )? = null ) Here you can see a callback that is null by default. This callback send back to client the Playback instance that was created by the setup. Using this Playback , client can have further setup, like adding listeners. Second, calling kohii.setUp(uri) will return an important object: a Binder . Binder object is the builder of a Playable and can be used to bind a Playable to a Target. Being a builder, it allows client to give more configuration via Binder.with(Params) method. You can call it in Kotlin DSL style like below: kohii . setUp ( uri ). with { tag = uniqueTag repeatMode = REPEAT_MODE_ONE } // this method returns the Binder object The bind method above is an instance method of Binder object. Binder allows Playback.Callback as a parameter. This is because this callback send the signal of a Playback being added to the manager. This event happens before the callback in bind method returns. Therefore, to be able to listen to the onAdded callback, Playback.Callback need to be added earlier. On the other hand, the PlaybackEventListener can be added at any time. Let's take a look at the setup below: kohii . setUp ( uri ) // this return a Binder . with { callback = myCallback } // the same Binder, now with callback installed . bind ( playerView ) { playback - playback . addPlaybackEventListener ( playbackListener ) } With this setup, your myCallback will receive onAdded callback as expected. Also, it's worth notice that adding PlaybackEventListener will allow the client to receive the signal immediately. It means that, if the Video is playing, and client call playback.addPlaybackEventListener(playbackListener) , its onPlay() method will be called immediately. This allow client to response to the Playback state as soon as possible. For example showing or hidding thumbnail on relevent situations. 2.0 Setup Videos in NestedScrollView/~~ScrollView~~ Kohii support every possible ViewGroup , including NestScrollView or ScrollView . It's worth mention that NestedScrollView is superior to ScrollView , and is updated more frequently, so I recommend to use NestedScrollView instead. Below setup assumes the host is NestedScrollView . The same steps as before are required. As NestedScrollView do not recycle its child like RecyclerView , for each PlayerView we just need to repeat the setup for one Video: // videosToViews is of type Collection Pair Uri, PlayerView videosToViews . forEach { ( uri , playerView ) - kohii . setUp ( uri ). bind ( playerView ) } (I use collection of Pairs just for demo purpose. It should be designed carefully in practice). With this setup, you will have what is done for one Video in one PlayerView, plus: PlayerView will only prepare the resource (setup Player instance, prepare MediaSource, etc) when it is partly or fully visible to user. When a PlayerView is scrolled off screen, Kohii will automatically release its resource. This means that, even if you setup for 100 Uris to 100 PlayerViews, only those are visible will be active and consume resource (networking, Video decoding, etc) . 3.0 Setup Videos in RecyclerView Setting up Videos in RecyclerView is pretty much the same with NestedScrollView : just setup the uri whenever you have one for a PlayerView. But because RecyclerView automatically recycle its Views, you don't need to worry about anything. 4.0 Setup Videos in ViewPager whose pages are Fragments","title":"Common usages of Kohii"},{"location":"usages/#common-usages-of-kohii","text":"","title":"Common usages of Kohii"},{"location":"usages/#required-common-setup-for-kohii","text":"Assuming that you are using Kohii in a Fragment MyFragment , having a ViewGroup to contains some Videos. Below steps are to initialize Kohii before going any further. \u25a0 Initialize Kohii instance. It will be global and unique in your application lifecycle. val kohii = Kohii [ this @MyFragment ] \u25a0 Register current Fragment as the PlaybackManager . In Kohii , PlaybackManager helps manage all Videos in a Fragment or Activity. When using with ViewPager whose pages are Fragment s, we need to register both the parent Fragment (who owns the ViewPager ) and child Fragment (who is page of the ViewPager ). // Calling this will return a ``PlaybackManager`` instance val manager = kohii . register ( this @MyFragment ) \u25a0 Register the ViewGroup that contains the Videos inside. It may or may not be the direct parent of the Video View. In Kohii , a View that is used to render a Video playback is called Target and the ViewGroup which is the parent of a Target is called host . To help the ViewGroup watch its Targets, Kohii has the TargetHost to wrap this ViewGroup. Here is how we create a TargetHost by registering the ViewGroup : // This returns a nullable TargetHost instance // The result is null when the View is already registered before, not null otherwise. val host = manager . registerTargetHost ( videoHostViewGroup ) That is enough for a common usage. In practice, your setup will look like below: // Setup **Kohii** from Fragment s onViewCreated or Activity s onCreate method. override fun onViewCreated ( view : View , savedInstanceState : Bundle ? ) { super . onViewCreated ( view , savedInstanceState ) val kohii = Kohii [ this @MyFragment ] val manager = kohii . register ( this @MyFragment ) val host = manager . registerTargetHost ( videoHostViewGroup ) !! // TODO anything else } In basic usage, you do not need to get returned value of the setting above: // Setup **Kohii** from Fragment s onViewCreated or Activity s onCreate method. override fun onViewCreated ( view : View , savedInstanceState : Bundle ? ) { super . onViewCreated ( view , savedInstanceState ) Kohii [ this @MyFragment ]. also { kohii - kohii . register ( this @MyFragment , videoHostViewGroup ) // an overloaded version of register(). } // TODO anything else }","title":"Required: common setup for Kohii"},{"location":"usages/#usages","text":"","title":"Usages"},{"location":"usages/#10-one-video-to-one-existing-playerview","text":"In Kohii , the term binding stands for the act in that a Video resource provided by client being converted to playable resource (eg: a Uri to a MediaSource object), and then being prepared to the Surface to play the Video). It is just as simple concept as videoView.setVideoPath(videoUri) , but more powerful behavior. This is the most common/simple usage of Kohii . Assuming that you have an uri, and a PlayerView to show the Video named playerView , below is how to do it: kohii . setUp ( uri ). bind ( playerView ) Note that, the required steps above must be done first. Or else there will be no TargetHost to watch the PlayerView , and your client will throw exception. With that one line , you will have the following done: The Uri you provided will be wrapped in a MediaItem object, and then be used to create a Playable object. This object has a Bridge object inside it contains all necessary resources for a Video playback: factory to build MediaSource from the Uri , pool to acquire Player instance for the playback, all preparation logic are done automatically and will wait for the trigger to start or pause the Video. A Playback object is created using the Playable above, and is added to the PlaybackManager we created before. This PlaybackManager will find the correct TargetHost for the PlayerView , listen to its behavior (scrolled, attached, detached, etc) to trigger the playback start/pause. From this point onward, you have the Video to be automatically played/paused once user scrolls the list such that the PlayerView is visible more (will play) or less (will pause) than 65% of its area. Also, to ensure the playback is automatic, Kohii will forcefully disable the PlayerView 's PlayerControlView even if you set it before. To have manual playback control enabled, you need some additional configuration which will be discussed in next usage.","title":"1.0 One video to one existing PlayerView"},{"location":"usages/#11-same-as-10-with-listeners","text":"In practice, client wants to observe the status of the Playback. Kohii provides a listener system to fulfill this requirement. A Playback has the following important listeners you can use: Playback.Callback: listen to status of a Playback object: interface Callback { /** Called when the Playback is added to the PlaybackManager */ fun onAdded ( playback : Playback * ) {} /** Called when the Playback becomes active. It is equal to that the target PlayerView is attached to the Window */ fun onActive ( playback : Playback * ) {} /** Called when the Playback becomes inactive. It is equal to that the target PlayerView is detached from the Window */ fun onInActive ( playback : Playback * ) {} /** Called when the Playback is removed from the PlaybackManager */ fun onRemoved ( playback : Playback * ) {} } PlaybackEventListener: listen to play/pause/end event of a playback: interface PlaybackEventListener { /** Called when a Video is rendered on the Surface for the first time */ fun onFirstFrameRendered ( playback : Playback * ) {} /** * Called when buffering status of the playback is changed. * * @param playWhenReady true if the Video will start playing once buffered enough, false otherwise. */ fun onBuffering ( playback : Playback * , playWhenReady : Boolean ) { } // ExoPlayer state: 2 /** Called when the Video starts playing */ fun onPlay ( playback : Playback * ) {} // ExoPlayer state: 3, play flag: true /** Called when the Video is paused */ fun onPause ( playback : Playback * ) {} // ExoPlayer state: 3, play flag: false /** Called when the Video finishes its playback */ fun onEnd ( playback : Playback * ) {} // ExoPlayer state: 4 /** Called when right before Playback s play() method is called. Maybe called multiple times */ fun beforePlay ( playback : Playback * ) {} /** Called when right after Playback s pause() method is called. Maybe called multiple times */ fun afterPause ( playback : Playback * ) {} } Before going into the actual setup, let's take a look at what we have done and what we got. First, the bind method above has the full signature as below: fun CONTAINER : Any bind ( target : CONTAINER , callback : (( Playback OUTPUT ) - Unit )? = null ) Here you can see a callback that is null by default. This callback send back to client the Playback instance that was created by the setup. Using this Playback , client can have further setup, like adding listeners. Second, calling kohii.setUp(uri) will return an important object: a Binder . Binder object is the builder of a Playable and can be used to bind a Playable to a Target. Being a builder, it allows client to give more configuration via Binder.with(Params) method. You can call it in Kotlin DSL style like below: kohii . setUp ( uri ). with { tag = uniqueTag repeatMode = REPEAT_MODE_ONE } // this method returns the Binder object The bind method above is an instance method of Binder object. Binder allows Playback.Callback as a parameter. This is because this callback send the signal of a Playback being added to the manager. This event happens before the callback in bind method returns. Therefore, to be able to listen to the onAdded callback, Playback.Callback need to be added earlier. On the other hand, the PlaybackEventListener can be added at any time. Let's take a look at the setup below: kohii . setUp ( uri ) // this return a Binder . with { callback = myCallback } // the same Binder, now with callback installed . bind ( playerView ) { playback - playback . addPlaybackEventListener ( playbackListener ) } With this setup, your myCallback will receive onAdded callback as expected. Also, it's worth notice that adding PlaybackEventListener will allow the client to receive the signal immediately. It means that, if the Video is playing, and client call playback.addPlaybackEventListener(playbackListener) , its onPlay() method will be called immediately. This allow client to response to the Playback state as soon as possible. For example showing or hidding thumbnail on relevent situations.","title":"1.1 Same as 1.0, with listeners"},{"location":"usages/#20-setup-videos-in-nestedscrollviewscrollview","text":"Kohii support every possible ViewGroup , including NestScrollView or ScrollView . It's worth mention that NestedScrollView is superior to ScrollView , and is updated more frequently, so I recommend to use NestedScrollView instead. Below setup assumes the host is NestedScrollView . The same steps as before are required. As NestedScrollView do not recycle its child like RecyclerView , for each PlayerView we just need to repeat the setup for one Video: // videosToViews is of type Collection Pair Uri, PlayerView videosToViews . forEach { ( uri , playerView ) - kohii . setUp ( uri ). bind ( playerView ) } (I use collection of Pairs just for demo purpose. It should be designed carefully in practice). With this setup, you will have what is done for one Video in one PlayerView, plus: PlayerView will only prepare the resource (setup Player instance, prepare MediaSource, etc) when it is partly or fully visible to user. When a PlayerView is scrolled off screen, Kohii will automatically release its resource. This means that, even if you setup for 100 Uris to 100 PlayerViews, only those are visible will be active and consume resource (networking, Video decoding, etc) .","title":"2.0 Setup Videos in NestedScrollView/~~ScrollView~~"},{"location":"usages/#30-setup-videos-in-recyclerview","text":"Setting up Videos in RecyclerView is pretty much the same with NestedScrollView : just setup the uri whenever you have one for a PlayerView. But because RecyclerView automatically recycle its Views, you don't need to worry about anything.","title":"3.0 Setup Videos in RecyclerView"},{"location":"usages/#40-setup-videos-in-viewpager-whose-pages-are-fragments","text":"","title":"4.0 Setup Videos in ViewPager whose pages are Fragments"}]}